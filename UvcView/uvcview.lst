Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 1
uvcview.asm



      1					 .486p
      2	00000000			 model flat
      3					 ideal
      4
      5		  =0000			 vga=0
      6		  =0001			 vga=1
      7
      8					 if vga
      9					 ; 640*480
     10		  =0280			   Ix=640/1
     11		  =01E0			   Iy=480/1
     12		  =0140			   Ox=Ix/2
     13		  =00F0			   Oy=Iy/2
     14					 else
     15					 ; 320*240
     16					   Ix=640/2
     17					   Iy=480/2
     18					   Ox=Ix/1
     19					   Oy=Iy/1
     20					 endif
     21
     22					 extrn DosBeep:near
     23					 extrn DosClose:near
     24					 extrn DevCloseDC:near
     25					 extrn DosCloseEventSem:near
     26					 extrn DosCreateEventSem:near
     27					 extrn DosCreateThread:near
     28					 extrn DosExit:near
     29					 extrn DosFreeMem:near
     30					 extrn DosOpen:near
     31					 extrn DevOpenDC:near
     32					 extrn DosPostEventSem:near
     33					 extrn DosResetEventSem:near
     34					 extrn DosSetPriority:near
     35					 extrn DosSleep:near
     36					 extrn DosSuspendThread:near
     37					 extrn DosWaitEventSem:near
     38					 extrn DosWrite:near
     39
     40					 extrn GpiBitBlt:near
     41					 extrn GpiCreateBitmap:near
     42					 extrn GpiCreatePS:near
     43					 extrn GpiDeleteBitmap:near
     44					 extrn GpiDestroyPS:near
     45					 extrn GpiSetBitmap:near
     46					 extrn GpiSetBitmapBits:near
     47
     48					 extrn RexxStart:near
     49
     50					 extrn UsbCancelTransfer:near
     51					 extrn UsbClose:near
     52					 extrn UsbCtrlMessage:near
     53					 extrn UsbIsoClose:near
     54					 extrn UsbIsoOpen:near
     55					 extrn UsbOpen:near
     56					 extrn UsbQueryDeviceReport:near
     57					 extrn UsbQueryNumberDevices:near
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 2
uvcview.asm



     58					 extrn UsbStartIsoTransfer:near
     59
     60					 extrn WinBeginPaint:near
     61					 extrn WinCreateMsgQueue:near
     62					 extrn WinCreateStdWindow:near
     63					 extrn WinCreateWindow:near
     64					 extrn WinDefWindowProc:near
     65					 extrn WinDestroyMsgQueue:near
     66					 extrn WinDestroyWindow:near
     67					 extrn WinDispatchMsg:near
     68					 extrn WinEndPaint:near
     69					 extrn WinGetMsg:near
     70					 extrn WinInitialize:near
     71					 extrn WinInvalidateRect:near
     72					 extrn WinLoadString:near
     73					 extrn WinMessageBox:near
     74					 extrn WinPostMsg:near
     75					 extrn WinPostQueueMsg:near
     76					 extrn WinQuerySysValue:near
     77					 extrn WinRegisterClass:near
     78					 extrn WinSetActiveWindow:near
     79					 extrn WinSetWindowPos:near
     80					 extrn WinSubclassWindow:near
     81					 extrn WinTerminate:near
     82
     83	00000000			 stack 8192
     84
     85	00002000			 dataseg ; must	be first
     86		  =F000			 dSize=61440 ; max data	size
     87		  =00010000		 iSize=65536 ; data+parm size
     88		  =0004			 iUsed=4 ; number of buffers
     89		  =00040000		 tSize=iSize*iUsed ; total
     90	00000000  040000*(00)		 IsoData db tSize dup(0)
     91
     92					 include 'uvcview.inc'
1    93					 macro qTable qTableRow,qf0,qf1,qf2,qf3,qf4,qf5,qf6,qf7
1    94					 qTableRow&0=qf0
1    95					 qTableRow&1=qf1
1    96					 qTableRow&2=qf2
1    97					 qTableRow&3=qf3
1    98					 qTableRow&4=qf4
1    99					 qTableRow&5=qf5
1   100					 qTableRow&6=qf6
1   101					 qTableRow&7=qf7
1   102					 endm
1   103
1   104					 ; chrominance - quantization factors
1   105					 qTable	c0,012,020,030,040,084,084,084,084
2   106		  =000C			 c00=012
2   107		  =0014			 c01=020
2   108		  =001E			 c02=030
2   109		  =0028			 c03=040
2   110		  =0054			 c04=084
2   111		  =0054			 c05=084
2   112		  =0054			 c06=084
2   113		  =0054			 c07=084
1   114					 qTable	c1,020,032,042,054,084,084,084,084
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 3
uvcview.asm



2   115		  =0014			 c10=020
2   116		  =0020			 c11=032
2   117		  =002A			 c12=042
2   118		  =0036			 c13=054
2   119		  =0054			 c14=084
2   120		  =0054			 c15=084
2   121		  =0054			 c16=084
2   122		  =0054			 c17=084
1   123					 qTable	c2,030,042,056,066,084,084,084,084
2   124		  =001E			 c20=030
2   125		  =002A			 c21=042
2   126		  =0038			 c22=056
2   127		  =0042			 c23=066
2   128		  =0054			 c24=084
2   129		  =0054			 c25=084
2   130		  =0054			 c26=084
2   131		  =0054			 c27=084
1   132					 qTable	c3,040,054,066,084,084,084,084,084
2   133		  =0028			 c30=040
2   134		  =0036			 c31=054
2   135		  =0042			 c32=066
2   136		  =0054			 c33=084
2   137		  =0054			 c34=084
2   138		  =0054			 c35=084
2   139		  =0054			 c36=084
2   140		  =0054			 c37=084
1   141					 qTable	c4,084,084,084,084,084,084,084,084
2   142		  =0054			 c40=084
2   143		  =0054			 c41=084
2   144		  =0054			 c42=084
2   145		  =0054			 c43=084
2   146		  =0054			 c44=084
2   147		  =0054			 c45=084
2   148		  =0054			 c46=084
2   149		  =0054			 c47=084
1   150					 qTable	c5,084,084,084,084,084,084,084,084
2   151		  =0054			 c50=084
2   152		  =0054			 c51=084
2   153		  =0054			 c52=084
2   154		  =0054			 c53=084
2   155		  =0054			 c54=084
2   156		  =0054			 c55=084
2   157		  =0054			 c56=084
2   158		  =0054			 c57=084
1   159					 qTable	c6,084,084,084,084,084,084,084,084
2   160		  =0054			 c60=084
2   161		  =0054			 c61=084
2   162		  =0054			 c62=084
2   163		  =0054			 c63=084
2   164		  =0054			 c64=084
2   165		  =0054			 c65=084
2   166		  =0054			 c66=084
2   167		  =0054			 c67=084
1   168					 qTable	c7,084,084,084,084,084,084,084,084
2   169		  =0054			 c70=084
2   170		  =0054			 c71=084
2   171		  =0054			 c72=084
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 4
uvcview.asm



2   172		  =0054			 c73=084
2   173		  =0054			 c74=084
2   174		  =0054			 c75=084
2   175		  =0054			 c76=084
2   176		  =0054			 c77=084
1   177
1   178					 ; luminance - quantization factors
1   179					 qTable	y0,008,010,010,010,011,013,015,018
2   180		  =0008			 y00=008
2   181		  =000A			 y01=010
2   182		  =000A			 y02=010
2   183		  =000A			 y03=010
2   184		  =000B			 y04=011
2   185		  =000D			 y05=013
2   186		  =000F			 y06=015
2   187		  =0012			 y07=018
1   188					 qTable	y1,010,014,014,014,014,014,014,015
2   189		  =000A			 y10=010
2   190		  =000E			 y11=014
2   191		  =000E			 y12=014
2   192		  =000E			 y13=014
2   193		  =000E			 y14=014
2   194		  =000E			 y15=014
2   195		  =000E			 y16=014
2   196		  =000F			 y17=015
1   197					 qTable	y2,010,014,014,015,017,019,022,026
2   198		  =000A			 y20=010
2   199		  =000E			 y21=014
2   200		  =000E			 y22=014
2   201		  =000F			 y23=015
2   202		  =0011			 y24=017
2   203		  =0013			 y25=019
2   204		  =0016			 y26=022
2   205		  =001A			 y27=026
1   206					 qTable	y3,010,014,015,016,018,021,024,028
2   207		  =000A			 y30=010
2   208		  =000E			 y31=014
2   209		  =000F			 y32=015
2   210		  =0010			 y33=016
2   211		  =0012			 y34=018
2   212		  =0015			 y35=021
2   213		  =0018			 y36=024
2   214		  =001C			 y37=028
1   215					 qTable	y4,011,014,017,018,020,022,026,030
2   216		  =000B			 y40=011
2   217		  =000E			 y41=014
2   218		  =0011			 y42=017
2   219		  =0012			 y43=018
2   220		  =0014			 y44=020
2   221		  =0016			 y45=022
2   222		  =001A			 y46=026
2   223		  =001E			 y47=030
1   224					 qTable	y5,013,014,019,021,022,026,029,034
2   225		  =000D			 y50=013
2   226		  =000E			 y51=014
2   227		  =0013			 y52=019
2   228		  =0015			 y53=021
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 5
uvcview.asm



2   229		  =0016			 y54=022
2   230		  =001A			 y55=026
2   231		  =001D			 y56=029
2   232		  =0022			 y57=034
1   233					 qTable	y6,015,014,022,024,026,029,033,038
2   234		  =000F			 y60=015
2   235		  =000E			 y61=014
2   236		  =0016			 y62=022
2   237		  =0018			 y63=024
2   238		  =001A			 y64=026
2   239		  =001D			 y65=029
2   240		  =0021			 y66=033
2   241		  =0026			 y67=038
1   242					 qTable	y7,018,015,026,028,030,034,038,042
2   243		  =0012			 y70=018
2   244		  =000F			 y71=015
2   245		  =001A			 y72=026
2   246		  =001C			 y73=028
2   247		  =001E			 y74=030
2   248		  =0022			 y75=034
2   249		  =0026			 y76=038
2   250		  =002A			 y77=042
1   251
1   252					 ; precalculated cos(a*pi/16)*2E30
1   253		  =40000000		 cos0a = 1073741824 ; cos(0pi/16)*2E30
1   254		  =3EC52F9F		 cos1a = 1053110175 ; cos(1pi/16)*2E30
1   255		  =3B20D79D		 cos2a = 0992008093 ; cos(2pi/16)*2E30
1   256		  =3536CC51		 cos3a = 0892783697 ; cos(3pi/16)*2E30
1   257		  =2D413CCC		 cos4a = 0759250124 ; cos(4pi/16)*2E30
1   258		  =238E7673		 cos5a = 0596538995 ; cos(5pi/16)*2E30
1   259		  =187DE2A6		 cos6a = 0410903206 ; cos(6pi/16)*2E30
1   260		  =0C7C5C1E		 cos7a = 0209476638 ; cos(7pi/16)*2E30
1   261
1   262	00040000			 udataseg
1   263	00000000  0100*(????????)	 mcu dd	4*64 dup(?)
1   264
1   265					 ; precalculated aanfdct coefficients
1   266		  =2D413CCC		 a1 = cos4a ; cos(4pi/16)*2E30
1   267		  =22A2F4F7		 a2 = cos2a-cos6a ; (cos(2pi/16)-cos(6pi/16))*2E30
1   268		  =2D413CCC		 a3 = cos4a ; cos(4pi/16)*2E30
1   269		  =539EBA43		 a4 = cos2a+cos6a ; (cos(2pi/16)+cos(6pi/16))*2E30
1   270		  =187DE2A6		 a5 = cos6a ; cos(6pi/16)*2E30
1   271
1   272					 ; aanfdct algorithm (29 additions and 5 multiplications)
1   273					 ; Y.Arai, T.Agui, M.Nakajima. "A Fast DCT-SQ Scheme for Images".
1   274					 ; Transactions	of IEICE, vol. E71, nø.	11, 1988, pp. 1095-1097.
1   275					 ;    step1    ,  step2	,  step3 ,  step4 ,  step5 ,  step6
1   276					 ; b0=m[0]+m[7],c0=b0+b3,d2=c2+c3,e2=d2*a1,	   ,m[0]=c0+c1
1   277					 ; b7=m[0]-m[7],c3=b0-b3,	 ,	  ,	   ,m[4]=c0-c1
1   278					 ; b1=m[1]+m[6],c1=b1+b2,	 ,	  ,	   ,m[2]=c3+e2
1   279					 ; b6=m[1]-m[6],c2=b1-b2,	 ,	  ,	   ,m[6]=c3-e2
1   280					 ; b2=m[2]+m[5],c4=b4+b5,d8=c4-c6,e4=c4*a2,f4=e4+e8,m[5]=f7+f4
1   281					 ; b5=m[2]-m[5],c5=b5+b6,	 ,e5=c5*a3,f6=e6+e8,m[3]=f7-f4
1   282					 ; b3=m[3]+m[4],c6=b6+b7,	 ,e6=c6*a4,f5=b7+e5,m[1]=f5+f6
1   283					 ; b4=m[3]-m[4],	,	 ,e8=d8*a5,f7=b7-e5,m[7]=f5-f6
1   284					 ;    step1    ,  step2	,  step3 ,  step4 ,  step5 ,  step6
1   285					 ; derived from	Stefan Kuhr, thesis2side.pdf, figure 3.10
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 6
uvcview.asm



1   286
1   287	00000400			 codeseg
1   288	00000000			 proc aanfdct near
1   289					 ; point to first matrix
1   290	00000000  2B ED			   sub ebp,ebp ; offset
1   291	00000002			 label NextColsPass near
1   292					 ; b3=m[3]+m[4],b4=m[3]-m[4]
1   293	00000002  8B 95	00000060r	   mov edx,[mcu+ebp+3*8*4]
1   294	00000008  8B BD	00000080r	   mov edi,[mcu+ebp+4*8*4]
1   295	0000000E  8D 34	3A		   lea esi,[edx+edi] ; b3
1   296	00000011  2B D7			   sub edx,edi ; b4
1   297	00000013  56			   push	esi ; b3
1   298					 ; b2=m[2]+m[5],b5=m[2]-m[5]
1   299	00000014  8B 8D	00000040r	   mov ecx,[mcu+ebp+2*8*4]
1   300	0000001A  8B BD	000000A0r	   mov edi,[mcu+ebp+5*8*4]
1   301	00000020  8D 34	39		   lea esi,[ecx+edi] ; b2
1   302	00000023  2B CF			   sub ecx,edi ; b5
1   303	00000025  56			   push	esi ; b2
1   304					 ; b1=m[1]+m[6],b6=m[1]-m[6]
1   305	00000026  8B 9D	00000020r	   mov ebx,[mcu+ebp+1*8*4]
1   306	0000002C  8B BD	000000C0r	   mov edi,[mcu+ebp+6*8*4]
1   307	00000032  8D 34	3B		   lea esi,[ebx+edi] ; b1
1   308	00000035  2B DF			   sub ebx,edi ; b6
1   309	00000037  56			   push	esi ; b1
1   310					 ; b0=m[0]+m[7],b7=m[0]-m[7]
1   311	00000038  8B 85	00000000r	   mov eax,[mcu+ebp+0*8*4]
1   312	0000003E  8B BD	000000E0r	   mov edi,[mcu+ebp+7*8*4]
1   313	00000044  8D 34	38		   lea esi,[eax+edi] ; b0
1   314	00000047  2B C7			   sub eax,edi ; b7
1   315	00000049  56			   push	esi ; b0
1   316					 ; c5=b6+b5,c4=b4+b5,c6=b6+b7
1   317	0000004A  8D 34	0B		   lea esi,[ebx+ecx] ; c5
1   318	0000004D  8D 0C	0A		   lea ecx,[edx+ecx] ; c4
1   319	00000050  8D 1C	03		   lea ebx,[ebx+eax] ; c6
1   320	00000053  8B D1			   mov edx,ecx ; c4
1   321	00000055  50			   push	eax ; b7
1   322					 ; d8=c4-c6,e8=d8*a5
1   323	00000056  2B D3			   sub edx,ebx ; d8
1   324	00000058  B8 187DE2A6		   mov eax,a5 ;	a5
1   325	0000005D  F7 EA			   imul	edx ; e8/2E2
1   326	0000005F  0F A4	C2 02		   shld	edx,eax,2 ; e8
1   327	00000063  8B FA			   mov edi,edx ; e8
1   328					 ; e4=c4*a2,f4=e4+e8
1   329	00000065  B8 22A2F4F7		   mov eax,a2 ;	a2
1   330	0000006A  F7 E9			   imul	ecx ; e4/2E2
1   331	0000006C  0F A4	C2 02		   shld	edx,eax,2 ; e4
1   332	00000070  8D 0C	3A		   lea ecx,[edx+edi] ; f4
1   333					 ; e6=c6*a4,f6=e6+e8
1   334	00000073  B8 539EBA43		   mov eax,a4 ;	a4
1   335	00000078  F7 EB			   imul	ebx ; e6/2E2
1   336	0000007A  0F A4	C2 02		   shld	edx,eax,2 ; e6
1   337	0000007E  8D 1C	3A		   lea ebx,[edx+edi] ; f6
1   338					 ; e5=c5*a3,f5=b7+e5,f7=b7-e5
1   339	00000081  B8 2D413CCC		   mov eax,a3 ;	a3
1   340	00000086  F7 EE			   imul	esi ; e5/2E2
1   341	00000088  0F A4	C2 02		   shld	edx,eax,2 ; e5
1   342	0000008C  5E			   pop esi ; b7
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 7
uvcview.asm



1   343	0000008D  8D 04	16		   lea eax,[esi+edx] ; f5
1   344	00000090  2B F2			   sub esi,edx ; f7
1   345					 ; m[5]=f7+f4,m[3]=f7-f4
1   346	00000092  8D 14	0E		   lea edx,[esi+ecx] ; m[5]
1   347	00000095  2B F1			   sub esi,ecx ; m[3]
1   348	00000097  89 95	000000A0r	   mov [mcu+ebp+5*8*4],edx
1   349	0000009D  89 B5	00000060r	   mov [mcu+ebp+3*8*4],esi
1   350	000000A3  5E			   pop esi ; b0
1   351	000000A4  5A			   pop edx ; b1
1   352					 ; m[1]=f5+f6,m[7]=f5-f6
1   353	000000A5  8D 0C	18		   lea ecx,[eax+ebx] ; m[1]
1   354	000000A8  2B C3			   sub eax,ebx ; m[7]
1   355	000000AA  89 8D	00000020r	   mov [mcu+ebp+1*8*4],ecx
1   356	000000B0  89 85	000000E0r	   mov [mcu+ebp+7*8*4],eax
1   357	000000B6  59			   pop ecx ; b2
1   358	000000B7  5B			   pop ebx ; b3
1   359					 ; c0=b0+b3,c3=b0-b3
1   360	000000B8  8D 3C	1E		   lea edi,[esi+ebx] ; c0
1   361	000000BB  2B F3			   sub esi,ebx ; c3
1   362					 ; c1=b1+b2,c2=b1-b2
1   363	000000BD  8D 1C	0A		   lea ebx,[edx+ecx] ; c1
1   364	000000C0  2B D1			   sub edx,ecx ; c2
1   365					 ; d2=c2+c3,e2=d2*a1
1   366	000000C2  03 D6			   add edx,esi ; d2
1   367	000000C4  B8 2D413CCC		   mov eax,a1 ;	a1
1   368	000000C9  F7 EA			   imul	edx ; e2/2E2
1   369	000000CB  0F A4	C2 02		   shld	edx,eax,2 ; e2
1   370					 ; m[2]=c3+e2,m[6]=c3-e2
1   371	000000CF  8D 0C	16		   lea ecx,[esi+edx] ; m[2]
1   372	000000D2  2B F2			   sub esi,edx ; m[6]
1   373	000000D4  89 8D	00000040r	   mov [mcu+ebp+2*8*4],ecx
1   374	000000DA  89 B5	000000C0r	   mov [mcu+ebp+6*8*4],esi
1   375					 ; m[0]=c0+c1,m[4]=c0-c1
1   376	000000E0  8D 04	1F		   lea eax,[edi+ebx] ; m[0]
1   377	000000E3  2B FB			   sub edi,ebx ; m[4]
1   378	000000E5  89 85	00000000r	   mov [mcu+ebp+0*8*4],eax
1   379	000000EB  89 BD	00000080r	   mov [mcu+ebp+4*8*4],edi
1   380					 ; bump	to next	matrix column
1   381	000000F1  8D 6D	04		   lea ebp,[ebp+1*4] ; offset
1   382	000000F4  F7 C5	0000001C	   test	ebp,01Ch ; eight
1   383	000000FA  0F 85	FFFFFF02	   jnz NextColsPass
1   384					 ; point to start of matrix
1   385	00000100  8D 6D	E0		   lea ebp,[ebp-8*4] ; offset
1   386	00000103			 label NextRowsPass near
1   387					 ; b3=m[3]+m[4],b4=m[3]-m[4]
1   388	00000103  8B 95	0000000Cr	   mov edx,[mcu+ebp+3*1*4]
1   389	00000109  8B BD	00000010r	   mov edi,[mcu+ebp+4*1*4]
1   390	0000010F  8D 34	3A		   lea esi,[edx+edi] ; b3
1   391	00000112  2B D7			   sub edx,edi ; b4
1   392	00000114  56			   push	esi ; b3
1   393					 ; b2=m[2]+m[5],b5=m[2]-m[5]
1   394	00000115  8B 8D	00000008r	   mov ecx,[mcu+ebp+2*1*4]
1   395	0000011B  8B BD	00000014r	   mov edi,[mcu+ebp+5*1*4]
1   396	00000121  8D 34	39		   lea esi,[ecx+edi] ; b2
1   397	00000124  2B CF			   sub ecx,edi ; b5
1   398	00000126  56			   push	esi ; b2
1   399					 ; b1=m[1]+m[6],b6=m[1]-m[6]
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 8
uvcview.asm



1   400	00000127  8B 9D	00000004r	   mov ebx,[mcu+ebp+1*1*4]
1   401	0000012D  8B BD	00000018r	   mov edi,[mcu+ebp+6*1*4]
1   402	00000133  8D 34	3B		   lea esi,[ebx+edi] ; b1
1   403	00000136  2B DF			   sub ebx,edi ; b6
1   404	00000138  56			   push	esi ; b1
1   405					 ; b0=m[0]+m[7],b7=m[0]-m[7]
1   406	00000139  8B 85	00000000r	   mov eax,[mcu+ebp+0*1*4]
1   407	0000013F  8B BD	0000001Cr	   mov edi,[mcu+ebp+7*1*4]
1   408	00000145  8D 34	38		   lea esi,[eax+edi] ; b0
1   409	00000148  2B C7			   sub eax,edi ; b7
1   410	0000014A  56			   push	esi ; b0
1   411					 ; c5=b6+b5,c4=b4+b5,c6=b6+b7
1   412	0000014B  8D 34	0B		   lea esi,[ebx+ecx] ; c5
1   413	0000014E  8D 0C	0A		   lea ecx,[edx+ecx] ; c4
1   414	00000151  8D 1C	03		   lea ebx,[ebx+eax] ; c6
1   415	00000154  8B D1			   mov edx,ecx ; c4
1   416	00000156  50			   push	eax ; b7
1   417					 ; d8=c4-c6,e8=d8*a5
1   418	00000157  2B D3			   sub edx,ebx ; d8
1   419	00000159  B8 187DE2A6		   mov eax,a5 ;	a5
1   420	0000015E  F7 EA			   imul	edx ; e8/2E2
1   421	00000160  0F A4	C2 02		   shld	edx,eax,2 ; e8
1   422	00000164  8B FA			   mov edi,edx ; e8
1   423					 ; e4=c4*a2,f4=e4+e8
1   424	00000166  B8 22A2F4F7		   mov eax,a2 ;	a2
1   425	0000016B  F7 E9			   imul	ecx ; e4/2E2
1   426	0000016D  0F A4	C2 02		   shld	edx,eax,2 ; e4
1   427	00000171  8D 0C	3A		   lea ecx,[edx+edi] ; f4
1   428					 ; e6=c6*a4,f6=e6+e8
1   429	00000174  B8 539EBA43		   mov eax,a4 ;	a4
1   430	00000179  F7 EB			   imul	ebx ; e6/2E2
1   431	0000017B  0F A4	C2 02		   shld	edx,eax,2 ; e6
1   432	0000017F  8D 1C	3A		   lea ebx,[edx+edi] ; f6
1   433					 ; e5=c5*a3,f5=b7+e5,f7=b7-e5
1   434	00000182  B8 2D413CCC		   mov eax,a3 ;	a3
1   435	00000187  F7 EE			   imul	esi ; e5/2E2
1   436	00000189  0F A4	C2 02		   shld	edx,eax,2 ; e5
1   437	0000018D  5E			   pop esi ; b7
1   438	0000018E  8D 04	16		   lea eax,[esi+edx] ; f5
1   439	00000191  2B F2			   sub esi,edx ; f7
1   440					 ; m[5]=f7+f4,m[3]=f7-f4
1   441	00000193  8D 14	0E		   lea edx,[esi+ecx] ; m[5]
1   442	00000196  2B F1			   sub esi,ecx ; m[3]
1   443	00000198  89 95	00000014r	   mov [mcu+ebp+5*1*4],edx
1   444	0000019E  89 B5	0000000Cr	   mov [mcu+ebp+3*1*4],esi
1   445	000001A4  5E			   pop esi ; b0
1   446	000001A5  5A			   pop edx ; b1
1   447					 ; m[1]=f5+f6,m[7]=f5-f6
1   448	000001A6  8D 0C	18		   lea ecx,[eax+ebx] ; m[1]
1   449	000001A9  2B C3			   sub eax,ebx ; m[7]
1   450	000001AB  89 8D	00000004r	   mov [mcu+ebp+1*1*4],ecx
1   451	000001B1  89 85	0000001Cr	   mov [mcu+ebp+7*1*4],eax
1   452	000001B7  59			   pop ecx ; b2
1   453	000001B8  5B			   pop ebx ; b3
1   454					 ; c0=b0+b3,c3=b0-b3
1   455	000001B9  8D 3C	1E		   lea edi,[esi+ebx] ; c0
1   456	000001BC  2B F3			   sub esi,ebx ; c3
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 9
uvcview.asm



1   457					 ; c1=b1+b2,c2=b1-b2
1   458	000001BE  8D 1C	0A		   lea ebx,[edx+ecx] ; c1
1   459	000001C1  2B D1			   sub edx,ecx ; c2
1   460					 ; d2=c2+c3,e2=d2*a1
1   461	000001C3  03 D6			   add edx,esi ; d2
1   462	000001C5  B8 2D413CCC		   mov eax,a1 ;	a1
1   463	000001CA  F7 EA			   imul	edx ; e2/2E2
1   464	000001CC  0F A4	C2 02		   shld	edx,eax,2 ; e2
1   465					 ; m[2]=c3+e2,m[6]=c3-e2
1   466	000001D0  8D 0C	16		   lea ecx,[esi+edx] ; m[2]
1   467	000001D3  2B F2			   sub esi,edx ; m[6]
1   468	000001D5  89 8D	00000008r	   mov [mcu+ebp+2*1*4],ecx
1   469	000001DB  89 B5	00000018r	   mov [mcu+ebp+6*1*4],esi
1   470					 ; m[0]=c0+c1,m[4]=c0-c1
1   471	000001E1  8D 04	1F		   lea eax,[edi+ebx] ; m[0]
1   472	000001E4  2B FB			   sub edi,ebx ; m[4]
1   473	000001E6  89 85	00000000r	   mov [mcu+ebp+0*1*4],eax
1   474	000001EC  89 BD	00000010r	   mov [mcu+ebp+4*1*4],edi
1   475					 ; bump	to next	matrix row
1   476	000001F2  8D 6D	20		   lea ebp,[ebp+8*4] ; offset
1   477	000001F5  F7 C5	000000E0	   test	ebp,0E0h ; eight
1   478	000001FB  0F 85	FFFFFF02	   jnz NextRowsPass
1   479					 ; start next matrix
1   480	00000201  81 FD	00000400	   cmp ebp,400h	; done
1   481	00000207  0F 82	FFFFFDF5	   jb NextColsPass
1   482	0000020D  C3			   ret ; return
1   483	0000020E			 endp aanfdct
1   484
1   485					 ; precalculated aanidct coefficients
1   486		  =2D413CCC		 s1 = cos4a ; cos(4pi/16)*2E30
1   487		  =539EBA43		 s2 = cos2a+cos6a ; (cos(2pi/16)+cos(6pi/16))*2E30
1   488		  =2D413CCC		 s3 = cos4a ; cos(4pi/16)*2E30
1   489		  =22A2F4F7		 s4 = cos2a-cos6a ; (cos(2pi/16)-cos(6pi/16))*2E30
1   490		  =3B20D79D		 s5 = cos2a ; cos(2pi/16)*2E30
1   491
1   492					 ; aanidct algorithm (29 additions and 5 multiplications)
1   493					 ; Y.Arai, T.Agui, M.Nakajima. "A Fast DCT-SQ Scheme for Images".
1   494					 ; Transactions	of IEICE, vol. E71, nø.	11, 1988, pp. 1095-1097.
1   495					 ;    step1    ,  step2	,  step3 ,  step4 ,  step5 ,  step6
1   496					 ; b0=m[0]+m[4],	,d2=b2*s1,e2=d2-b6,f0=b0+b6,m[0]=f0+c3
1   497					 ; b4=m[0]-m[4],	,	 ,	  ,f6=b0-b6,m[7]=f0-c3
1   498					 ; b6=m[2]+m[6],	,	 ,	  ,f4=b4+e2,m[1]=f4+f7
1   499					 ; b2=m[2]-m[6],	,	 ,	  ,f2=b4-e2,m[6]=f4-f7
1   500					 ; b3=m[5]+m[3],c3=b1+b3,d5=b5*s2,e5=d8-d7,f7=e7-c3,m[2]=f2+f1
1   501					 ; b5=m[5]-m[3],c1=b1-b3,d1=c1*s3,e7=d8-d5,f1=d1-f7,m[5]=f2-f1
1   502					 ; b1=m[1]+m[7],c8=b5+b7,d7=b7*s4,	  ,f5=d5-f1,m[3]=f6+f5
1   503					 ; b7=m[1]-m[7],	,d8=c8*s5,	  ,	   ,m[4]=f6-f5
1   504					 ;    step1    ,  step2	,  step3 ,  step4 ,  step5 ,  step6
1   505					 ; derived from	Stefan Kuhr, thesis2side.pdf, figure 3.11
1   506
1   507	0000020E			 codeseg
1   508	0000020E			 proc aanidct near
1   509					 ; point to first matrix
1   510	0000020E  2B ED			   sub ebp,ebp ; offset
1   511	00000210			 label NextPassCols near
1   512					 ; b0=m[0]+m[4],b4=m[0]-m[4]
1   513	00000210  8B 9D	00000000r	   mov ebx,[mcu+ebp+0*8*4]
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 10
uvcview.asm



1   514	00000216  8B 85	00000080r	   mov eax,[mcu+ebp+4*8*4]
1   515	0000021C  8D 3C	03		   lea edi,[ebx+eax] ; b0
1   516	0000021F  2B D8			   sub ebx,eax ; b4
1   517					 ; b6=m[2]+m[6],b2=m[2]-m[6]
1   518	00000221  8B 8D	00000040r	   mov ecx,[mcu+ebp+2*8*4]
1   519	00000227  8B 85	000000C0r	   mov eax,[mcu+ebp+6*8*4]
1   520	0000022D  8D 34	01		   lea esi,[ecx+eax] ; b6
1   521	00000230  2B C8			   sub ecx,eax ; b2
1   522					 ; d2=b2*s1;e2=d2-b6
1   523	00000232  B8 2D413CCC		   mov eax,s1 ;	s1
1   524	00000237  F7 E9			   imul	ecx ; d2/2E4
1   525	00000239  0F A4	C2 03		   shld	edx,eax,3 ; d2
1   526	0000023D  2B D6			   sub edx,esi ; e2
1   527					 ; f0=b0+b6,f6=b0-b6
1   528	0000023F  8D 0C	37		   lea ecx,[edi+esi] ; f0
1   529	00000242  2B FE			   sub edi,esi ; f6
1   530					 ; f4=b4+e2,f2=b4-e2
1   531	00000244  8D 04	13		   lea eax,[ebx+edx] ; f4
1   532	00000247  2B DA			   sub ebx,edx ; f2
1   533	00000249  57			   push	edi ; f6
1   534	0000024A  53			   push	ebx ; f2
1   535	0000024B  50			   push	eax ; f4
1   536	0000024C  51			   push	ecx ; f0
1   537					 ; b3=m[5]+m[3],b5=m[5]-m[3]
1   538	0000024D  8B 9D	000000A0r	   mov ebx,[mcu+ebp+5*8*4]
1   539	00000253  8B 85	00000060r	   mov eax,[mcu+ebp+3*8*4]
1   540	00000259  8D 3C	03		   lea edi,[ebx+eax] ; b3
1   541	0000025C  2B D8			   sub ebx,eax ; b5
1   542					 ; b1=m[1]+m[7],b7=m[1]-m[7]
1   543	0000025E  8B 8D	00000020r	   mov ecx,[mcu+ebp+1*8*4]
1   544	00000264  8B 85	000000E0r	   mov eax,[mcu+ebp+7*8*4]
1   545	0000026A  8D 34	01		   lea esi,[ecx+eax] ; b1
1   546	0000026D  2B C8			   sub ecx,eax ; b7
1   547					 ; c3=b1+b3,c1=b1-b3
1   548	0000026F  8D 04	3E		   lea eax,[esi+edi] ; c3
1   549	00000272  2B F7			   sub esi,edi ; c1
1   550	00000274  50			   push	eax ; c3
1   551					 ; c8=b5+b7,d8=c8*s5
1   552	00000275  8D 14	0B		   lea edx,[ebx+ecx] ; c8
1   553	00000278  B8 3B20D79D		   mov eax,s5 ;	s5
1   554	0000027D  F7 EA			   imul	edx ; d8/2E4
1   555	0000027F  0F A4	C2 03		   shld	edx,eax,3 ; d8
1   556	00000283  8B FA			   mov edi,edx ; d8
1   557					 ; d7=b7*s4,e5=d8-d7
1   558	00000285  B8 22A2F4F7		   mov eax,s4 ;	s4
1   559	0000028A  F7 E9			   imul	ecx ; d7/2E4
1   560	0000028C  0F A4	C2 03		   shld	edx,eax,3 ; d7
1   561	00000290  8B CF			   mov ecx,edi ; d8
1   562	00000292  2B FA			   sub edi,edx ; e5
1   563					 ; d5=b5*s2,e7=d8-d5
1   564	00000294  B8 539EBA43		   mov eax,s2 ;	s2
1   565	00000299  F7 EB			   imul	ebx ; d5/2E4
1   566	0000029B  0F A4	C2 03		   shld	edx,eax,3 ; d5
1   567	0000029F  2B CA			   sub ecx,edx ; e7
1   568					 ; d1=c1*s3,f7=e7-c3
1   569	000002A1  B8 2D413CCC		   mov eax,s3 ;	s3
1   570	000002A6  F7 EE			   imul	esi ; c1/2E4
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 11
uvcview.asm



1   571	000002A8  0F A4	C2 03		   shld	edx,eax,3 ; d1
1   572	000002AC  5B			   pop ebx ; c3
1   573	000002AD  2B CB			   sub ecx,ebx ; f7
1   574					 ; f1=d1-f7,f5=e5-f1
1   575	000002AF  2B D1			   sub edx,ecx ; f1
1   576	000002B1  2B FA			   sub edi,edx ; f5
1   577					 ; m[0]=f0+c3,m[7]=f0-c3
1   578	000002B3  5E			   pop esi ; f0
1   579	000002B4  8D 04	1E		   lea eax,[esi+ebx] ; m[0]
1   580	000002B7  2B F3			   sub esi,ebx ; m[7]
1   581	000002B9  89 85	00000000r	   mov [mcu+ebp+0*8*4],eax
1   582	000002BF  89 B5	000000E0r	   mov [mcu+ebp+7*8*4],esi
1   583					 ; m[1]=f4+f7,m[6]=f4-f7
1   584	000002C5  5E			   pop esi ; f4
1   585	000002C6  8D 04	0E		   lea eax,[esi+ecx] ; m[1]
1   586	000002C9  2B F1			   sub esi,ecx ; m[7]
1   587	000002CB  89 85	00000020r	   mov [mcu+ebp+1*8*4],eax
1   588	000002D1  89 B5	000000C0r	   mov [mcu+ebp+6*8*4],esi
1   589					 ; m[2]=f2+f1,m[5]=f2-f1
1   590	000002D7  5E			   pop esi ; f2
1   591	000002D8  8D 04	16		   lea eax,[esi+edx] ; m[2]
1   592	000002DB  2B F2			   sub esi,edx ; m[5]
1   593	000002DD  89 85	00000040r	   mov [mcu+ebp+2*8*4],eax
1   594	000002E3  89 B5	000000A0r	   mov [mcu+ebp+5*8*4],esi
1   595					 ; m[3]=f6+f5,m[4]=f6-f5
1   596	000002E9  5E			   pop esi ; f6
1   597	000002EA  8D 04	3E		   lea eax,[esi+edi] ; m[3]
1   598	000002ED  2B F7			   sub esi,edi ; m[4]
1   599	000002EF  89 85	00000060r	   mov [mcu+ebp+3*8*4],eax
1   600	000002F5  89 B5	00000080r	   mov [mcu+ebp+4*8*4],esi
1   601					 ; bump	to next	matrix column
1   602	000002FB  8D 6D	04		   lea ebp,[ebp+1*4] ; offset
1   603	000002FE  F7 C5	0000001C	   test	ebp,01Ch ; eight
1   604	00000304  0F 85	FFFFFF06	   jnz NextPassCols
1   605					 ; point to start of matrix
1   606	0000030A  8D 6D	E0		   lea ebp,[ebp-8*4] ; offset
1   607	0000030D			 label NextPassRows near
1   608					 ; b0=m[0]+m[4],b4=m[0]-m[4]
1   609	0000030D  8B 9D	00000000r	   mov ebx,[mcu+ebp+0*1*4]
1   610	00000313  8B 85	00000010r	   mov eax,[mcu+ebp+4*1*4]
1   611	00000319  8D 3C	03		   lea edi,[ebx+eax] ; b0
1   612	0000031C  2B D8			   sub ebx,eax ; b4
1   613					 ; b6=m[2]+m[6],b2=m[2]-m[6]
1   614	0000031E  8B 8D	00000008r	   mov ecx,[mcu+ebp+2*1*4]
1   615	00000324  8B 85	00000018r	   mov eax,[mcu+ebp+6*1*4]
1   616	0000032A  8D 34	01		   lea esi,[ecx+eax] ; b6
1   617	0000032D  2B C8			   sub ecx,eax ; b2
1   618					 ; d2=b2*s1;e2=d2-b6
1   619	0000032F  B8 2D413CCC		   mov eax,s1 ;	s1
1   620	00000334  F7 E9			   imul	ecx ; d2/2E4
1   621	00000336  0F A4	C2 03		   shld	edx,eax,3 ; d2
1   622	0000033A  2B D6			   sub edx,esi ; e2
1   623					 ; f0=b0+b6,f6=b0-b6
1   624	0000033C  8D 0C	37		   lea ecx,[edi+esi] ; f0
1   625	0000033F  2B FE			   sub edi,esi ; f6
1   626					 ; f4=b4+e2,f2=b4-e2
1   627	00000341  8D 04	13		   lea eax,[ebx+edx] ; f4
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 12
uvcview.asm



1   628	00000344  2B DA			   sub ebx,edx ; f2
1   629	00000346  57			   push	edi ; f6
1   630	00000347  53			   push	ebx ; f2
1   631	00000348  50			   push	eax ; f4
1   632	00000349  51			   push	ecx ; f0
1   633					 ; b3=m[5]+m[3],b5=m[5]-m[3]
1   634	0000034A  8B 9D	00000014r	   mov ebx,[mcu+ebp+5*1*4]
1   635	00000350  8B 85	0000000Cr	   mov eax,[mcu+ebp+3*1*4]
1   636	00000356  8D 3C	03		   lea edi,[ebx+eax] ; b3
1   637	00000359  2B D8			   sub ebx,eax ; b5
1   638					 ; b1=m[1]+m[7],b7=m[1]-m[7]
1   639	0000035B  8B 8D	00000004r	   mov ecx,[mcu+ebp+1*1*4]
1   640	00000361  8B 85	0000001Cr	   mov eax,[mcu+ebp+7*1*4]
1   641	00000367  8D 34	01		   lea esi,[ecx+eax] ; b1
1   642	0000036A  2B C8			   sub ecx,eax ; b7
1   643					 ; c3=b1+b3,c1=b1-b3
1   644	0000036C  8D 04	3E		   lea eax,[esi+edi] ; c3
1   645	0000036F  2B F7			   sub esi,edi ; c1
1   646	00000371  50			   push	eax ; c3
1   647					 ; c8=b5+b7,d8=c8*s5
1   648	00000372  8D 14	0B		   lea edx,[ebx+ecx] ; c8
1   649	00000375  B8 3B20D79D		   mov eax,s5 ;	s5
1   650	0000037A  F7 EA			   imul	edx ; d8/2E4
1   651	0000037C  0F A4	C2 03		   shld	edx,eax,3 ; d8
1   652	00000380  8B FA			   mov edi,edx ; d8
1   653					 ; d7=b7*s4,e5=d8-d7
1   654	00000382  B8 22A2F4F7		   mov eax,s4 ;	s4
1   655	00000387  F7 E9			   imul	ecx ; d7/2E4
1   656	00000389  0F A4	C2 03		   shld	edx,eax,3 ; d7
1   657	0000038D  8B CF			   mov ecx,edi ; d8
1   658	0000038F  2B FA			   sub edi,edx ; e5
1   659					 ; d5=b5*s2,e7=d8-d5
1   660	00000391  B8 539EBA43		   mov eax,s2 ;	s2
1   661	00000396  F7 EB			   imul	ebx ; d5/2E4
1   662	00000398  0F A4	C2 03		   shld	edx,eax,3 ; d5
1   663	0000039C  2B CA			   sub ecx,edx ; e7
1   664					 ; d1=c1*s3,f7=e7-c3
1   665	0000039E  B8 2D413CCC		   mov eax,s3 ;	s3
1   666	000003A3  F7 EE			   imul	esi ; c1/2E4
1   667	000003A5  0F A4	C2 03		   shld	edx,eax,3 ; d1
1   668	000003A9  5B			   pop ebx ; c3
1   669	000003AA  2B CB			   sub ecx,ebx ; f7
1   670					 ; f1=d1-f7,f5=e5-f1
1   671	000003AC  2B D1			   sub edx,ecx ; f1
1   672	000003AE  2B FA			   sub edi,edx ; f5
1   673					 ; m[0]=f0+c3,m[7]=f0-c3
1   674	000003B0  5E			   pop esi ; f0
1   675	000003B1  8D 04	1E		   lea eax,[esi+ebx] ; m[0]
1   676	000003B4  2B F3			   sub esi,ebx ; m[7]
1   677	000003B6  89 85	00000000r	   mov [mcu+ebp+0*1*4],eax
1   678	000003BC  89 B5	0000001Cr	   mov [mcu+ebp+7*1*4],esi
1   679					 ; m[1]=f4+f7,m[6]=f4-f7
1   680	000003C2  5E			   pop esi ; f4
1   681	000003C3  8D 04	0E		   lea eax,[esi+ecx] ; m[1]
1   682	000003C6  2B F1			   sub esi,ecx ; m[7]
1   683	000003C8  89 85	00000004r	   mov [mcu+ebp+1*1*4],eax
1   684	000003CE  89 B5	00000018r	   mov [mcu+ebp+6*1*4],esi
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 13
uvcview.asm



1   685					 ; m[2]=f2+f1,m[5]=f2-f1
1   686	000003D4  5E			   pop esi ; f2
1   687	000003D5  8D 04	16		   lea eax,[esi+edx] ; m[2]
1   688	000003D8  2B F2			   sub esi,edx ; m[5]
1   689	000003DA  89 85	00000008r	   mov [mcu+ebp+2*1*4],eax
1   690	000003E0  89 B5	00000014r	   mov [mcu+ebp+5*1*4],esi
1   691					 ; m[3]=f6+f5,m[4]=f6-f5
1   692	000003E6  5E			   pop esi ; f6
1   693	000003E7  8D 04	3E		   lea eax,[esi+edi] ; m[3]
1   694	000003EA  2B F7			   sub esi,edi ; m[4]
1   695	000003EC  89 85	0000000Cr	   mov [mcu+ebp+3*1*4],eax
1   696	000003F2  89 B5	00000010r	   mov [mcu+ebp+4*1*4],esi
1   697					 ; bump	to next	matrix row
1   698	000003F8  8D 6D	20		   lea ebp,[ebp+8*4] ; offset
1   699	000003FB  F7 C5	000000E0	   test	ebp,0E0h ; eight
1   700	00000401  0F 85	FFFFFF06	   jnz NextPassRows
1   701					 ; start next matrix
1   702	00000407  81 FD	00000400	   cmp ebp,400h	; done
1   703	0000040D  0F 82	FFFFFDFD	   jb NextPassCols
1   704	00000413  C3			   ret ; return
1   705	00000414			 endp aanidct
1   706
1   707					 ; aanfdct - quantization coefficients - 1st row
1   708		  =08000000		 q00 = 0134217728 ; 2E26/(cos(4pi/16)*cos(4pi/16))
1   709		  =05C48695		 q01 = 0096765589 ; 2E26/(cos(4pi/16)*cos(1pi/16))
1   710		  =061F78AA		 q02 = 0102725802 ; 2E26/(cos(4pi/16)*cos(2pi/16))
1   711		  =06CDAE4B		 q03 = 0114142795 ; 2E26/(cos(4pi/16)*cos(3pi/16))
1   712		  =08000000		 q04 = 0134217728 ; 2E26/(cos(4pi/16)*cos(4pi/16))
1   713		  =0A2E9C0D		 q05 = 0170826765 ; 2E26/(cos(4pi/16)*cos(5pi/16))
1   714		  =0EC835E8		 q06 = 0248002024 ; 2E26/(cos(4pi/16)*cos(6pi/16))
1   715		  =1CFEFEFD		 q07 = 0486473469 ; 2E26/(cos(4pi/16)*cos(7pi/16))
1   716					 ; aanfdct - quantization coefficients - 2nd row
1   717		  =05C48695		 q10 = 0096765589 ; 2E26/(cos(1pi/16)*cos(4pi/16))
1   718		  =04288406		 q11 = 0069764102 ; 2E26/(cos(1pi/16)*cos(1pi/16))
1   719		  =046A1578		 q12 = 0074061176 ; 2E26/(cos(1pi/16)*cos(2pi/16))
1   720		  =04E7AE91		 q13 = 0082292369 ; 2E26/(cos(1pi/16)*cos(3pi/16))
1   721		  =05C48695		 q14 = 0096765589 ; 2E26/(cos(1pi/16)*cos(4pi/16))
1   722		  =075742C2		 q15 = 0123159234 ; 2E26/(cos(1pi/16)*cos(5pi/16))
1   723		  =0AA84387		 q16 = 0178799495 ; 2E26/(cos(1pi/16)*cos(6pi/16))
1   724		  =14E7AE91		 q17 = 0350727825 ; 2E26/(cos(1pi/16)*cos(7pi/16))
1   725					 ; aanfdct - quantization coefficients - 3rd row
1   726		  =061F78AA		 q20 = 0102725802 ; 2E26/(cos(2pi/16)*cos(4pi/16))
1   727		  =046A1578		 q21 = 0074061176 ; 2E26/(cos(2pi/16)*cos(1pi/16))
1   728		  =04AFB0CD		 q22 = 0078622925 ; 2E26/(cos(2pi/16)*cos(2pi/16))
1   729		  =05350659		 q23 = 0087361113 ; 2E26/(cos(2pi/16)*cos(3pi/16))
1   730		  =061F78AA		 q24 = 0102725802 ; 2E26/(cos(2pi/16)*cos(4pi/16))
1   731		  =07CB033A		 q25 = 0130745146 ; 2E26/(cos(2pi/16)*cos(5pi/16))
1   732		  =0B504F33		 q26 = 0189812531 ; 2E26/(cos(2pi/16)*cos(6pi/16))
1   733		  =163150B1		 q27 = 0372330673 ; 2E26/(cos(2pi/16)*cos(7pi/16))
1   734					 ; aanfdct - quantization coefficients - 4th row
1   735		  =06CDAE4B		 q30 = 0114142795 ; 2E26/(cos(3pi/16)*cos(4pi/16))
1   736		  =04E7AE91		 q31 = 0082292369 ; 2E26/(cos(3pi/16)*cos(1pi/16))
1   737		  =05350659		 q32 = 0087361113 ; 2E26/(cos(3pi/16)*cos(2pi/16))
1   738		  =05C92D84		 q33 = 0097070468 ; 2E26/(cos(3pi/16)*cos(3pi/16))
1   739		  =06CDAE4B		 q34 = 0114142795 ; 2E26/(cos(3pi/16)*cos(4pi/16))
1   740		  =08A8BD3E		 q35 = 0145276222 ; 2E26/(cos(3pi/16)*cos(5pi/16))
1   741		  =0C9234E0		 q36 = 0210908384 ; 2E26/(cos(3pi/16)*cos(6pi/16))
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 14
uvcview.asm



1   742		  =18A8BD3E		 q37 = 0413711678 ; 2E26/(cos(3pi/16)*cos(7pi/16))
1   743					 ; aanfdct - quantization coefficients - 5th row
1   744		  =08000000		 q40 = 0134217728 ; 2E26/(cos(4pi/16)*cos(4pi/16))
1   745		  =05C48695		 q41 = 0096765589 ; 2E26/(cos(4pi/16)*cos(1pi/16))
1   746		  =061F78AA		 q42 = 0102725802 ; 2E26/(cos(4pi/16)*cos(2pi/16))
1   747		  =06CDAE4B		 q43 = 0114142795 ; 2E26/(cos(4pi/16)*cos(3pi/16))
1   748		  =08000000		 q44 = 0134217728 ; 2E26/(cos(4pi/16)*cos(4pi/16))
1   749		  =0A2E9C0D		 q45 = 0170826765 ; 2E26/(cos(4pi/16)*cos(5pi/16))
1   750		  =0EC835E8		 q46 = 0248002024 ; 2E26/(cos(4pi/16)*cos(6pi/16))
1   751		  =1CFEFEFD		 q47 = 0486473469 ; 2E26/(cos(4pi/16)*cos(7pi/16))
1   752					 ; aanfdct - quantization coefficients - 6th row
1   753		  =0A2E9C0D		 q50 = 0170826765 ; 2E26/(cos(5pi/16)*cos(4pi/16))
1   754		  =075742C2		 q51 = 0123159234 ; 2E26/(cos(5pi/16)*cos(1pi/16))
1   755		  =07CB033A		 q52 = 0130745146 ; 2E26/(cos(5pi/16)*cos(2pi/16))
1   756		  =08A8BD3E		 q53 = 0145276222 ; 2E26/(cos(5pi/16)*cos(3pi/16))
1   757		  =0A2E9C0D		 q54 = 0170826765 ; 2E26/(cos(5pi/16)*cos(4pi/16))
1   758		  =0CF595AF		 q55 = 0217421231 ; 2E26/(cos(5pi/16)*cos(5pi/16))
1   759		  =12D062F0		 q56 = 0315646704 ; 2E26/(cos(5pi/16)*cos(6pi/16))
1   760		  =24E7AE91		 q57 = 0619163281 ; 2E26/(cos(5pi/16)*cos(7pi/16))
1   761					 ; aanfdct - quantization coefficients - 7th row
1   762		  =0EC835E8		 q60 = 0248002024 ; 2E26/(cos(6pi/16)*cos(4pi/16))
1   763		  =0AA84387		 q61 = 0178799495 ; 2E26/(cos(6pi/16)*cos(1pi/16))
1   764		  =0B504F33		 q62 = 0189812531 ; 2E26/(cos(6pi/16)*cos(2pi/16))
1   765		  =0C9234E0		 q63 = 0210908384 ; 2E26/(cos(6pi/16)*cos(3pi/16))
1   766		  =0EC835E8		 q64 = 0248002024 ; 2E26/(cos(6pi/16)*cos(4pi/16))
1   767		  =12D062F0		 q65 = 0315646704 ; 2E26/(cos(6pi/16)*cos(5pi/16))
1   768		  =1B504F33		 q66 = 0458247987 ; 2E26/(cos(6pi/16)*cos(6pi/16))
1   769		  =3593E882		 q67 = 0898885762 ; 2E26/(cos(6pi/16)*cos(7pi/16))
1   770					 ; aanfdct - quantization coefficients - 8th row
1   771		  =1CFEFEFD		 q70 = 0486473469 ; 2E26/(cos(7pi/16)*cos(4pi/16))
1   772		  =14E7AE91		 q71 = 0350727825 ; 2E26/(cos(7pi/16)*cos(1pi/16))
1   773		  =163150B1		 q72 = 0372330673 ; 2E26/(cos(7pi/16)*cos(2pi/16))
1   774		  =18A8BD3E		 q73 = 0413711678 ; 2E26/(cos(7pi/16)*cos(3pi/16))
1   775		  =1CFEFEFD		 q74 = 0486473469 ; 2E26/(cos(7pi/16)*cos(4pi/16))
1   776		  =24E7AE91		 q75 = 0619163281 ; 2E26/(cos(7pi/16)*cos(5pi/16))
1   777		  =3593E882		 q76 = 0898885762 ; 2E26/(cos(7pi/16)*cos(6pi/16))
1   778		  =6918B8C7		 q77 = 1763227847 ; 2E26/(cos(7pi/16)*cos(7pi/16))
1   779
1   780					 ; aanidct - quantization coefficients - 1st row
1   781		  =00400000		 d00 = 4194304 ; 2E23*(cos(4pi/16)*cos(4pi/16))
1   782		  =0058C543		 d01 = 5817667 ; 2E23*(cos(4pi/16)*cos(1pi/16))
1   783		  =00539EBA		 d02 = 5480122 ; 2E23*(cos(4pi/16)*cos(2pi/16))
1   784		  =004B418C		 d03 = 4931980 ; 2E23*(cos(4pi/16)*cos(3pi/16))
1   785		  =00400000		 d04 = 4194304 ; 2E23*(cos(4pi/16)*cos(4pi/16))
1   786		  =003248D4		 d05 = 3295444 ; 2E23*(cos(4pi/16)*cos(5pi/16))
1   787		  =0022A2F5		 d06 = 2269941 ; 2E23*(cos(4pi/16)*cos(6pi/16))
1   788		  =0011A856		 d07 = 1157206 ; 2E23*(cos(4pi/16)*cos(7pi/16))
1   789					 ; aanidct - quantization coefficients - 2nd row
1   790		  =0058C543		 d10 = 5817667 ; 2E23*(cos(1pi/16)*cos(4pi/16))
1   791		  =007B20D8		 d11 = 8069336 ; 2E23*(cos(1pi/16)*cos(1pi/16))
1   792		  =0073FBFC		 d12 = 7601148 ; 2E23*(cos(1pi/16)*cos(2pi/16))
1   793		  =00686214		 d13 = 6840852 ; 2E23*(cos(1pi/16)*cos(3pi/16))
1   794		  =0058C543		 d14 = 5817667 ; 2E23*(cos(1pi/16)*cos(4pi/16))
1   795		  =0045BF1F		 d15 = 4570911 ; 2E23*(cos(1pi/16)*cos(5pi/16))
1   796		  =00300AD3		 d16 = 3148499 ; 2E23*(cos(1pi/16)*cos(6pi/16))
1   797		  =00187DE3		 d17 = 1605091 ; 2E23*(cos(1pi/16)*cos(7pi/16))
1   798					 ; aanidct - quantization coefficients - 3rd row
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 15
uvcview.asm



1   799		  =00539EBA		 d20 = 5480122 ; 2E23*(cos(2pi/16)*cos(4pi/16))
1   800		  =0073FBFC		 d21 = 7601148 ; 2E23*(cos(2pi/16)*cos(1pi/16))
1   801		  =006D413D		 d22 = 7160125 ; 2E23*(cos(2pi/16)*cos(2pi/16))
1   802		  =006253A6		 d23 = 6443942 ; 2E23*(cos(2pi/16)*cos(3pi/16))
1   803		  =00539EBA		 d24 = 5480122 ; 2E23*(cos(2pi/16)*cos(4pi/16))
1   804		  =0041B328		 d25 = 4305704 ; 2E23*(cos(2pi/16)*cos(5pi/16))
1   805		  =002D413D		 d26 = 2965821 ; 2E23*(cos(2pi/16)*cos(6pi/16))
1   806		  =0017121A		 d27 = 1511962 ; 2E23*(cos(2pi/16)*cos(7pi/16))
1   807					 ; aanidct - quantization coefficients - 4th row
1   808		  =004B418C		 d30 = 4931980 ; 2E23*(cos(3pi/16)*cos(4pi/16))
1   809		  =00686214		 d31 = 6840852 ; 2E23*(cos(3pi/16)*cos(1pi/16))
1   810		  =006253A6		 d32 = 6443942 ; 2E23*(cos(3pi/16)*cos(2pi/16))
1   811		  =00587DE3		 d33 = 5799395 ; 2E23*(cos(3pi/16)*cos(3pi/16))
1   812		  =004B418C		 d34 = 4931980 ; 2E23*(cos(3pi/16)*cos(4pi/16))
1   813		  =003B20D8		 d35 = 3875032 ; 2E23*(cos(3pi/16)*cos(5pi/16))
1   814		  =0028BA70		 d36 = 2669168 ; 2E23*(cos(3pi/16)*cos(6pi/16))
1   815		  =0014C35A		 d37 = 1360730 ; 2E23*(cos(3pi/16)*cos(7pi/16))
1   816					 ; aanidct - quantization coefficients - 5th row
1   817		  =00400000		 d40 = 4194304 ; 2E23*(cos(4pi/16)*cos(4pi/16))
1   818		  =0058C543		 d41 = 5817667 ; 2E23*(cos(4pi/16)*cos(1pi/16))
1   819		  =00539EBA		 d42 = 5480122 ; 2E23*(cos(4pi/16)*cos(2pi/16))
1   820		  =004B418C		 d43 = 4931980 ; 2E23*(cos(4pi/16)*cos(3pi/16))
1   821		  =00400000		 d44 = 4194304 ; 2E23*(cos(4pi/16)*cos(4pi/16))
1   822		  =003248D4		 d45 = 3295444 ; 2E23*(cos(4pi/16)*cos(5pi/16))
1   823		  =0022A2F5		 d46 = 2269941 ; 2E23*(cos(4pi/16)*cos(6pi/16))
1   824		  =0011A856		 d47 = 1157206 ; 2E23*(cos(4pi/16)*cos(7pi/16))
1   825					 ; aanidct - quantization coefficients - 6th row
1   826		  =003248D4		 d50 = 3295444 ; 2E23*(cos(5pi/16)*cos(4pi/16))
1   827		  =0045BF1F		 d51 = 4570911 ; 2E23*(cos(5pi/16)*cos(1pi/16))
1   828		  =0041B328		 d52 = 4305704 ; 2E23*(cos(5pi/16)*cos(2pi/16))
1   829		  =003B20D8		 d53 = 3875032 ; 2E23*(cos(5pi/16)*cos(3pi/16))
1   830		  =003248D4		 d54 = 3295444 ; 2E23*(cos(5pi/16)*cos(4pi/16))
1   831		  =0027821D		 d55 = 2589213 ; 2E23*(cos(5pi/16)*cos(5pi/16))
1   832		  =001B36B9		 d56 = 1783481 ; 2E23*(cos(5pi/16)*cos(6pi/16))
1   833		  =000DDF9B		 d57 = 0909211 ; 2E23*(cos(5pi/16)*cos(7pi/16))
1   834					 ; aanidct - quantization coefficients - 7th row
1   835		  =0022A2F5		 d60 = 2269941 ; 2E23*(cos(6pi/16)*cos(4pi/16))
1   836		  =00300AD3		 d61 = 3148499 ; 2E23*(cos(6pi/16)*cos(1pi/16))
1   837		  =002D413D		 d62 = 2965821 ; 2E23*(cos(6pi/16)*cos(2pi/16))
1   838		  =0028BA70		 d63 = 2669168 ; 2E23*(cos(6pi/16)*cos(3pi/16))
1   839		  =0022A2F5		 d64 = 2269941 ; 2E23*(cos(6pi/16)*cos(4pi/16))
1   840		  =001B36B9		 d65 = 1783481 ; 2E23*(cos(6pi/16)*cos(5pi/16))
1   841		  =0012BEC3		 d66 = 1228483 ; 2E23*(cos(6pi/16)*cos(6pi/16))
1   842		  =00098E63		 d67 = 0626275 ; 2E23*(cos(6pi/16)*cos(7pi/16))
1   843					 ; aanidct - quantization coefficients - 8th row
1   844		  =0011A856		 d70 = 1157206 ; 2E23*(cos(7pi/16)*cos(4pi/16))
1   845		  =00187DE3		 d71 = 1605091 ; 2E23*(cos(7pi/16)*cos(1pi/16))
1   846		  =0017121A		 d72 = 1511962 ; 2E23*(cos(7pi/16)*cos(2pi/16))
1   847		  =0014C35A		 d73 = 1360730 ; 2E23*(cos(7pi/16)*cos(3pi/16))
1   848		  =0011A856		 d74 = 1157206 ; 2E23*(cos(7pi/16)*cos(4pi/16))
1   849		  =000DDF9B		 d75 = 0909211 ; 2E23*(cos(7pi/16)*cos(5pi/16))
1   850		  =00098E63		 d76 = 0626275 ; 2E23*(cos(7pi/16)*cos(6pi/16))
1   851		  =0004DF28		 d77 = 0319272 ; 2E23*(cos(7pi/16)*cos(7pi/16))
1   852
1   853	00000414			 dataseg
1   854					 ; luminance - aanfdct - scaled	quantization table
1   855	00040000  01000000 0093A70E   +	 yqt dd	q00/y00,q01/y01,q02/y02,q03/y03,q04/y04,q05/y05,q06/y06,q07/y07
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 16
uvcview.asm



    856		  009CBF44 00AE2B07   +
    857		  00BA2E8B 00C88228   +
    858		  00FC47DC 019C637F
1   859	00040020  0093A70E 004C096E   +	     dd	q10/y10,q11/y11,q12/y12,q13/y13,q14/y14,q15/y15,q16/y16,q17/y17
    860		  0050B864 0059B10A   +
    861		  00697753 00863BA0   +
    862		  00C2E040 0164C75F
1   863	00040040  009CBF44 0050B864   +	     dd	q20/y20,q21/y21,q22/y22,q23/y23,q24/y24,q25/y25,q26/y26,q27/y27
    864		  0055B133 0058DE4A   +
    865		  005C3446 0069002B   +
    866		  0083A682 00DA831A
1   867	00040060  00AE2B07 0059B10A   +	     dd	q30/y30,q31/y31,q32/y32,q33/y33,q34/y34,q35/y35,q36/y36,q37/y37
    868		  0058DE4A 005C92D8   +
    869		  0060C292 00698F1B   +
    870		  00861789 00E17479
1   871	00040080  00BA2E8B 00697753   +	     dd	q40/y40,q41/y41,q42/y42,q43/y43,q44/y44,q45/y45,q46/y46,q47/y47
    872		  005C3446 0060C292   +
    873		  00666666 00767B74   +
    874		  00918BEB 00F76EE6
1   875	000400A0  00C88228 00863BA0   +	     dd	q50/y50,q51/y51,q52/y52,q53/y53,q54/y54,q55/y55,q56/y56,q57/y57
    876		  0069002B 00698F1B   +
    877		  00767B74 007F9973   +
    878		  00A61511 0115DF7C
1   879	000400C0  00FC47DC 00C2E040   +	     dd	q60/y60,q61/y61,q62/y62,q63/y63,q64/y64,q65/y65,q66/y66,q67/y67
    880		  0083A682 00861789   +
    881		  00918BEB 00A61511   +
    882		  00D3E35E 0168F1E8
1   883	000400E0  019C637F 0164C75F   +	     dd	q70/y70,q71/y71,q72/y72,q73/y73,q74/y74,q75/y75,q76/y76,q77/y77
    884		  00DA831A 00E17479   +
    885		  00F76EE6 0115DF7C   +
    886		  0168F1E8 028096AF
1   887					 ; luminance - huffman size table - dc coefficients
1   888	00040100  02 03	03 03 03 03 04+	 yds db	02,03,03,03,03,03,04,05,06,07,08,09
    889		  05 06	07 08 09
1   890					 ; luminance - huffman code table - dc coefficients
1   891	0004010C  0000 0002 0003 0004 +	 ydc dw	0000h,0002h,0003h,0004h,0005h,0006h,000Eh,001Eh,003Eh,007Eh,00FEh,01FEh
    892		  0005 0006 000E 001E +
    893		  003E 007E 00FE 01FE
1   894					 ; luminance - huffman size table - ac coefficients
1   895	00040124  04 00	00 00 00 00 00+	 yas db	04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11
    896		  00 00	00 00 00 00 00+
    897		  00 0B
1   898	00040134  02 04	05 06 06 07 07+	     db	02,04,05,06,06,07,07,08,09,09,09,10,10,11,16,16
    899		  08 09	09 09 0A 0A 0B+
    900		  10 10
1   901	00040144  02 05	08 09 0A 0B 0C+	     db	02,05,08,09,10,11,12,12,15,16,16,16,16,16,16,16
    902		  0C 0F	10 10 10 10 10+
    903		  10 10
1   904	00040154  03 07	0A 0C 10 10 10+	     db	03,07,10,12,16,16,16,16,16,16,16,16,16,16,16,16
    905		  10 10	10 10 10 10 10+
    906		  10 10
1   907	00040164  04 09	0C 10 10 10 10+	     db	04,09,12,16,16,16,16,16,16,16,16,16,16,16,16,16
    908		  10 10	10 10 10 10 10+
    909		  10 10
1   910	00040174  05 0B	10 10 10 10 10+	     db	05,11,16,16,16,16,16,16,16,16,16,16,16,16,16,16
    911		  10 10	10 10 10 10 10+
    912		  10 10
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 17
uvcview.asm



1   913	00040184  07 10	10 10 10 10 10+	     db	07,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
    914		  10 10	10 10 10 10 10+
    915		  10 10
1   916	00040194  08 10	10 10 10 10 10+	     db	08,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
    917		  10 10	10 10 10 10 10+
    918		  10 10
1   919	000401A4  0A 10	10 10 10 10 10+	     db	10,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
    920		  10 10	10 10 10 10 10+
    921		  10 10
1   922	000401B4  10 10	10 10 10 10 10+	     db	16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
    923		  10 10	10 10 10 10 10+
    924		  10 10
1   925	000401C4  10 10	10 10 10 10 10+	     db	16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
    926		  10 10	10 10 10 10 10+
    927		  10 10
1   928					 ; luminance - huffman code table - ac coefficients
1   929	000401D4  000A 0000 0000 0000 +	 yac dw	0000Ah,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,+
    930		  0000 0000 0000 0000 +	 00000h,00000h,00000h,007F9h
    931		  0000 0000 0000 0000 +
    932		  0000 0000 0000 07F9
1   933	000401F4  0000 000C 001C 003A +	     dw	00000h,0000Ch,0001Ch,0003Ah,0003Bh,0007Ah,0007Bh,000FAh,001F8h,001F9h,001FAh,003F9h,+
    934		  003B 007A 007B 00FA +	 003FAh,007F8h,0FFEBh,0FFF5h
    935		  01F8 01F9 01FA 03F9 +
    936		  03FA 07F8 FFEB FFF5
1   937	00040214  0001 001B 00F9 01F7 +	     dw	00001h,0001Bh,000F9h,001F7h,003F8h,007F7h,00FF6h,00FF7h,07FC0h,0FFBEh,0FFC7h,0FFD0h,+
    938		  03F8 07F7 0FF6 0FF7 +	 0FFD9h,0FFE2h,0FFECh,0FFF6h
    939		  7FC0 FFBE FFC7 FFD0 +
    940		  FFD9 FFE2 FFEC FFF6
1   941	00040234  0004 0079 03F7 0FF5 +	     dw	00004h,00079h,003F7h,00FF5h,0FF96h,0FF9Eh,0FFA6h,0FFAEh,0FFB6h,0FFBFh,0FFC8h,0FFD1h,+
    942		  FF96 FF9E FFA6 FFAE +	 0FFDAh,0FFE3h,0FFEDh,0FFF7h
    943		  FFB6 FFBF FFC8 FFD1 +
    944		  FFDA FFE3 FFED FFF7
1   945	00040254  000B 01F6 0FF4 FF8F +	     dw	0000Bh,001F6h,00FF4h,0FF8Fh,0FF97h,0FF9Fh,0FFA7h,0FFAFh,0FFB7h,0FFC0h,0FFC9h,0FFD2h,+
    946		  FF97 FF9F FFA7 FFAF +	 0FFDBh,0FFE4h,0FFEEh,0FFF8h
    947		  FFB7 FFC0 FFC9 FFD2 +
    948		  FFDB FFE4 FFEE FFF8
1   949	00040274  001A 07F6 FF89 FF90 +	     dw	0001Ah,007F6h,0FF89h,0FF90h,0FF98h,0FFA0h,0FFA8h,0FFB0h,0FFB8h,0FFC1h,0FFCAh,0FFD3h,+
    950		  FF98 FFA0 FFA8 FFB0 +	 0FFDCh,0FFE5h,0FFEFh,0FFF9h
    951		  FFB8 FFC1 FFCA FFD3 +
    952		  FFDC FFE5 FFEF FFF9
1   953	00040294  0078 FF84 FF8A FF91 +	     dw	00078h,0FF84h,0FF8Ah,0FF91h,0FF99h,0FFA1h,0FFA9h,0FFB1h,0FFB9h,0FFC2h,0FFCBh,0FFD4h,+
    954		  FF99 FFA1 FFA9 FFB1 +	 0FFDDh,0FFE6h,0FFF0h,0FFFAh
    955		  FFB9 FFC2 FFCB FFD4 +
    956		  FFDD FFE6 FFF0 FFFA
1   957	000402B4  00F8 FF85 FF8B FF92 +	     dw	000F8h,0FF85h,0FF8Bh,0FF92h,0FF9Ah,0FFA2h,0FFAAh,0FFB2h,0FFBAh,0FFC3h,0FFCCh,0FFD5h,+
    958		  FF9A FFA2 FFAA FFB2 +	 0FFDEh,0FFE7h,0FFF1h,0FFFBh
    959		  FFBA FFC3 FFCC FFD5 +
    960		  FFDE FFE7 FFF1 FFFB
1   961	000402D4  03F6 FF86 FF8C FF93 +	     dw	003F6h,0FF86h,0FF8Ch,0FF93h,0FF9Bh,0FFA3h,0FFABh,0FFB3h,0FFBBh,0FFC4h,0FFCDh,0FFD6h,+
    962		  FF9B FFA3 FFAB FFB3 +	 0FFDFh,0FFE8h,0FFF2h,0FFFCh
    963		  FFBB FFC4 FFCD FFD6 +
    964		  FFDF FFE8 FFF2 FFFC
1   965	000402F4  FF82 FF87 FF8D FF94 +	     dw	0FF82h,0FF87h,0FF8Dh,0FF94h,0FF9Ch,0FFA4h,0FFACh,0FFB4h,0FFBCh,0FFC5h,0FFCEh,0FFD7h,+
    966		  FF9C FFA4 FFAC FFB4 +	 0FFE0h,0FFE9h,0FFF3h,0FFFDh
    967		  FFBC FFC5 FFCE FFD7 +
    968		  FFE0 FFE9 FFF3 FFFD
1   969	00040314  FF83 FF88 FF8E FF95 +	     dw	0FF83h,0FF88h,0FF8Eh,0FF95h,0FF9Dh,0FFA5h,0FFADh,0FFB5h,0FFBDh,0FFC6h,0FFCFh,0FFD8h,+
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 18
uvcview.asm



    970		  FF9D FFA5 FFAD FFB5 +	 0FFE1h,0FFEAh,0FFF4h,0FFFEh
    971		  FFBD FFC6 FFCF FFD8 +
    972		  FFE1 FFEA FFF4 FFFE
1   973
1   974	00040334			 dataseg
1   975					 ; luminance - aanidct - scaled	dequantization table
1   976	00040334  02000000 0377B49E   +	 yqi dd	d00*y00,d01*y01,d02*y02,d03*y03,d04*y04,d05*y05,d06*y06,d07*y07
    977		  03443344 02F08F78   +
    978		  02C00000 028DB2C4   +
    979		  02078C5B 013DD60C
1   980	00040354  0377B49E 06BBCBD0   +	     dd	d10*y10,d11*y11,d12*y12,d13*y13,d14*y14,d15*y15,d16*y16,d17*y17
    981		  0657C7C8 05B55D18   +
    982		  04DAC9AA 03D073B2   +
    983		  02A0978A 016F604D
1   984	00040374  03443344 0657C7C8   +	     dd	d20*y20,d21*y21,d22*y22,d23*y23,d24*y24,d25*y25,d26*y26,d27*y27
    985		  05F99156 05C2E6BA   +
    986		  058D8A5A 04E04BF8   +
    987		  03E39B3E 0257D6A4
1   988	00040394  02F08F78 05B55D18   +	     dd	d30*y30,d31*y31,d32*y32,d33*y33,d34*y34,d35*y35,d36*y36,d37*y37
    989		  05C2E6BA 0587DE30   +
    990		  054A9BD8 04D9B1B8   +
    991		  03D17A80 02455DD8
1   992	000403B4  02C00000 04DAC9AA   +	     dd	d40*y40,d41*y41,d42*y42,d43*y43,d44*y44,d45*y45,d46*y46,d47*y47
    993		  058D8A5A 054A9BD8   +
    994		  05000000 04524238   +
    995		  03848CE2 0211BA14
1   996	000403D4  028DB2C4 03D073B2   +	     dd	d50*y50,d51*y51,d52*y52,d53*y53,d54*y54,d55*y55,d56*y56,d57*y57
    997		  04E04BF8 04D9B1B8   +
    998		  04524238 040336F2   +
    999		  031532F5 01D7B296
1  1000	000403F4  02078C5B 02A0978A   +	     dd	d60*y60,d61*y61,d62*y62,d63*y63,d64*y64,d65*y65,d66*y66,d67*y67
   1001		  03E39B3E 03D17A80   +
   1002		  03848CE2 031532F5   +
   1003		  026A9723 016B22B2
1  1004	00040414  013DD60C 016F604D   +	     dd	d70*y70,d71*y71,d72*y72,d73*y73,d74*y74,d75*y75,d76*y76,d77*y77
   1005		  0257D6A4 02455DD8   +
   1006		  0211BA14 01D7B296   +
   1007		  016B22B2 00CC9C90
1  1008					 ; luminance - huffman decode tables - dc coefficients
1  1009	00040434  00 00	01 02 03 03 04+	 ydd db	00h,00h,01h,02h,03h,03h,04h,04h	; two 4	byte tables
   1010		  04
1  1011	0004043C  05 06	07 08 09 0A 0B+	 ydt db	05h,06h,07h,08h,09h,0Ah,0Bh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh
   1012		  0E 0E	0E 0E 0E 0E 0E
1  1013					 ; luminance - huffman decode tables - ac coefficients
1  1014	0004044A  10 10	10 10 20 20 20+	 yad db	10h,10h,10h,10h,20h,20h,20h,20h	; nine 8 byte tables
   1015		  20
1  1016	00040452  30 30	30 30 00 00 40+	     db	30h,30h,30h,30h,00h,00h,40h,40h,11h,11h,11h,11h,50h,50h,21h,21h
   1017		  40 11	11 11 11 50 50+
   1018		  21 21
1  1019	00040462  12 12	12 12 13 13 14+	     db	12h,12h,12h,12h,13h,13h,14h,14h,60h,60h,31h,31h,15h,15h,16h,16h
   1020		  14 60	60 31 31 15 15+
   1021		  16 16
1  1022	00040472  70 70	22 22 17 17 41+	     db	70h,70h,22h,22h,17h,17h,41h,23h,18h,18h,19h,19h,1Ah,1Ah,80h,32h
   1023		  23 18	18 19 19 1A 1A+
   1024		  80 32
1  1025	00040482  24 24	1B 1B 1C 1C 51+	     db	24h,24h,1Bh,1Bh,1Ch,1Ch,51h,25h,1Dh,1Dh,0Fh,0Fh,42h,33h,26h,27h
   1026		  25 1D	1D 0F 0F 42 33+
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 19
uvcview.asm



   1027		  26 27
1  1028					 ; luminance - huffman decode table - ac coefficients
1  1029	00040492  28 28	90 A0 61 71 81+	 yat db	28h,28h,90h,160,61h,71h,81h,91h,161,52h,62h,72h,82h,92h,162,43h
   1030		  91 A1	52 62 72 82 92+
   1031		  A2 43
1  1032	000404A2  53 63	73 83 93 A3 34+	     db	53h,63h,73h,83h,93h,163,34h,44h,54h,64h,74h,84h,94h,164,35h,45h
   1033		  44 54	64 74 84 94 A4+
   1034		  35 45
1  1035	000404B2  55 65	75 85 95 A5 36+	     db	55h,65h,75h,85h,95h,165,36h,46h,56h,66h,76h,86h,96h,166,37h,47h
   1036		  46 56	66 76 86 96 A6+
   1037		  37 47
1  1038	000404C2  57 67	77 87 97 A7 38+	     db	57h,67h,77h,87h,97h,167,38h,48h,58h,68h,78h,88h,98h,168,29h,39h
   1039		  48 58	68 78 88 98 A8+
   1040		  29 39
1  1041	000404D2  49 59	69 79 89 99 A9+	     db	49h,59h,69h,79h,89h,99h,169,2Ah,3Ah,4Ah,5Ah,6Ah,7Ah,8Ah,9Ah,170
   1042		  2A 3A	4A 5A 6A 7A 8A+
   1043		  9A AA
1  1044	000404E2  2B 3B	4B 5B 6B 7B 8B+	     db	2Bh,3Bh,4Bh,5Bh,6Bh,7Bh,8Bh,9Bh,171,2Ch,3Ch,4Ch,5Ch,6Ch,7Ch,8Ch
   1045		  9B AB	2C 3C 4C 5C 6C+
   1046		  7C 8C
1  1047	000404F2  9C AC	2D 3D 4D 5D 6D+	     db	9Ch,172,2Dh,3Dh,4Dh,5Dh,6Dh,7Dh,8Dh,9Dh,173,1Eh,2Eh,3Eh,4Eh,5Eh
   1048		  7D 8D	9D AD 1E 2E 3E+
   1049		  4E 5E
1  1050	00040502  6E 7E	8E 9E AE 1F 2F+	     db	6Eh,7Eh,8Eh,9Eh,174,1Fh,2Fh,3Fh,4Fh,5Fh,6Fh,7Fh,8Fh,9Fh,175,0Eh
   1051		  3F 4F	5F 6F 7F 8F 9F+
   1052		  AF 0E
1  1053
1  1054	00040512			 dataseg
1  1055					 ; chrominance - aanfdct - scaled quantization table
1  1056	00040512  00AAAAAA 0049D387   +	 cqt dd	q00/c00,q01/c01,q02/c02,q03/c03,q04/c04,q05/c05,q06/c06,q07/c07
   1057		  00343FC1 002B8AC1   +
   1058		  00186186 001F07F3   +
   1059		  002D0CD5 00585E76
1  1060	00040532  0049D387 00214420   +	     dd	q10/c10,q11/c11,q12/c12,q13/c13,q14/c14,q15/c15,q16/c16,q17/c17
   1061		  001AE821 001740DC   +
   1062		  001193E3 00165F45   +
   1063		  00207AB5 003FB5E3
1  1064	00040552  00343FC1 001AE821   +	     dd	q20/c20,q21/c21,q22/c22,q23/c23,q24/c24,q25/c25,q26/c26,q27/c27
   1065		  00156C4C 00143285   +
   1066		  0012A90E 0017C009   +
   1067		  00227AD8 0043A27C
1  1068	00040572  002B8AC1 001740DC   +	     dd	q30/c30,q31/c31,q32/c32,q33/c33,q34/c34,q35/c35,q36/c36,q37/c37
   1069		  00143285 0011A210   +
   1070		  0014BBFA 001A63C6   +
   1071		  00264FDE 004B26D3
1  1072	00040592  00186186 001193E3   +	     dd	q40/c40,q41/c41,q42/c42,q43/c43,q44/c44,q45/c45,q46/c46,q47/c47
   1073		  0012A90E 0014BBFA   +
   1074		  00186186 001F07F3   +
   1075		  002D0CD5 00585E76
1  1076	000405B2  001F07F3 00165F45   +	     dd	q50/c50,q51/c51,q52/c52,q53/c53,q54/c54,q55/c55,q56/c56,q57/c57
   1077		  0017C009 001A63C6   +
   1078		  001F07F3 00277EBB   +
   1079		  00395682 007078EF
1  1080	000405D2  002D0CD5 00207AB5   +	     dd	q60/c60,q61/c61,q62/c62,q63/c63,q64/c64,q65/c65,q66/c66,q67/c67
   1081		  00227AD8 00264FDE   +
   1082		  002D0CD5 00395682   +
   1083		  00533DE5 00A348DC
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 20
uvcview.asm



1  1084	000405F2  00585E76 003FB5E3   +	     dd	q70/c70,q71/c71,q72/c72,q73/c73,q74/c74,q75/c75,q76/c76,q77/c77
   1085		  0043A27C 004B26D3   +
   1086		  00585E76 007078EF   +
   1087		  00A348DC 01404B57
1  1088					 ; chrominance - huffman size table - dc coefficients
1  1089	00040612  02 02	02 03 04 05 06+	 cds db	02,02,02,03,04,05,06,07,08,09,10,11
   1090		  07 08	09 0A 0B
1  1091					 ; chrominance - huffman code table - dc coefficients
1  1092	0004061E  0000 0001 0002 0006 +	 cdc dw	0000h,0001h,0002h,0006h,000Eh,001Eh,003Eh,007Eh,00FEh,01FEh,03FEh,07FEh
   1093		  000E 001E 003E 007E +
   1094		  00FE 01FE 03FE 07FE
1  1095					 ; chrominance - huffman size table - ac coefficients
1  1096	00040636  02 00	00 00 00 00 00+	 cas db	02,00,00,00,00,00,00,00,00,00,00,00,00,00,00,10
   1097		  00 00	00 00 00 00 00+
   1098		  00 0A
1  1099	00040646  02 04	05 05 06 06 07+	     db	02,04,05,05,06,06,07,07,08,09,09,09,09,11,14,15
   1100		  07 08	09 09 09 09 0B+
   1101		  0E 0F
1  1102	00040656  03 06	08 08 09 0A 0B+	     db	03,06,08,08,09,10,11,11,16,16,16,16,16,16,16,16
   1103		  0B 10	10 10 10 10 10+
   1104		  10 10
1  1105	00040666  04 08	0A 0A 10 10 10+	     db	04,08,10,10,16,16,16,16,16,16,16,16,16,16,16,16
   1106		  10 10	10 10 10 10 10+
   1107		  10 10
1  1108	00040676  05 09	0C 0C 10 10 10+	     db	05,09,12,12,16,16,16,16,16,16,16,16,16,16,16,16
   1109		  10 10	10 10 10 10 10+
   1110		  10 10
1  1111	00040686  05 0B	0F 10 10 10 10+	     db	05,11,15,16,16,16,16,16,16,16,16,16,16,16,16,16
   1112		  10 10	10 10 10 10 10+
   1113		  10 10
1  1114	00040696  06 0C	10 10 10 10 10+	     db	06,12,16,16,16,16,16,16,16,16,16,16,16,16,16,16
   1115		  10 10	10 10 10 10 10+
   1116		  10 10
1  1117	000406A6  07 10	10 10 10 10 10+	     db	07,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
   1118		  10 10	10 10 10 10 10+
   1119		  10 10
1  1120	000406B6  09 10	10 10 10 10 10+	     db	09,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
   1121		  10 10	10 10 10 10 10+
   1122		  10 10
1  1123	000406C6  0A 10	10 10 10 10 10+	     db	10,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
   1124		  10 10	10 10 10 10 10+
   1125		  10 10
1  1126	000406D6  0C 10	10 10 10 10 10+	     db	12,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
   1127		  10 10	10 10 10 10 10+
   1128		  10 10
1  1129					 ; chrominance - huffman code table - ac coefficients
1  1130	000406E6  0000 0000 0000 0000 +	 cac dw	00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,00000h,+
   1131		  0000 0000 0000 0000 +	 00000h,00000h,00000h,003FAh
   1132		  0000 0000 0000 0000 +
   1133		  0000 0000 0000 03FA
1  1134	00040706  0001 000B 001A 001B +	     dw	00001h,0000Bh,0001Ah,0001Bh,0003Ah,0003Bh,00079h,0007Ah,000F9h,001F7h,001F8h,001F9h,+
   1135		  003A 003B 0079 007A +	 001FAh,007F9h,03FE0h,07FC3h
   1136		  00F9 01F7 01F8 01F9 +
   1137		  01FA 07F9 3FE0 7FC3
1  1138	00040726  0004 0039 00F7 00F8 +	     dw	00004h,00039h,000F7h,000F8h,001F6h,003F9h,007F7h,007F8h,0FFB7h,0FFC0h,0FFC9h,0FFD2h,+
   1139		  01F6 03F9 07F7 07F8 +	 0FFDBh,0FFE4h,0FFEDh,0FFF6h
   1140		  FFB7 FFC0 FFC9 FFD2 +
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 21
uvcview.asm



   1141		  FFDB FFE4 FFED FFF6
1  1142	00040746  000A 00F6 03F7 03F8 +	     dw	0000Ah,000F6h,003F7h,003F8h,0FF97h,0FF9Fh,0FFA7h,0FFAFh,0FFB8h,0FFC1h,0FFCAh,0FFD3h,+
   1143		  FF97 FF9F FFA7 FFAF +	 0FFDCh,0FFE5h,0FFEEh,0FFF7h
   1144		  FFB8 FFC1 FFCA FFD3 +
   1145		  FFDC FFE5 FFEE FFF7
1  1146	00040766  0018 01F5 0FF6 0FF7 +	     dw	00018h,001F5h,00FF6h,00FF7h,0FF98h,0FFA0h,0FFA8h,0FFB0h,0FFB9h,0FFC2h,0FFCBh,0FFD4h,+
   1147		  FF98 FFA0 FFA8 FFB0 +	 0FFDDh,0FFE6h,0FFEFh,0FFF8h
   1148		  FFB9 FFC2 FFCB FFD4 +
   1149		  FFDD FFE6 FFEF FFF8
1  1150	00040786  0019 07F6 7FC2 FF91 +	     dw	00019h,007F6h,07FC2h,0FF91h,0FF99h,0FFA1h,0FFA9h,0FFB1h,0FFBAh,0FFC3h,0FFCCh,0FFD5h,+
   1151		  FF99 FFA1 FFA9 FFB1 +	 0FFDEh,0FFE7h,0FFF0h,0FFF9h
   1152		  FFBA FFC3 FFCC FFD5 +
   1153		  FFDE FFE7 FFF0 FFF9
1  1154	000407A6  0038 0FF5 FF8C FF92 +	     dw	00038h,00FF5h,0FF8Ch,0FF92h,0FF9Ah,0FFA2h,0FFAAh,0FFB2h,0FFBBh,0FFC4h,0FFCDh,0FFD6h,+
   1155		  FF9A FFA2 FFAA FFB2 +	 0FFDFh,0FFE8h,0FFF1h,0FFFAh
   1156		  FFBB FFC4 FFCD FFD6 +
   1157		  FFDF FFE8 FFF1 FFFA
1  1158	000407C6  0078 FF88 FF8D FF93 +	     dw	00078h,0FF88h,0FF8Dh,0FF93h,0FF9Bh,0FFA3h,0FFABh,0FFB3h,0FFBCh,0FFC5h,0FFCEh,0FFD7h,+
   1159		  FF9B FFA3 FFAB FFB3 +	 0FFE0h,0FFE9h,0FFF2h,0FFFBh
   1160		  FFBC FFC5 FFCE FFD7 +
   1161		  FFE0 FFE9 FFF2 FFFB
1  1162	000407E6  01F4 FF89 FF8E FF94 +	     dw	001F4h,0FF89h,0FF8Eh,0FF94h,0FF9Ch,0FFA4h,0FFACh,0FFB4h,0FFBDh,0FFC6h,0FFCFh,0FFD8h,+
   1163		  FF9C FFA4 FFAC FFB4 +	 0FFE1h,0FFEAh,0FFF3h,0FFFCh
   1164		  FFBD FFC6 FFCF FFD8 +
   1165		  FFE1 FFEA FFF3 FFFC
1  1166	00040806  03F6 FF8A FF8F FF95 +	     dw	003F6h,0FF8Ah,0FF8Fh,0FF95h,0FF9Dh,0FFA5h,0FFADh,0FFB5h,0FFBEh,0FFC7h,0FFD0h,0FFD9h,+
   1167		  FF9D FFA5 FFAD FFB5 +	 0FFE2h,0FFEBh,0FFF4h,0FFFDh
   1168		  FFBE FFC7 FFD0 FFD9 +
   1169		  FFE2 FFEB FFF4 FFFD
1  1170	00040826  0FF4 FF8B FF90 FF96 +	     dw	00FF4h,0FF8Bh,0FF90h,0FF96h,0FF9Eh,0FFA6h,0FFAEh,0FFB6h,0FFBFh,0FFC8h,0FFD1h,0FFDAh,+
   1171		  FF9E FFA6 FFAE FFB6 +	 0FFE3h,0FFECh,0FFF5h,0FFFEh
   1172		  FFBF FFC8 FFD1 FFDA +
   1173		  FFE3 FFEC FFF5 FFFE
1  1174
1  1175	00040846			 dataseg
1  1176					 ; chrominance - aanidct - scaled dequantization table
1  1177	00040846  03000000 06EF693C   +	 cqi dd	d00*c00,d01*c01,d02*c02,d03*c03,d04*c04,d05*c05,d06*c06,d07*c07
   1178		  09CC99CC 0BC23DE0   +
   1179		  15000000 107FE590   +
   1180		  0B5D7864 05CB3C38
1  1181	00040866  06EF693C 0F641B00   +	     dd	d10*c10,d11*c11,d12*c12,d13*c13,d14*c14,d15*c15,d16*c16,d17*c17
   1182		  13075758 1604B038   +
   1183		  1D20B9FC 16E2B62C   +
   1184		  0FC38D3C 08094E7C
1  1185	00040886  09CC99CC 13075758   +	     dd	d20*c20,d21*c21,d22*c22,d23*c23,d24*c24,d25*c25,d26*c26,d27*c27
   1186		  17E64558 195990CC   +
   1187		  1B701508 158EC920   +
   1188		  0ED96804 0791F088
1  1189	000408A6  0BC23DE0 1604B038   +	     dd	d30*c30,d31*c31,d32*c32,d33*c33,d34*c34,d35*c35,d36*c36,d37*c37
   1190		  195990CC 1D094E7C   +
   1191		  18B181F0 1366C6E0   +
   1192		  0D5D2CC0 06D01988
1  1193	000408C6  15000000 1D20B9FC   +	     dd	d40*c40,d41*c41,d42*c42,d43*c43,d44*c44,d45*c45,d46*c46,d47*c47
   1194		  1B701508 18B181F0   +
   1195		  15000000 107FE590   +
   1196		  0B5D7864 05CB3C38
1  1197	000408E6  107FE590 16E2B62C   +	     dd	d50*c50,d51*c51,d52*c52,d53*c53,d54*c54,d55*c55,d56*c56,d57*c57
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 22
uvcview.asm



   1198		  158EC920 1366C6E0   +
   1199		  107FE590 0CF6B184   +
   1200		  08EDF4B4 048D5EDC
1  1201	00040906  0B5D7864 0FC38D3C   +	     dd	d60*c60,d61*c61,d62*c62,d63*c63,d64*c64,d65*c65,d66*c66,d67*c67
   1202		  0ED96804 0D5D2CC0   +
   1203		  0B5D7864 08EDF4B4   +
   1204		  062697FC 0322B87C
1  1205	00040926  05CB3C38 08094E7C   +	     dd	d70*c70,d71*c71,d72*c72,d73*c73,d74*c74,d75*c75,d76*c76,d77*c77
   1206		  0791F088 06D01988   +
   1207		  05CB3C38 048D5EDC   +
   1208		  0322B87C 01993920
1  1209					 ; chrominance - huffman decode	tables - dc coefficients
1  1210	00040946  00 00	01 01 02 02 02+	 cdd db	00h,00h,01h,01h,02h,02h,02h,02h	; two 4	byte tables
   1211		  02
1  1212	0004094E  03 04	05 06 07 08 09+	 cdt db	03h,04h,05h,06h,07h,08h,09h,0Ah,0Bh,0Eh,0Eh,0Eh,0Eh,0Eh
   1213		  0A 0B	0E 0E 0E 0E 0E
1  1214					 ; chrominance - huffman decode	tables - ac coefficients
1  1215	0004095C  00 00	00 00 10 10 10+	 cad db	00h,00h,00h,00h,10h,10h,10h,10h	; nine 8 byte tables
   1216		  10
1  1217	00040964  20 20	20 20 30 30 11+	     db	20h,20h,20h,20h,30h,30h,11h,11h,40h,40h,50h,50h,12h,12h,13h,13h
   1218		  11 40	40 50 50 12 12+
   1219		  13 13
1  1220	00040974  60 60	21 21 14 14 15+	     db	60h,60h,21h,21h,14h,14h,15h,15h,70h,70h,16h,16h,17h,17h,31h,22h
   1221		  15 70	70 16 16 17 17+
   1222		  31 22
1  1223	00040984  23 23	18 18 80 41 24+	     db	23h,23h,18h,18h,80h,41h,24h,19h,1Ah,1Ah,1Bh,1Bh,1Ch,1Ch,90h,32h
   1224		  19 1A	1A 1B 1B 1C 1C+
   1225		  90 32
1  1226	00040994  33 33	25 25 0F 0F 51+	     db	33h,33h,25h,25h,0Fh,0Fh,51h,26h,27h,27h,1Dh,1Dh,160,61h,42h,43h
   1227		  26 27	27 1D 1D A0 61+
   1228		  42 43
1  1229					 ; chrominance - huffman decode	table -	ac coefficients
1  1230	000409A4  1E 1E	1E 1E 52 52 1F+	 cat db	1Eh,1Eh,1Eh,1Eh,52h,52h,1Fh,1Fh,71h,81h,91h,161,62h,72h,82h,92h
   1231		  1F 71	81 91 A1 62 72+
   1232		  82 92
1  1233	000409B4  A2 53	63 73 83 93 A3+	     db	162,53h,63h,73h,83h,93h,163,34h,44h,54h,64h,74h,84h,94h,164,35h
   1234		  34 44	54 64 74 84 94+
   1235		  A4 35
1  1236	000409C4  45 55	65 75 85 95 A5+	     db	45h,55h,65h,75h,85h,95h,165,36h,46h,56h,66h,76h,86h,96h,166,37h
   1237		  36 46	56 66 76 86 96+
   1238		  A6 37
1  1239	000409D4  47 57	67 77 87 97 A7+	     db	47h,57h,67h,77h,87h,97h,167,28h,38h,48h,58h,68h,78h,88h,98h,168
   1240		  28 38	48 58 68 78 88+
   1241		  98 A8
1  1242	000409E4  29 39	49 59 69 79 89+	     db	29h,39h,49h,59h,69h,79h,89h,99h,169,2Ah,3Ah,4Ah,5Ah,6Ah,7Ah,8Ah
   1243		  99 A9	2A 3A 4A 5A 6A+
   1244		  7A 8A
1  1245	000409F4  9A AA	2B 3B 4B 5B 6B+	     db	9Ah,170,2Bh,3Bh,4Bh,5Bh,6Bh,7Bh,8Bh,9Bh,171,2Ch,3Ch,4Ch,5Ch,6Ch
   1246		  7B 8B	9B AB 2C 3C 4C+
   1247		  5C 6C
1  1248	00040A04  7C 8C	9C AC 2D 3D 4D+	     db	7Ch,8Ch,9Ch,172,2Dh,3Dh,4Dh,5Dh,6Dh,7Dh,8Dh,9Dh,173,2Eh,3Eh,4Eh
   1249		  5D 6D	7D 8D 9D AD 2E+
   1250		  3E 4E
1  1251	00040A14  5E 6E	7E 8E 9E AE 2F+	     db	5Eh,6Eh,7Eh,8Eh,9Eh,174,2Fh,3Fh,4Fh,5Fh,6Fh,7Fh,8Fh,9Fh,175,0Eh
   1252		  3F 4F	5F 6F 7F 8F 9F+
   1253		  AF 0E
1  1254
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 23
uvcview.asm



1  1255	00040A24			 udataseg
1  1256	00000400  ????????		 hcInBits dd ?
1  1257	00000404  ????????		 hcOffset dd ?
1  1258	00000408  ????????		 hcStatus dd ?
1  1259
1  1260	0000040C			 dataseg
1  1261					 ; zig-zag ordering
1  1262	00040A24  00 01	08 10 09 02 03+	 zzo db	00,01,08,16,09,02,03,10
   1263		  0A
1  1264	00040A2C  11 18	20 19 12 0B 04+	     db	17,24,32,25,18,11,04,05
   1265		  05
1  1266	00040A34  0C 13	1A 21 28 30 29+	     db	12,19,26,33,40,48,41,34
   1267		  22
1  1268	00040A3C  1B 14	0D 06 07 0E 15+	     db	27,20,13,06,07,14,21,28
   1269		  1C
1  1270	00040A44  23 2A	31 38 39 32 2B+	     db	35,42,49,56,57,50,43,36
   1271		  24
1  1272	00040A4C  1D 16	0F 17 1E 25 2C+	     db	29,22,15,23,30,37,44,51
   1273		  33
1  1274	00040A54  3A 3B	34 2D 26 1F 27+	     db	58,59,52,45,38,31,39,46
   1275		  2E
1  1276	00040A5C  35 3C	3D 36 2F 37 3E+	     db	53,60,61,54,47,55,62,63
   1277		  3F
1  1278
1  1279	00040A64			 dataseg
1  1280	00040A64  00			 GoodImage db 0
1  1281
1  1282	00040A65			 dataseg
1  1283	00040A65  00000000		 CntRestart dd 0
1  1284	00040A69  00000000		 UseRestart dd 0
1  1285
1  1286	00040A6D			 udataseg
1  1287	0000040C  03*(????????)		 dcValue dd 3 dup(?)
1  1288
1  1289	00000418			 codeseg
1  1290	00000414			 proc decoder near
1  1291					 ; clear mcu values
1  1292	00000414  2B C0			   sub eax,eax ; zero
1  1293	00000416  B9 00000100		   mov ecx,4*64	; dwords
1  1294	0000041B  BF 00000000r		   mov edi,offset(mcu)
1  1295	00000420  F3> AB		   rep stosd ; clear
1  1296					 ; fetch huffman state
1  1297	00000422  A1 00000400r		   mov eax,[hcInBits]
1  1298	00000427  8B 3D	00000404r	   mov edi,[hcOffset]
1  1299	0000042D  8B 0D	00000408r	   mov ecx,[hcStatus]
1  1300					 ; point to first matrix
1  1301	00000433  2B ED			   sub ebp,ebp ; offset
1  1302					 ; setup luminance tables
1  1303	00000435  2B F6			   sub esi,esi ; offset
1  1304	00000437			 label NextDCdecode near
1  1305					 ; decode dc huffman code
1  1306	00000437			 label VerifyBits0 near
1  1307					 ; check enough	bits present
1  1308	00000437  80 F9	10		   cmp cl,16 ; maximum size
1  1309	0000043A  73 1B			   jnb EndVerifyBits0 ;	ok
1  1310					 ; obtain additional bits
1  1311	0000043C  C1 E0	08		   shl eax,8 ; alignment
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 24
uvcview.asm



1  1312	0000043F  8A 87	001C268Ar	   mov al,[outBuffer+edi]
1  1313	00000445  47			   inc edi ; next position
1  1314					 ; disregard stuffed zero byte
1  1315	00000446  66| 81 BF 001C2689r +	   cmp [word(outBuffer+edi-1)],00FFh
   1316		  00FF
1  1317	0000044F  75 01			   jne EndSkipZero0 ; use byte
1  1318	00000451  47			   inc edi ; next position
1  1319	00000452			 label EndSkipZero0 near
1  1320	00000452  80 C1	08		   add cl,8 ; bits per byte
1  1321	00000455  EB E0			   jmp VerifyBits0 ; check
1  1322	00000457			 label EndVerifyBits0 near
1  1323					 ; determine first 0 bit
1  1324	00000457  2B DB			   sub ebx,ebx ; zeroes
1  1325	00000459  D3 C8			   ror eax,cl ;	alignment
1  1326	0000045B  0F A4	C3 10		   shld	ebx,eax,16 ; string
1  1327	0000045F  F7 D3			   not ebx ; first 1 bit
1  1328	00000461  66| 0F BD D3		   bsr dx,bx ; bit index
1  1329	00000465  F7 D3			   not ebx ; first 0 bit
1  1330					 ; determine decode table
1  1331	00000467  80 FA	0D		   cmp dl,13 ; boundary
1  1332	0000046A  76 21			   jna dcLongTable
1  1333					 ; access short	tables
1  1334	0000046C  51			   push	ecx ; save reg
1  1335	0000046D  8A CA			   mov cl,dl ; pos 0 bit
1  1336	0000046F  B6 0F			   mov dh,15 ; maximum pos
1  1337	00000471  80 E9	02		   sub cl,2 ; pos index	bits
1  1338	00000474  2A F2			   sub dh,dl ; table number
1  1339	00000476  D3 EB			   shr ebx,cl ;	align index
1  1340	00000478  C1 EA	06		   shr edx,6 ; align number
1  1341	0000047B  59			   pop ecx ; restore reg
1  1342	0000047C  83 E2	04		   and edx,04h ; number
1  1343	0000047F  83 E3	03		   and ebx,03h ; index
1  1344	00000482  33 DA			   xor ebx,edx ; address
1  1345	00000484  8A 9C	1E 00040434r	   mov bl,[ydd+esi+ebx]
1  1346	0000048B  EB 0E			   jmp EndDCdecode
1  1347	0000048D			 label dcLongTable near
1  1348					 ; access longer table
1  1349	0000048D  B3 0D			   mov bl,13 ; maximum pos
1  1350	0000048F  2A DA			   sub bl,dl ; table index
1  1351	00000491  83 E3	0F		   and ebx,0Fh ; address
1  1352	00000494  8A 9C	1E 0004043Cr	   mov bl,[ydt+esi+ebx]
1  1353	0000049B			 label EndDCDecode near
1  1354					 ; check valid symbol
1  1355	0000049B  80 FB	0E		   cmp bl,0Eh ;	<BAD>
1  1356	0000049E  75 0C			   jne dcValid ; ok
1  1357	000004A0  C6 05	00040A64r 00	   mov [GoodImage],0
1  1358	000004A7  E9 00000201		   jmp EndDecoder
1  1359	000004AC			 label dcValid near
1  1360					 ; strip huffman code
1  1361	000004AC  D3 C0			   rol eax,cl ;	alignment
1  1362	000004AE  2A 8C	1E 00040100r	   sub cl,[yds+esi+ebx]
1  1363					 ; check data available
1  1364	000004B5  2B D2			   sub edx,edx ; zero
1  1365	000004B7  80 FB	00		   cmp bl,00h ;	minimum
1  1366	000004BA  76 34			   jna ApplyReference
1  1367					 ; obtain dc huffman data
1  1368	000004BC			 label VerifyBits1 near
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 25
uvcview.asm



1  1369					 ; check enough	bits present
1  1370	000004BC  80 F9	0B		   cmp cl,11 ; maximum size
1  1371	000004BF  73 1B			   jnb EndVerifyBits1 ;	ok
1  1372					 ; obtain additional bits
1  1373	000004C1  C1 E0	08		   shl eax,8 ; alignment
1  1374	000004C4  8A 87	001C268Ar	   mov al,[outBuffer+edi]
1  1375	000004CA  47			   inc edi ; next position
1  1376					 ; disregard stuffed zero byte
1  1377	000004CB  66| 81 BF 001C2689r +	   cmp [word(outBuffer+edi-1)],00FFh
   1378		  00FF
1  1379	000004D4  75 01			   jne EndSkipZero1 ; use byte
1  1380	000004D6  47			   inc edi ; next position
1  1381	000004D7			 label EndSkipZero1 near
1  1382	000004D7  80 C1	08		   add cl,8 ; bits per byte
1  1383	000004DA  EB E0			   jmp VerifyBits1 ; check
1  1384	000004DC			 label EndVerifyBits1 near
1  1385					 ; obtain dc data value
1  1386	000004DC  D3 C8			   ror eax,cl ;	alignment
1  1387	000004DE  F5			   cmc ; negative borrow
1  1388	000004DF  83 DA	00		   sbb edx,0 ; negative
1  1389	000004E2  51			   push	ecx ; save reg
1  1390	000004E3  8A CB			   mov cl,bl ; data size
1  1391	000004E5  0F A5	C2		   shld	edx,eax,cl ; value
1  1392	000004E8  59			   pop ecx ; restore reg
1  1393	000004E9  83 D2	00		   adc edx,0 ; negative
1  1394					 ; strip dc data value
1  1395	000004EC  D3 C0			   rol eax,cl ;	alignment
1  1396	000004EE  2A CB			   sub cl,bl ; data size
1  1397	000004F0			 label ApplyReference near
1  1398					 ; add reference dc value
1  1399	000004F0  8B DD			   mov ebx,ebp ; matrix	index
1  1400	000004F2  C1 EB	06		   shr ebx,6 ; derive index
1  1401	000004F5  83 EB	01		   sub ebx,1 ; adjust index
1  1402	000004F8  83 D3	00		   adc ebx,0 ; proper index
1  1403	000004FB  03 14	9D 0000040Cr	   add edx,[dcValue+ebx*4]
1  1404					 ; set reference dc value
1  1405	00000502  89 14	9D 0000040Cr	   mov [dcValue+ebx*4],edx
1  1406					 ; apply dequantize factor
1  1407	00000509  50			   push	eax ; save register
1  1408	0000050A  8B 86	00040334r	   mov eax,[yqi+esi] ; first
1  1409	00000510  F7 EA			   imul	edx ; DC*2E0*DQ*2E23
1  1410	00000512  0F A4	C2 19		   shld	edx,eax,25 ; DC*2E16
1  1411	00000516  58			   pop eax ; restore register
1  1412					 ; store dc component value
1  1413	00000517  89 14	AD 00000000r	   mov [mcu+ebp*4],edx
1  1414					 ; bump	to next	element
1  1415	0000051E  8D 6D	01		   lea ebp,[ebp+1] ; offset
1  1416	00000521			 label NextACdecode near
1  1417					 ; decode ac huffman code
1  1418	00000521			 label VerifyBits2 near
1  1419					 ; check enough	bits present
1  1420	00000521  80 F9	10		   cmp cl,16 ; maximum size
1  1421	00000524  73 1B			   jnb EndVerifyBits2 ;	ok
1  1422					 ; obtain additional bits
1  1423	00000526  C1 E0	08		   shl eax,8 ; alignment
1  1424	00000529  8A 87	001C268Ar	   mov al,[outBuffer+edi]
1  1425	0000052F  47			   inc edi ; next position
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 26
uvcview.asm



1  1426					 ; disregard stuffed zero byte
1  1427	00000530  66| 81 BF 001C2689r +	   cmp [word(outBuffer+edi-1)],00FFh
   1428		  00FF
1  1429	00000539  75 01			   jne EndSkipZero2 ; use byte
1  1430	0000053B  47			   inc edi ; next position
1  1431	0000053C			 label EndSkipZero2 near
1  1432	0000053C  80 C1	08		   add cl,8 ; bits per byte
1  1433	0000053F  EB E0			   jmp VerifyBits2 ; check
1  1434	00000541			 label EndVerifyBits2 near
1  1435					 ; determine first 0 bit
1  1436	00000541  2B DB			   sub ebx,ebx ; zeroes
1  1437	00000543  D3 C8			   ror eax,cl ;	alignment
1  1438	00000545  0F A4	C3 10		   shld	ebx,eax,16 ; string
1  1439	00000549  F7 D3			   not ebx ; first 1 bit
1  1440	0000054B  66| 0F BD D3		   bsr dx,bx ; bit index
1  1441	0000054F  F7 D3			   not ebx ; first 0 bit
1  1442					 ; determine decode table
1  1443	00000551  80 FA	06		   cmp dl,6 ; boundary
1  1444	00000554  76 21			   jna acLongTable
1  1445					 ; access short	tables
1  1446	00000556  51			   push	ecx ; save reg
1  1447	00000557  8A CA			   mov cl,dl ; pos 0 bit
1  1448	00000559  B6 0F			   mov dh,15 ; maximum pos
1  1449	0000055B  80 E9	03		   sub cl,3 ; pos index	bits
1  1450	0000055E  2A F2			   sub dh,dl ; table number
1  1451	00000560  D3 EB			   shr ebx,cl ;	align index
1  1452	00000562  C1 EA	05		   shr edx,5 ; align number
1  1453	00000565  59			   pop ecx ; restore reg
1  1454	00000566  83 E2	78		   and edx,78h ; number
1  1455	00000569  83 E3	07		   and ebx,07h ; index
1  1456	0000056C  33 DA			   xor ebx,edx ; address
1  1457	0000056E  8A 9C	1E 0004044Ar	   mov bl,[yad+esi+ebx]
1  1458	00000575  EB 0A			   jmp EndACdecode
1  1459	00000577			 label acLongTable near
1  1460					 ; access longer table
1  1461	00000577  83 E3	7F		   and ebx,7Fh ; address
1  1462	0000057A  8A 9C	1E 00040492r	   mov bl,[yat+esi+ebx]
1  1463	00000581			 label EndACDecode near
1  1464					 ; check valid symbol
1  1465	00000581  80 FB	0E		   cmp bl,0Eh ;	<BAD>
1  1466	00000584  75 0C			   jne acValid ; ok
1  1467	00000586  C6 05	00040A64r 00	   mov [GoodImage],0
1  1468	0000058D  E9 0000011B		   jmp EndDecoder
1  1469	00000592			 label acValid near
1  1470					 ; strip huffman code
1  1471	00000592  D3 C0			   rol eax,cl ;	alignment
1  1472	00000594  2A 8C	1E 00040124r	   sub cl,[yas+esi+ebx]
1  1473					 ; check end of	block
1  1474	0000059B  80 FB	00		   cmp bl,00h ;	<EOB>
1  1475	0000059E  75 05			   jne NotEndOfBlock
1  1476					 ; skip	to last	position
1  1477	000005A0  83 CD	3F		   or ebp,03Fh ; complete
1  1478	000005A3  EB 74			   jmp EndDecode ; done
1  1479	000005A5			 label NotEndOfBlock near
1  1480					 ; check insert	zeroes
1  1481	000005A5  80 FB	0F		   cmp bl,0Fh ;	<ZRL>
1  1482	000005A8  75 05			   jne NotSkipZeroes
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 27
uvcview.asm



1  1483					 ; skip	to next	position
1  1484	000005AA  83 C5	0F		   add ebp,00Fh	; sixteen
1  1485	000005AD  EB 6A			   jmp EndDecode ; done
1  1486	000005AF			 label NotSkipZeroes near
1  1487					 ; verify data available
1  1488	000005AF  76 68			   jna EndDecode ; absent
1  1489					 ; skip	leading	zeroes
1  1490	000005B1  8A D3			   mov dl,bl ; symbol
1  1491	000005B3  83 E2	0F		   and edx,0Fh ; zeroes
1  1492	000005B6  03 EA			   add ebp,edx ; counter
1  1493					 ; obtain ac huffman data
1  1494	000005B8			 label VerifyBits3 near
1  1495					 ; check enough	bits present
1  1496	000005B8  80 F9	0B		   cmp cl,11 ; maximum size
1  1497	000005BB  73 1B			   jnb EndVerifyBits3 ;	ok
1  1498					 ; obtain additional bits
1  1499	000005BD  C1 E0	08		   shl eax,8 ; alignment
1  1500	000005C0  8A 87	001C268Ar	   mov al,[outBuffer+edi]
1  1501	000005C6  47			   inc edi ; next position
1  1502					 ; disregard stuffed zero byte
1  1503	000005C7  66| 81 BF 001C2689r +	   cmp [word(outBuffer+edi-1)],00FFh
   1504		  00FF
1  1505	000005D0  75 01			   jne EndSkipZero3 ; use byte
1  1506	000005D2  47			   inc edi ; next position
1  1507	000005D3			 label EndSkipZero3 near
1  1508	000005D3  80 C1	08		   add cl,8 ; bits per byte
1  1509	000005D6  EB E0			   jmp VerifyBits3 ; check
1  1510	000005D8			 label EndVerifyBits3 near
1  1511					 ; obtain ac data value
1  1512	000005D8  C1 EB	04		   shr ebx,4 ; data size
1  1513	000005DB  2B D2			   sub edx,edx ; zero bits
1  1514	000005DD  D3 C8			   ror eax,cl ;	alignment
1  1515	000005DF  F5			   cmc ; negative borrow
1  1516	000005E0  83 DA	00		   sbb edx,0 ; negative
1  1517	000005E3  51			   push	ecx ; save reg
1  1518	000005E4  8A CB			   mov cl,bl ; data size
1  1519	000005E6  0F A5	C2		   shld	edx,eax,cl ; value
1  1520	000005E9  59			   pop ecx ; restore reg
1  1521	000005EA  83 D2	00		   adc edx,0 ; negative
1  1522					 ; strip ac data value
1  1523	000005ED  D3 C0			   rol eax,cl ;	alignment
1  1524	000005EF  2A CB			   sub cl,bl ; data size
1  1525					 ; prepare zigzag sequence
1  1526	000005F1  8B DD			   mov ebx,ebp ; matrix	index
1  1527	000005F3  8A EB			   mov ch,bl ; matrix index
1  1528	000005F5  80 E3	3F		   and bl,03Fh ; zigzag	index
1  1529	000005F8  80 E5	C0		   and ch,0C0h ; isolate matrix
1  1530	000005FB  8A 9B	00040A24r	   mov bl,[zzo+ebx] ; sequence
1  1531					 ; apply dequantize factor
1  1532	00000601  50			   push	eax ; save register
1  1533	00000602  8B 84	9E 00040334r	   mov eax,[yqi+esi+ebx*4]
1  1534	00000609  F7 EA			   imul	edx ; AC*2E0*DQ*2E23
1  1535	0000060B  0F A4	C2 19		   shld	edx,eax,25 ; AC*2E16
1  1536	0000060F  58			   pop eax ; restore register
1  1537					 ; store ac component value
1  1538	00000610  32 DD			   xor bl,ch ; use matrix
1  1539	00000612  89 14	9D 00000000r	   mov [mcu+ebx*4],edx
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 28
uvcview.asm



1  1540	00000619			 label EndDecode near
1  1541					 ; bump	to next	element
1  1542	00000619  8D 6D	01		   lea ebp,[ebp+1] ; offset
1  1543	0000061C  F7 C5	0000003F	   test	ebp,03Fh ; more
1  1544	00000622  0F 85	FFFFFEF9	   jnz NextACdecode
1  1545					 ; start next luminance
1  1546	00000628  81 FD	00000080	   cmp ebp,080h	; done
1  1547	0000062E  0F 82	FFFFFE03	   jb NextDCdecode
1  1548					 ; start next chrominance
1  1549	00000634  BE 00000512		   mov esi,cqi-yqi ; offset
1  1550	00000639  81 FD	00000100	   cmp ebp,100h	; done
1  1551	0000063F  0F 82	FFFFFDF2	   jb NextDCdecode
1  1552					 ; check restart markers
1  1553	00000645  83 3D	00040A69r 00	   cmp [UseRestart],0
1  1554	0000064C  76 5F			   jna EndDecoder
1  1555	0000064E  FF 0D	00040A65r	   dec [CntRestart]
1  1556	00000654  75 57			   jnz EndDecoder
1  1557	00000656  8B 15	00040A69r	   mov edx,[UseRestart]
1  1558	0000065C  89 15	00040A65r	   mov [CntRestart],edx
1  1559	00000662			 label VerifyBits4 near
1  1560					 ; check enough	bits present
1  1561	00000662  80 F9	10		   cmp cl,16 ; maximum size
1  1562	00000665  73 1B			   jnb EndVerifyBits4 ;	ok
1  1563					 ; obtain additional bits
1  1564	00000667  C1 E0	08		   shl eax,8 ; alignment
1  1565	0000066A  8A 87	001C268Ar	   mov al,[outBuffer+edi]
1  1566	00000670  47			   inc edi ; next position
1  1567					 ; disregard stuffed zero byte
1  1568	00000671  66| 81 BF 001C2689r +	   cmp [word(outBuffer+edi-1)],00FFh
   1569		  00FF
1  1570	0000067A  75 01			   jne EndSkipZero4 ; use byte
1  1571	0000067C  47			   inc edi ; next position
1  1572	0000067D			 label EndSkipZero4 near
1  1573	0000067D  80 C1	08		   add cl,8 ; bits per byte
1  1574	00000680  EB E0			   jmp VerifyBits4 ; check
1  1575	00000682			 label EndVerifyBits4 near
1  1576					 ; skip	filler byte present
1  1577	00000682  66| 3D FFFF		   cmp ax,0FFFFh ; filler
1  1578	00000686  75 05			   jne CheckMarker ; no
1  1579	00000688  80 E9	08		   sub cl,8 ; bits per byte
1  1580	0000068B  EB D5			   jmp VerifyBits4 ; skip
1  1581	0000068D			 label CheckMarker near
1  1582					 ; verify restart marker
1  1583	0000068D  80 FC	FF		   cmp ah,0FFh ; marker
1  1584	00000690  72 1B			   jb EndDecoder ; no
1  1585	00000692  3C D0			   cmp al,0D0h ; restart
1  1586	00000694  72 17			   jb EndDecoder ; no
1  1587	00000696  3C D7			   cmp al,0D7h ; restart
1  1588	00000698  77 13			   ja EndDecoder ; no
1  1589	0000069A			 label ResetDecoder near
1  1590	0000069A  2B C0			   sub eax,eax ; zero
1  1591	0000069C  A3 0000040Cr		   mov [dcValue+0],eax
1  1592	000006A1  A3 00000410r		   mov [dcValue+4],eax
1  1593	000006A6  A3 00000414r		   mov [dcValue+8],eax
1  1594	000006AB  2B C9			   sub ecx,ecx ; zero
1  1595	000006AD			 label EndDecoder near
1  1596					 ; store huffman state
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 29
uvcview.asm



1  1597	000006AD  89 3D	00000404r	   mov [hcOffset],edi
1  1598	000006B3  89 0D	00000408r	   mov [hcStatus],ecx
1  1599	000006B9  A3 00000400r		   mov [hcInBits],eax
1  1600	000006BE  C3			   ret ; return
1  1601	000006BF			 endp decoder
1  1602
1  1603	000006BF			 codeseg
1  1604	000006BF			 proc encoder near
1  1605					 ; fetch huffman state
1  1606	000006BF  8B 3D	00000404r	   mov edi,[hcOffset]
1  1607	000006C5  8B 0D	00000408r	   mov ecx,[hcStatus]
1  1608					 ; point to first matrix
1  1609	000006CB  2B ED			   sub ebp,ebp ; offset
1  1610					 ; setup luminance tables
1  1611	000006CD  2B F6			   sub esi,esi ; offset
1  1612	000006CF			 label NextDCelement near
1  1613					 ; dc component	quantization
1  1614	000006CF  8B 14	AD 00000000r	   mov edx,[mcu+ebp*4] ; value
1  1615					 ; apply quantization factor
1  1616	000006D6  8B 86	00040000r	   mov eax,[yqt+esi] ; first
1  1617	000006DC  F7 EA			   imul	edx ; DC*2E18*QF*2E26
1  1618	000006DE  C1 FA	0F		   sar edx,15 ;	keep 12	bits
1  1619	000006E1  83 D2	00		   adc edx,0 ; round result
1  1620					 ; fetch previous dc value
1  1621	000006E4  8B DD			   mov ebx,ebp ; matrix	index
1  1622	000006E6  C1 EB	06		   shr ebx,6 ; derive index
1  1623	000006E9  83 EB	01		   sub ebx,1 ; adjust index
1  1624	000006EC  83 D3	00		   adc ebx,0 ; proper index
1  1625	000006EF  8B 04	9D 0000040Cr	   mov eax,[dcValue+ebx*4]
1  1626					 ; store current dc value
1  1627	000006F6  89 14	9D 0000040Cr	   mov [dcValue+ebx*4],edx
1  1628					 ; huffman code	generation
1  1629	000006FD  2B D0			   sub edx,eax ; new-old
1  1630	000006FF  75 04			   jnz dcNonZeroValue
1  1631					 ; handle dc zero value
1  1632	00000701  2B DB			   sub ebx,ebx ; no data
1  1633	00000703  EB 0C			   jmp dcHuffman ; code
1  1634	00000705			 label dcNonZeroValue near
1  1635					 ; determine dc	value size
1  1636	00000705  8B C2			   mov eax,edx ; dc value
1  1637	00000707  79 03			   jns dcScanBits ; positive
1  1638	00000709  F7 D8			   neg eax ; make positive
1  1639	0000070B  4A			   dec edx ; proper data
1  1640	0000070C			 label dcScanBits near
1  1641					 ; bit scan left to right
1  1642	0000070C  66| 0F BD D8		   bsr bx,ax ; bit index
1  1643	00000710  43			   inc ebx ; bit length
1  1644	00000711			 label dcHuffman near
1  1645					 ; get huffman state
1  1646	00000711  8A C1			   mov al,cl ; string
1  1647					 ; obtain huffman size
1  1648	00000713  8A 8C	1E 00040100r	   mov cl,[yds+esi+ebx*1]
1  1649	0000071A  D3 E0			   shl eax,cl ;	make room
1  1650					 ; append huffman code
1  1651	0000071C  66| 33 84 5E	      +	   xor ax,[ydc+esi+ebx*2]
   1652		  0004010Cr
1  1653	00000724  02 CD			   add cl,ch ; bit length
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 30
uvcview.asm



1  1654					 ; try to emit next byte
1  1655	00000726  80 F9	08		   cmp cl,8 ; bits per byte
1  1656	00000729  72 36			   jb dcNotEmitCode ; too few
1  1657	0000072B  80 E9	08		   sub cl,8 ; bits per byte
1  1658	0000072E  D3 C8			   ror eax,cl ;	alignment
1  1659	00000730  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1660	00000736  47			   inc edi ; next position
1  1661					 ; cater for zero stuffing
1  1662	00000737  34 FF			   xor al,0FFh ; ones/zeros
1  1663	00000739  75 07			   jnz dcEndZeroCode1 ;	no
1  1664	0000073B  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1665	00000741  47			   inc edi ; next position
1  1666	00000742			 label dcEndZeroCode1 near
1  1667					 ; try to emit next byte
1  1668	00000742  80 F9	08		   cmp cl,8 ; bits per byte
1  1669	00000745  72 18			   jb dcEndEmitCode ; too few
1  1670	00000747  80 E9	08		   sub cl,8 ; bits per byte
1  1671	0000074A  C1 C0	08		   rol eax,8 ; alignment
1  1672	0000074D  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1673	00000753  47			   inc edi ; next position
1  1674					 ; cater for zero stuffing
1  1675	00000754  34 FF			   xor al,0FFh ; ones/zeros
1  1676	00000756  75 07			   jnz dcEndZeroCode2 ;	no
1  1677	00000758  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1678	0000075E  47			   inc edi ; next position
1  1679	0000075F			 label dcEndZeroCode2 near
1  1680					 ; cannot emit another byte
1  1681	0000075F			 label dcEndEmitCode near
1  1682					 ; realign on bit boundary
1  1683	0000075F  D3 C0			   rol eax,cl ;	position
1  1684	00000761			 label dcNotEmitCode near
1  1685					 ; append huffman data
1  1686	00000761  85 DB			   test	ebx,ebx	; present
1  1687	00000763  74 46			   jz dcNotEmitData ; no
1  1688	00000765  8A E9			   mov ch,cl ; bit length
1  1689	00000767  8A CB			   mov cl,bl ; bit length
1  1690	00000769  D3 CA			   ror edx,cl ;	alignment
1  1691	0000076B  0F A5	D0		   shld	eax,edx,cl ; append
1  1692	0000076E  02 CD			   add cl,ch ; bit length
1  1693					 ; try to emit next byte
1  1694	00000770  80 F9	08		   cmp cl,8 ; bits per byte
1  1695	00000773  72 36			   jb dcNotEmitData ; too few
1  1696	00000775  80 E9	08		   sub cl,8 ; bits per byte
1  1697	00000778  D3 C8			   ror eax,cl ;	alignment
1  1698	0000077A  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1699	00000780  47			   inc edi ; next position
1  1700					 ; cater for zero stuffing
1  1701	00000781  34 FF			   xor al,0FFh ; ones/zeros
1  1702	00000783  75 07			   jnz dcEndZeroData1 ;	no
1  1703	00000785  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1704	0000078B  47			   inc edi ; next position
1  1705	0000078C			 label dcEndZeroData1 near
1  1706					 ; try to emit next byte
1  1707	0000078C  80 F9	08		   cmp cl,8 ; bits per byte
1  1708	0000078F  72 18			   jb dcEndEmitData ; too few
1  1709	00000791  80 E9	08		   sub cl,8 ; bits per byte
1  1710	00000794  C1 C0	08		   rol eax,8 ; alignment
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 31
uvcview.asm



1  1711	00000797  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1712	0000079D  47			   inc edi ; next position
1  1713					 ; cater for zero stuffing
1  1714	0000079E  34 FF			   xor al,0FFh ; ones/zeros
1  1715	000007A0  75 07			   jnz dcEndZeroData2 ;	no
1  1716	000007A2  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1717	000007A8  47			   inc edi ; next position
1  1718	000007A9			 label dcEndZeroData2 near
1  1719					 ; cannot emit another byte
1  1720	000007A9			 label dcEndEmitData near
1  1721					 ; realign on bit boundary
1  1722	000007A9  D3 C0			   rol eax,cl ;	position
1  1723	000007AB			 label dcNotEmitData near
1  1724					 ; update huffman state
1  1725	000007AB  8A E9			   mov ch,cl ; length
1  1726	000007AD  8A C8			   mov cl,al ; string
1  1727					 ; bump	to next	element
1  1728	000007AF  8D 6D	01		   lea ebp,[ebp+1] ; offset
1  1729	000007B2			 label NextACelement near
1  1730					 ; prepare zigzag sequence
1  1731	000007B2  8B DD			   mov ebx,ebp ; matrix	index
1  1732	000007B4  80 E3	3F		   and bl,03Fh ; zigzag	index
1  1733	000007B7  8A 9B	00040A24r	   mov bl,[zzo+ebx] ; sequence
1  1734					 ; ac component	quantization
1  1735	000007BD  8B D5			   mov edx,ebp ; matrix	index
1  1736	000007BF  80 E2	C0		   and dl,0C0h ; isolate matrix
1  1737	000007C2  32 D3			   xor dl,bl ; zigzag sequence
1  1738	000007C4  8B 14	95 00000000r	   mov edx,[mcu+edx*4] ; value
1  1739					 ; apply quantization factor
1  1740	000007CB  8B 84	9E 00040000r	   mov eax,[yqt+esi+ebx*4]
1  1741	000007D2  F7 EA			   imul	edx ; AC*2E18*QF*2E26
1  1742	000007D4  C1 FA	0F		   sar edx,15 ;	keep 12	bits
1  1743	000007D7  83 D2	00		   adc edx,0 ; round result
1  1744					 ; huffman code	generation
1  1745	000007DA  85 D2			   test	edx,edx	; value
1  1746	000007DC  75 19			   jnz acNonZeroValue
1  1747					 ; update zero counter
1  1748	000007DE  81 C1	04000000	   add ecx,04000000h
1  1749	000007E4  80 FB	3F		   cmp bl,03Fh ; done
1  1750	000007E7  0F 85	000000E5	   jne EndEncode ; next
1  1751					 ; setup EOB huffman code
1  1752	000007ED  2B DB			   sub ebx,ebx ; no data
1  1753	000007EF  81 E1	0000FFFF	   and ecx,0FFFFh ; reset
1  1754	000007F5  EB 31			   jmp acHuffman ; code
1  1755	000007F7			 label acNonZeroValue near
1  1756					 ; setup ZRL huffman code
1  1757	000007F7  B3 0F			   mov bl,0Fh ;	special
1  1758	000007F9			 label VerifyCounter near
1  1759					 ; verify zero counter
1  1760	000007F9  81 F9	40000000	   cmp ecx,40000000h
1  1761	000007FF  72 08			   jb ValidZeroCount
1  1762					 ; update zero counter
1  1763	00000801  81 E9	40000000	   sub ecx,40000000h
1  1764	00000807  EB 1F			   jmp acHuffman ; code
1  1765	00000809			 label ValidZeroCount near
1  1766					 ; determine ac	value size
1  1767	00000809  85 D2			   test	edx,edx	; value
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 32
uvcview.asm



1  1768	0000080B  8B C2			   mov eax,edx ; ac value
1  1769	0000080D  79 03			   jns acScanBits ; positive
1  1770	0000080F  F7 D8			   neg eax ; make positive
1  1771	00000811  4A			   dec edx ; proper data
1  1772	00000812			 label acScanBits near
1  1773					 ; bit scan left to right
1  1774	00000812  66| 0F BD D8		   bsr bx,ax ; bit index
1  1775	00000816  43			   inc ebx ; bit length
1  1776					 ; concatenate zero counter
1  1777	00000817  8D 04	8D 00000000	   lea eax,[ecx*4] ; count
1  1778	0000081E  81 E1	0000FFFF	   and ecx,0FFFFh ; reset
1  1779	00000824  0F A4	C3 04		   shld	ebx,eax,4 ; index
1  1780	00000828			 label acHuffman near
1  1781					 ; get huffman state
1  1782	00000828  8A C1			   mov al,cl ; string
1  1783					 ; obtain huffman size
1  1784	0000082A  8A 8C	1E 00040124r	   mov cl,[yas+esi+ebx*1]
1  1785	00000831  D3 E0			   shl eax,cl ;	make room
1  1786					 ; append huffman code
1  1787	00000833  66| 33 84 5E	      +	   xor ax,[yac+esi+ebx*2]
   1788		  000401D4r
1  1789	0000083B  02 CD			   add cl,ch ; bit length
1  1790					 ; try to emit next byte
1  1791	0000083D  80 F9	08		   cmp cl,8 ; bits per byte
1  1792	00000840  72 36			   jb acNotEmitCode ; too few
1  1793	00000842  80 E9	08		   sub cl,8 ; bits per byte
1  1794	00000845  D3 C8			   ror eax,cl ;	alignment
1  1795	00000847  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1796	0000084D  47			   inc edi ; next position
1  1797					 ; cater for zero stuffing
1  1798	0000084E  34 FF			   xor al,0FFh ; ones/zeros
1  1799	00000850  75 07			   jnz acEndZeroCode1 ;	no
1  1800	00000852  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1801	00000858  47			   inc edi ; next position
1  1802	00000859			 label acEndZeroCode1 near
1  1803					 ; try to emit next byte
1  1804	00000859  80 F9	08		   cmp cl,8 ; bits per byte
1  1805	0000085C  72 18			   jb acEndEmitCode ; too few
1  1806	0000085E  80 E9	08		   sub cl,8 ; bits per byte
1  1807	00000861  C1 C0	08		   rol eax,8 ; alignment
1  1808	00000864  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1809	0000086A  47			   inc edi ; next position
1  1810					 ; cater for zero stuffing
1  1811	0000086B  34 FF			   xor al,0FFh ; ones/zeros
1  1812	0000086D  75 07			   jnz acEndZeroCode2 ;	no
1  1813	0000086F  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1814	00000875  47			   inc edi ; next position
1  1815	00000876			 label acEndZeroCode2 near
1  1816					 ; cannot emit another byte
1  1817	00000876			 label acEndEmitCode near
1  1818					 ; realign on bit boundary
1  1819	00000876  D3 C0			   rol eax,cl ;	position
1  1820	00000878			 label acNotEmitCode near
1  1821					 ; update huffman state
1  1822	00000878  8A E9			   mov ch,cl ; length
1  1823	0000087A  8A C8			   mov cl,al ; string
1  1824					 ; handle ZRL hufman code
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 33
uvcview.asm



1  1825	0000087C  80 FB	0F		   cmp bl,0Fh ;	special
1  1826	0000087F  0F 84	FFFFFF74	   je VerifyCounter
1  1827					 ; append huffman data
1  1828	00000885  C1 EB	04		   shr ebx,04h ; present
1  1829	00000888  74 48			   jz EndEncode	; absent
1  1830	0000088A  8A CB			   mov cl,bl ; bit length
1  1831	0000088C  D3 CA			   ror edx,cl ;	alignment
1  1832	0000088E  0F A5	D0		   shld	eax,edx,cl ; append
1  1833	00000891  02 CD			   add cl,ch ; bit length
1  1834					 ; try to emit next byte
1  1835	00000893  80 F9	08		   cmp cl,8 ; bits per byte
1  1836	00000896  72 36			   jb acNotEmitData ; too few
1  1837	00000898  80 E9	08		   sub cl,8 ; bits per byte
1  1838	0000089B  D3 C8			   ror eax,cl ;	alignment
1  1839	0000089D  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1840	000008A3  47			   inc edi ; next position
1  1841					 ; cater for zero stuffing
1  1842	000008A4  34 FF			   xor al,0FFh ; ones/zeros
1  1843	000008A6  75 07			   jnz acEndZeroData1 ;	no
1  1844	000008A8  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1845	000008AE  47			   inc edi ; next position
1  1846	000008AF			 label acEndZeroData1 near
1  1847					 ; try to emit next byte
1  1848	000008AF  80 F9	08		   cmp cl,8 ; bits per byte
1  1849	000008B2  72 18			   jb acEndEmitData ; too few
1  1850	000008B4  80 E9	08		   sub cl,8 ; bits per byte
1  1851	000008B7  C1 C0	08		   rol eax,8 ; alignment
1  1852	000008BA  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1853	000008C0  47			   inc edi ; next position
1  1854					 ; cater for zero stuffing
1  1855	000008C1  34 FF			   xor al,0FFh ; ones/zeros
1  1856	000008C3  75 07			   jnz acEndZeroData2 ;	no
1  1857	000008C5  88 87	001C268Ar	   mov [outBuffer+edi],al
1  1858	000008CB  47			   inc edi ; next position
1  1859	000008CC			 label acEndZeroData2 near
1  1860					 ; cannot emit another byte
1  1861	000008CC			 label acEndEmitData near
1  1862					 ; realign on bit boundary
1  1863	000008CC  D3 C0			   rol eax,cl ;	position
1  1864	000008CE			 label acNotEmitData near
1  1865					 ; update huffman state
1  1866	000008CE  8A E9			   mov ch,cl ; length
1  1867	000008D0  8A C8			   mov cl,al ; string
1  1868	000008D2			 label EndEncode near
1  1869					 ; bump	to next	element
1  1870	000008D2  8D 6D	01		   lea ebp,[ebp+1] ; offset
1  1871	000008D5  F7 C5	0000003F	   test	ebp,03Fh ; more
1  1872	000008DB  0F 85	FFFFFED1	   jnz NextACelement
1  1873					 ; reset zero counter
1  1874	000008E1  81 E1	0000FFFF	   and ecx,0000FFFFh
1  1875					 ; start next luminance
1  1876	000008E7  81 FD	00000080	   cmp ebp,080h	; done
1  1877	000008ED  0F 82	FFFFFDDC	   jb NextDCelement
1  1878					 ; start next chrominance
1  1879	000008F3  BE 00000512		   mov esi,cqt-yqt ; offset
1  1880	000008F8  81 FD	00000100	   cmp ebp,100h	; done
1  1881	000008FE  0F 82	FFFFFDCB	   jb NextDCelement
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 34
uvcview.asm



1  1882					 ; store huffman state
1  1883	00000904  89 3D	00000404r	   mov [hcOffset],edi
1  1884	0000090A  89 0D	00000408r	   mov [hcStatus],ecx
1  1885	00000910  C3			   ret ; return
1  1886	00000911			 endp encoder
1  1887
1  1888	00000911			 dataseg
1  1889					 ; mcu 4:2:2 ordering
1  1890	00040A6D  00 01	02 03 20 21 22+	 yyo db	00,01,02,03,32,33,34,35
   1891		  23
1  1892	00040A75  04 05	06 07 24 25 26+	     db	04,05,06,07,36,37,38,39
   1893		  27
1  1894	00040A7D  08 09	0A 0B 28 29 2A+	     db	08,09,10,11,40,41,42,43
   1895		  2B
1  1896	00040A85  0C 0D	0E 0F 2C 2D 2E+	     db	12,13,14,15,44,45,46,47
   1897		  2F
1  1898	00040A8D  10 11	12 13 30 31 32+	     db	16,17,18,19,48,49,50,51
   1899		  33
1  1900	00040A95  14 15	16 17 34 35 36+	     db	20,21,22,23,52,53,54,55
   1901		  37
1  1902	00040A9D  18 19	1A 1B 38 39 3A+	     db	24,25,26,27,56,57,58,59
   1903		  3B
1  1904	00040AA5  1C 1D	1E 1F 3C 3D 3E+	     db	28,29,30,31,60,61,62,63
   1905		  3F
1  1906
1  1907					 ; precalculated constant
1  1908		  =02000000		 c128 =	33554432 ; 128*2E18
1  1909
1  1910					 ; precalculated ycc2rgb coefficients
1  1911		  =160663C7		 gcb = 0369517511 ; 0.34414*2E30
1  1912		  =2DB47842		 gcr = 0766801986 ; 0.71414*2E30
1  1913		  =716872B0		 mcb = 1902670512 ; 1.772*2E30
1  1914		  =59BA5E35		 mcr = 1505386037 ; 1.402*2E30
1  1915
1  1916	00040AAD			 codeseg
1  1917	00000911			 proc jpg2rgb near
1  1918	00000911  E8 00000143		   call	reader ; mjpg
1  1919					 ; clear old dc	values
1  1920	00000916  2B C0			   sub eax,eax ; zero
1  1921	00000918  A3 0000040Cr		   mov [dcValue+0],eax
1  1922	0000091D  A3 00000410r		   mov [dcValue+4],eax
1  1923	00000922  A3 00000414r		   mov [dcValue+8],eax
1  1924					 ; clear huffman state
1  1925	00000927  A3 00000404r		   mov [hcOffset],eax
1  1926	0000092C  A3 00000408r		   mov [hcStatus],eax
1  1927					 ; read	image to build minimum coded units
1  1928	00000931  BD 002EDF0Ar		   mov ebp,offset(rgbBuffer)+3*Ix*(Iy-1)
1  1929	00000936  56			   push	esi ; save
1  1930	00000937			 label ReadImage near
1  1931					 ; set horizontal units
1  1932	00000937  B1 28			   mov cl,Ix/16	; 4:2:2
1  1933	00000939			 label ReadNextUnit near
1  1934					 ; get minimum coded unit
1  1935	00000939  55 51			   push	ebp ecx	; save
1  1936	0000093B  E8 FFFFFAD4		   call	decoder	; huffman
1  1937	00000940  E8 FFFFF8C9		   call	aanidct	; inverse
1  1938	00000945  59 5D			   pop ecx ebp ; restore
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 35
uvcview.asm



1  1939					 ; scan	minimum	coded unit
1  1940	00000947  2B FF			   sub edi,edi ; mcu index
1  1941	00000949			 label UnitRowNext near
1  1942	00000949  B5 08			   mov ch,8 ; columns
1  1943	0000094B			 label ycc2rgb near
1  1944					 ; y2rgb midpoint shift
1  1945	0000094B  0F B6	97 00040A6Dr	   movzx edx,[yyo+edi]
1  1946	00000952  8B 1C	D5 00000000r	   mov ebx,[mcu+edx*8+0]
1  1947	00000959  8B 34	D5 00000004r	   mov esi,[mcu+edx*8+4]
1  1948	00000960  81 C3	02000000	   add ebx,c128	; 128*2E18
1  1949	00000966  81 C6	02000000	   add esi,c128	; 128*2E18
1  1950	0000096C  C1 FB	12		   sar ebx,18 ;	Y0*2E0
1  1951	0000096F  C1 FE	12		   sar esi,18 ;	Y1*2E0
1  1952					 ; ycb2b conversion
1  1953	00000972  8B 14	BD 00000200r	   mov edx,[mcu+512+edi*4]
1  1954	00000979  B8 716872B0		   mov eax,mcb ; mfb*2E30
1  1955	0000097E  F7 EA			   imul	edx ; mfb*Cb*2E16
1  1956	00000980  C1 FA	10		   sar edx,16 ;	mfb*Cb
1  1957					 ; calculate 1st B value
1  1958	00000983  8D 04	13		   lea eax,[ebx+edx] ; B0
1  1959	00000986  84 E4			   test	ah,ah ;	validate
1  1960	00000988  74 06			   jz StoreThisB0 ; correct
1  1961	0000098A  B0 00			   mov al,000h ; minimum
1  1962	0000098C  78 02			   js StoreThisB0 ; correct
1  1963	0000098E  B0 FF			   mov al,0FFh ; maximum
1  1964	00000990			 label StoreThisB0 near
1  1965	00000990  88 45	00		   mov [ebp+0],al ; B0
1  1966					 ; calculate 2nd B value
1  1967	00000993  8D 04	16		   lea eax,[esi+edx] ; B1
1  1968	00000996  84 E4			   test	ah,ah ;	validate
1  1969	00000998  74 06			   jz StoreThisB1 ; correct
1  1970	0000099A  B0 00			   mov al,000h ; minimum
1  1971	0000099C  78 02			   js StoreThisB1 ; correct
1  1972	0000099E  B0 FF			   mov al,0FFh ; maximum
1  1973	000009A0			 label StoreThisB1 near
1  1974	000009A0  88 45	03		   mov [ebp+3],al ; B1
1  1975					 ; ycr2r conversion
1  1976	000009A3  8B 14	BD 00000300r	   mov edx,[mcu+768+edi*4]
1  1977	000009AA  B8 59BA5E35		   mov eax,mcr ; mfr*2E30
1  1978	000009AF  F7 EA			   imul	edx ; mfr*Cr*2E16
1  1979	000009B1  C1 FA	10		   sar edx,16 ;	mfr*Cr
1  1980					 ; calculate 1st R value
1  1981	000009B4  8D 04	13		   lea eax,[ebx+edx] ; R0
1  1982	000009B7  84 E4			   test	ah,ah ;	validate
1  1983	000009B9  74 06			   jz StoreThisR0 ; correct
1  1984	000009BB  B0 00			   mov al,000h ; minimum
1  1985	000009BD  78 02			   js StoreThisR0 ; correct
1  1986	000009BF  B0 FF			   mov al,0FFh ; maximum
1  1987	000009C1			 label StoreThisR0 near
1  1988	000009C1  88 45	02		   mov [ebp+2],al ; R0
1  1989					 ; calculate 2nd R value
1  1990	000009C4  8D 04	16		   lea eax,[esi+edx] ; R1
1  1991	000009C7  84 E4			   test	ah,ah ;	validate
1  1992	000009C9  74 06			   jz StoreThisR1 ; correct
1  1993	000009CB  B0 00			   mov al,000h ; minimum
1  1994	000009CD  78 02			   js StoreThisR1 ; correct
1  1995	000009CF  B0 FF			   mov al,0FFh ; maximum
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 36
uvcview.asm



1  1996	000009D1			 label StoreThisR1 near
1  1997	000009D1  88 45	05		   mov [ebp+5],al ; R1
1  1998					 ; ycbcr2g conversion
1  1999	000009D4  8B 14	BD 00000200r	   mov edx,[mcu+512+edi*4]
1  2000	000009DB  B8 160663C7		   mov eax,gcb ; gfb*2E30
1  2001	000009E0  F7 EA			   imul	edx ; gfb*Cb*2E16
1  2002	000009E2  C1 FA	10		   sar edx,16 ;	gfb*Cb
1  2003	000009E5  2B DA			   sub ebx,edx ; Y0-gfb*Cb
1  2004	000009E7  2B F2			   sub esi,edx ; Y1-gfb*Cb
1  2005	000009E9  8B 14	BD 00000300r	   mov edx,[mcu+768+edi*4]
1  2006	000009F0  B8 2DB47842		   mov eax,gcr ; gfr*2E30
1  2007	000009F5  F7 EA			   imul	edx ; gfr*Cr*2E16
1  2008	000009F7  C1 FA	10		   sar edx,16 ;	gfr*Cr
1  2009	000009FA  2B F2			   sub esi,edx ; G1
1  2010	000009FC  2B DA			   sub ebx,edx ; G0
1  2011	000009FE  8B D6			   mov edx,esi ; G1
1  2012					 ; validate 1st	G value
1  2013	00000A00  84 FF			   test	bh,bh ;	validate
1  2014	00000A02  74 06			   jz StoreThisG0 ; correct
1  2015	00000A04  B3 00			   mov bl,000h ; minimum
1  2016	00000A06  78 02			   js StoreThisG0 ; correct
1  2017	00000A08  B3 FF			   mov bl,0FFh ; maximum
1  2018	00000A0A			 label StoreThisG0 near
1  2019	00000A0A  88 5D	01		   mov [ebp+1],bl ; G0
1  2020					 ; validate 2nd	G value
1  2021	00000A0D  84 F6			   test	dh,dh ;	validate
1  2022	00000A0F  74 06			   jz StoreThisG1 ; correct
1  2023	00000A11  B2 00			   mov dl,000h ; minimum
1  2024	00000A13  78 02			   js StoreThisG1 ; correct
1  2025	00000A15  B2 FF			   mov dl,0FFh ; maximum
1  2026	00000A17			 label StoreThisG1 near
1  2027	00000A17  88 55	04		   mov [ebp+4],dl ; G1
1  2028					 ; bump	to next	column
1  2029	00000A1A  8D 6D	06		   lea ebp,[ebp+6]
1  2030	00000A1D  8D 7F	01		   lea edi,[edi+1]
1  2031	00000A20  FE CD			   dec ch ; columns
1  2032	00000A22  0F 85	FFFFFF23	   jnz ycc2rgb ; more
1  2033					 ; bump	to next	row
1  2034	00000A28  8D AD	FFFFF850	   lea ebp,[ebp-16*3-1*3*Ix]
1  2035	00000A2E  83 FF	40		   cmp edi,64 ;	complete
1  2036	00000A31  0F 82	FFFFFF12	   jb UnitRowNext ; more
1  2037					 ; bump	pointer	horizontally
1  2038	00000A37  8D AD	00003C30	   lea ebp,[ebp+16*3+8*3*Ix]
1  2039	00000A3D  FE C9			   dec cl ; horizontal units
1  2040	00000A3F  0F 85	FFFFFEF4	   jnz ReadNextUnit ; more
1  2041					 ; bump	pointer	vertically
1  2042	00000A45  8D AD	FFFFBC80	   lea ebp,[ebp-(8+1)*3*Ix]
1  2043					 ; verify image	complete
1  2044	00000A4B  81 FD	0020D68Ar	   cmp ebp,offset(rgbBuffer)
1  2045	00000A51  0F 87	FFFFFEE0	   ja ReadImage	; more
1  2046	00000A57  5E			   pop esi ; restore
1  2047	00000A58  C3			   ret ; return
1  2048	00000A59			 endp jpg2rgb
1  2049
1  2050	00000A59			 dataseg
1  2051					 ; aanidct - dequantization table
1  2052	00040AAD  00400000 0058C543   +	 iqt dd	d00,d01,d02,d03,d04,d05,d06,d07
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 37
uvcview.asm



   2053		  00539EBA 004B418C   +
   2054		  00400000 003248D4   +
   2055		  0022A2F5 0011A856
1  2056	00040ACD  0058C543 007B20D8   +	     dd	d10,d11,d12,d13,d14,d15,d16,d17
   2057		  0073FBFC 00686214   +
   2058		  0058C543 0045BF1F   +
   2059		  00300AD3 00187DE3
1  2060	00040AED  00539EBA 0073FBFC   +	     dd	d20,d21,d22,d23,d24,d25,d26,d27
   2061		  006D413D 006253A6   +
   2062		  00539EBA 0041B328   +
   2063		  002D413D 0017121A
1  2064	00040B0D  004B418C 00686214   +	     dd	d30,d31,d32,d33,d34,d35,d36,d37
   2065		  006253A6 00587DE3   +
   2066		  004B418C 003B20D8   +
   2067		  0028BA70 0014C35A
1  2068	00040B2D  00400000 0058C543   +	     dd	d40,d41,d42,d43,d44,d45,d46,d47
   2069		  00539EBA 004B418C   +
   2070		  00400000 003248D4   +
   2071		  0022A2F5 0011A856
1  2072	00040B4D  003248D4 0045BF1F   +	     dd	d50,d51,d52,d53,d54,d55,d56,d57
   2073		  0041B328 003B20D8   +
   2074		  003248D4 0027821D   +
   2075		  001B36B9 000DDF9B
1  2076	00040B6D  0022A2F5 00300AD3   +	     dd	d60,d61,d62,d63,d64,d65,d66,d67
   2077		  002D413D 0028BA70   +
   2078		  0022A2F5 001B36B9   +
   2079		  0012BEC3 00098E63
1  2080	00040B8D  0011A856 00187DE3   +	     dd	d70,d71,d72,d73,d74,d75,d76,d77
   2081		  0017121A 0014C35A   +
   2082		  0011A856 000DDF9B   +
   2083		  00098E63 0004DF28
1  2084
1  2085	00040BAD			 codeseg
1  2086	00000A59			 proc reader near
1  2087					 ; process SOI marker
1  2088	00000A59  2B C9			   sub ecx,ecx ; zero
1  2089	00000A5B  89 0D	00040A69r	   mov [UseRestart],ecx
1  2090	00000A61  8D 76	02		   lea esi,[esi+2]
1  2091	00000A64			 label NextMarker near
1  2092					 ; address next	marker
1  2093	00000A64  8A 6E	02		   mov ch,[esi+2] ; >length
1  2094	00000A67  8A 4E	03		   mov cl,[esi+3] ; <length
1  2095	00000A6A  8D 74	0E 02		   lea esi,[esi+ecx+2]
1  2096					 ; avoid buffer	overflow
1  2097	00000A6E  3B F7			   cmp esi,edi ; boundary
1  2098	00000A70  72 08			   jb UseMarker	; accept
1  2099	00000A72  C6 05	00040A64r 00	   mov [GoodImage],0
1  2100	00000A79  C3			   ret ; return
1  2101	00000A7A			 label UseMarker near
1  2102					 ; process markers
1  2103	00000A7A  8B 06			   mov eax,[esi]
1  2104					 ; process DRI marker
1  2105	00000A7C  3D 0400DDFF		   cmp eax,0400DDFFh
1  2106	00000A81  74 10			   je Restart
1  2107					 ; process DQT marker
1  2108	00000A83  3D 4300DBFF		   cmp eax,4300DBFFh
1  2109	00000A88  74 1D			   je Factors
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 38
uvcview.asm



1  2110					 ; process SOS marker
1  2111	00000A8A  3D 0C00DAFF		   cmp eax,0C00DAFFh
1  2112	00000A8F  74 51			   je Huffman
1  2113					 ; skip	other markers
1  2114	00000A91  EB D1			   jmp NextMarker
1  2115	00000A93			 label Restart near
1  2116					 ; set interval	value
1  2117	00000A93  8A 6E	04		   mov ch,[esi+4] ; >value
1  2118	00000A96  8A 4E	05		   mov cl,[esi+5] ; <value
1  2119	00000A99  89 0D	00040A65r	   mov [CntRestart],ecx
1  2120	00000A9F  89 0D	00040A69r	   mov [UseRestart],ecx
1  2121	00000AA5  EB BD			   jmp NextMarker
1  2122	00000AA7			 label Factors near
1  2123					 ; update dequantization
1  2124	00000AA7  2B DB			   sub ebx,ebx ; zero
1  2125	00000AA9  2B C9			   sub ecx,ecx ; zero
1  2126	00000AAB  2B D2			   sub edx,edx ; zero
1  2127	00000AAD  B1 40			   mov cl,64 ; factors
1  2128					 ; update luminance
1  2129	00000AAF  BD 00040334r		   mov ebp,offset(yqi)
1  2130	00000AB4  80 7E	04 00		   cmp [byte(esi+4)],0
1  2131	00000AB8  74 0D			   je SetTable ; ok
1  2132					 ; update chrominance
1  2133	00000ABA  BD 00040846r		   mov ebp,offset(cqi)
1  2134	00000ABF  80 7E	04 01		   cmp [byte(esi+4)],1
1  2135	00000AC3  74 02			   je SetTable ; ok
1  2136	00000AC5  EB 9D			   jmp NextMarker
1  2137	00000AC7			 label SetTable	near
1  2138	00000AC7  8A 99	00040A23r	   mov bl,[zzo+ecx-1]
1  2139	00000ACD  8A 54	0E 04		   mov dl,[esi+ecx+4]
1  2140					 ; obtain scaling factor
1  2141	00000AD1  8B 04	9D 00040AADr	   mov eax,[iqt+ebx*4]
1  2142	00000AD8  F7 E2			   mul edx ; compression
1  2143					 ; set dequantize factor
1  2144	00000ADA  89 44	9D 00		   mov [ebp+ebx*4],eax
1  2145	00000ADE  E2 E7			   loop	SetTable
1  2146	00000AE0  EB 82			   jmp NextMarker
1  2147	00000AE2			 label Huffman near
1  2148					 ; copy	huffman	codes
1  2149	00000AE2  8D 76	0E		   lea esi,[esi+14]
1  2150	00000AE5  8B CF			   mov ecx,edi ; end
1  2151	00000AE7  2B CE			   sub ecx,esi ; size
1  2152	00000AE9  BF 001C268Ar		   mov edi,offset(outBuffer)
1  2153	00000AEE  F3> A4		   rep movsb ; copy
1  2154	00000AF0  C3			   ret ; return
1  2155	00000AF1			 endp reader
1  2156
1  2157					 ; precalculated rgb2ycc coefficients
1  2158		  =48461F81		 cbm = 1212555137 ; 0.564639986*2E31
1  2159		  =5B49532E		 crm = 1531532078 ; 0.713175199*2E31
1  2160		  =0EA747D8		 ybc = 0245843928 ; 0.11448*2E31
1  2161		  =4B160957		 ygc = 1259735383 ; 0.58661*2E31
1  2162		  =2642AED1		 yrc = 0641904337 ; 0.29891*2E31
1  2163
1  2164	00000AF1			 codeseg
1  2165	00000AF1			 proc rgb2jpg near
1  2166					 ; clear old dc	values
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 39
uvcview.asm



1  2167	00000AF1  2B C0			   sub eax,eax ; zero
1  2168	00000AF3  A3 0000040Cr		   mov [dcValue+0],eax
1  2169	00000AF8  A3 00000410r		   mov [dcValue+4],eax
1  2170	00000AFD  A3 00000414r		   mov [dcValue+8],eax
1  2171					 ; clear huffman state
1  2172	00000B02  A3 00000404r		   mov [hcOffset],eax
1  2173	00000B07  A3 00000408r		   mov [hcStatus],eax
1  2174					 ; scan	image to build minimum coded units
1  2175	00000B0C  BD 002EDF0Ar		   mov ebp,offset(rgbBuffer)+3*Ix*(Iy-1)
1  2176	00000B11  56			   push	esi ; save
1  2177	00000B12			 label ScanImage near
1  2178					 ; set horizontal units
1  2179	00000B12  B1 28			   mov cl,Ix/16	; 4:2:2
1  2180	00000B14			 label BuildNextUnit near
1  2181					 ; build minimum coded unit
1  2182	00000B14  2B FF			   sub edi,edi ; mcu index
1  2183	00000B16			 label NextUnitRow near
1  2184	00000B16  B5 08			   mov ch,8 ; columns
1  2185	00000B18			 label rgb2ycc near
1  2186					 ; rgb2y0 conversion
1  2187	00000B18  2B D2			   sub edx,edx ; clear
1  2188	00000B1A  8A 55	00		   mov dl,[ebp+0] ; B0
1  2189	00000B1D  B8 0EA747D8		   mov eax,ybc ; ybf*2E31
1  2190	00000B22  C1 E2	12		   shl edx,18 ;	B0*2E18
1  2191	00000B25  F7 E2			   mul edx ; ybf*B0*2E18
1  2192	00000B27  8B DA			   mov ebx,edx ; apply
1  2193	00000B29  2B D2			   sub edx,edx ; clear
1  2194	00000B2B  8A 55	01		   mov dl,[ebp+1] ; G0
1  2195	00000B2E  B8 4B160957		   mov eax,ygc ; ygf*2E31
1  2196	00000B33  C1 E2	12		   shl edx,18 ;	G0*2E18
1  2197	00000B36  F7 E2			   mul edx ; ygf*G0*2E18
1  2198	00000B38  03 DA			   add ebx,edx ; apply
1  2199	00000B3A  2B D2			   sub edx,edx ; clear
1  2200	00000B3C  8A 55	02		   mov dl,[ebp+2] ; R0
1  2201	00000B3F  B8 2642AED1		   mov eax,yrc ; yrf*2E31
1  2202	00000B44  C1 E2	12		   shl edx,18 ;	R0*2E18
1  2203	00000B47  F7 E2			   mul edx ; yrf*R0*2E18
1  2204	00000B49  03 DA			   add ebx,edx ; apply
1  2205					 ; rgb2y0 midpoint shift
1  2206	00000B4B  8D 83	FF000000	   lea eax,[ebx-c128/2]
1  2207	00000B51  0F B6	97 00040A6Dr	   movzx edx,[yyo+edi]
1  2208	00000B58  89 04	D5 00000000r	   mov [mcu+edx*8+0],eax
1  2209					 ; rgb2y1 conversion
1  2210	00000B5F  2B D2			   sub edx,edx ; clear
1  2211	00000B61  8A 55	03		   mov dl,[ebp+3] ; B1
1  2212	00000B64  B8 0EA747D8		   mov eax,ybc ; ybf*2E31
1  2213	00000B69  C1 E2	12		   shl edx,18 ;	B1*2E18
1  2214	00000B6C  F7 E2			   mul edx ; ybf*B1*2E18
1  2215	00000B6E  8B F2			   mov esi,edx ; apply
1  2216	00000B70  2B D2			   sub edx,edx ; clear
1  2217	00000B72  8A 55	04		   mov dl,[ebp+4] ; G1
1  2218	00000B75  B8 4B160957		   mov eax,ygc ; ygf*2E31
1  2219	00000B7A  C1 E2	12		   shl edx,18 ;	G1*2E18
1  2220	00000B7D  F7 E2			   mul edx ; ygf*G1*2E18
1  2221	00000B7F  03 F2			   add esi,edx ; apply
1  2222	00000B81  2B D2			   sub edx,edx ; clear
1  2223	00000B83  8A 55	05		   mov dl,[ebp+5] ; R1
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 40
uvcview.asm



1  2224	00000B86  B8 2642AED1		   mov eax,yrc ; yrf*2E31
1  2225	00000B8B  C1 E2	12		   shl edx,18 ;	R1*2E18
1  2226	00000B8E  F7 E2			   mul edx ; yrf*R1*2E18
1  2227	00000B90  03 F2			   add esi,edx ; apply
1  2228					 ; rgb2y1 midpoint shift
1  2229	00000B92  8D 86	FF000000	   lea eax,[esi-c128/2]
1  2230	00000B98  0F B6	97 00040A6Dr	   movzx edx,[yyo+edi]
1  2231	00000B9F  89 04	D5 00000004r	   mov [mcu+edx*8+4],eax
1  2232					 ; total Y0+Y1 values
1  2233	00000BA6  03 DE			   add ebx,esi ; Y*2E19
1  2234					 ; total B0+B1 values
1  2235	00000BA8  2B C0			   sub eax,eax ; clear
1  2236	00000BAA  2B D2			   sub edx,edx ; clear
1  2237	00000BAC  8A 45	00		   mov al,[ebp+0] ; B0
1  2238	00000BAF  8A 55	03		   mov dl,[ebp+3] ; B1
1  2239	00000BB2  03 D0			   add edx,eax ; B*2E1
1  2240	00000BB4  C1 E2	11		   shl edx,17 ;	B*2E18
1  2241					 ; yr2cb conversion
1  2242	00000BB7  B8 48461F81		   mov eax,cbm ; cbf*2E31
1  2243	00000BBC  2B D3			   sub edx,ebx ; (B-Y)*2E19
1  2244	00000BBE  F7 EA			   imul	edx ; cbf*(B-Y)*2E18
1  2245	00000BC0  89 14	BD 00000200r	   mov [mcu+512+edi*4],edx
1  2246					 ; total R0+R1 values
1  2247	00000BC7  2B C0			   sub eax,eax ; clear
1  2248	00000BC9  2B D2			   sub edx,edx ; clear
1  2249	00000BCB  8A 45	02		   mov al,[ebp+2] ; R0
1  2250	00000BCE  8A 55	05		   mov dl,[ebp+5] ; R1
1  2251	00000BD1  03 D0			   add edx,eax ; R*2E1
1  2252	00000BD3  C1 E2	11		   shl edx,17 ;	R*2E18
1  2253					 ; yb2cr conversion
1  2254	00000BD6  B8 5B49532E		   mov eax,crm ; crf*2E31
1  2255	00000BDB  2B D3			   sub edx,ebx ; (R-Y)*2E19
1  2256	00000BDD  F7 EA			   imul	edx ; crf*(R-Y)*2E18
1  2257	00000BDF  89 14	BD 00000300r	   mov [mcu+768+edi*4],edx
1  2258					 ; bump	to next	column
1  2259	00000BE6  8D 6D	06		   lea ebp,[ebp+6]
1  2260	00000BE9  8D 7F	01		   lea edi,[edi+1]
1  2261	00000BEC  FE CD			   dec ch ; columns
1  2262	00000BEE  0F 85	FFFFFF24	   jnz rgb2ycc ; more
1  2263					 ; bump	to next	row
1  2264	00000BF4  8D AD	FFFFF850	   lea ebp,[ebp-16*3-1*3*Ix]
1  2265	00000BFA  83 FF	40		   cmp edi,64 ;	complete
1  2266	00000BFD  0F 82	FFFFFF13	   jb NextUnitRow ; more
1  2267					 ; put minimum coded unit
1  2268	00000C03  55 51			   push	ebp ecx	; save
1  2269	00000C05  E8 FFFFF3F6		   call	aanfdct	; forward
1  2270	00000C0A  E8 FFFFFAB0		   call	encoder	; huffman
1  2271	00000C0F  59 5D			   pop ecx ebp ; restore
1  2272					 ; bump	pointer	horizontally
1  2273	00000C11  8D AD	00003C30	   lea ebp,[ebp+16*3+8*3*Ix]
1  2274	00000C17  FE C9			   dec cl ; horizontal units
1  2275	00000C19  0F 85	FFFFFEF5	   jnz BuildNextUnit ; more
1  2276					 ; bump	pointer	vertically
1  2277	00000C1F  8D AD	FFFFBC80	   lea ebp,[ebp-(8+1)*3*Ix]
1  2278					 ; verify image	complete
1  2279	00000C25  81 FD	0020D68Ar	   cmp ebp,offset(rgbBuffer)
1  2280	00000C2B  0F 87	FFFFFEE1	   ja ScanImage	; more
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 41
uvcview.asm



1  2281	00000C31  5E			   pop esi ; restore
1  2282	00000C32  E8 00000001		   call	writer
1  2283	00000C37  C3			   ret ; return
1  2284	00000C38			 endp rgb2jpg
1  2285
1  2286	00000C38			 dataseg
1  2287					 ; start of image
1  2288	00040BAD  FF D8			 HdrSOI	db 0FFh,0D8h
1  2289					 ; application segment
1  2290	00040BAF  FF E0	00 10 4A 46 49+	 HdrAPP	db 0FFh,0E0h,0,16,'J','F','I','F',0,1,1,0,0,1,0,1,0,0
   2291		  46 00	01 01 00 00 01+
   2292		  00 01	00 00
1  2293					 ; comment
1  2294	00040BC1  FF FE	00 0F 57 69 6D+	 HdrCOM	db 0FFh,0FEh,0,15,"Wim's UvcView"
   2295		  27 73	20 55 76 63 56+
   2296		  69 65	77
1  2297					 ; define quantization tables -	zigzag order
1  2298	00040BD2  FF DB	00 43 00	 HdrDQTy db 0FFh,0DBh,0,67,00h ; luminance
1  2299	00040BD7  08 0A	0A 0A 0E 0A 0A+		 db y00,y01,y10,y20,y11,y02,y03,y12
   2300		  0E
1  2301	00040BDF  0E 0A	0B 0E 0E 0E 0B+		 db y21,y30,y40,y31,y22,y13,y04,y05
   2302		  0D
1  2303	00040BE7  0E 0F	0F 0E 0D 0F 0E+		 db y14,y23,y32,y41,y50,y60,y51,y42
   2304		  11
1  2305	00040BEF  10 11	0E 0F 12 0E 13+		 db y33,y24,y15,y06,y07,y16,y25,y34
   2306		  12
1  2307	00040BF7  12 13	0E 12 0F 16 15+		 db y43,y52,y61,y70,y71,y62,y53,y44
   2308		  14
1  2309	00040BFF  15 16	0F 1A 18 16 16+		 db y35,y26,y17,y27,y36,y45,y54,y63
   2310		  18
1  2311	00040C07  1A 1C	1A 1A 1A 1C 1E+		 db y72,y73,y64,y55,y46,y37,y47,y56
   2312		  1D
1  2313	00040C0F  1D 1E	22 21 22 26 26+		 db y65,y74,y75,y66,y57,y67,y76,y77
   2314		  2A
1  2315	00040C17  FF DB	00 43 01	 HdrDQTc db 0FFh,0DBh,0,67,01h ; chrominance
1  2316	00040C1C  0C 14	14 1E 20 1E 28+		 db c00,c01,c10,c20,c11,c02,c03,c12
   2317		  2A
1  2318	00040C24  2A 28	54 36 38 36 54+		 db c21,c30,c40,c31,c22,c13,c04,c05
   2319		  54
1  2320	00040C2C  54 42	42 54 54 54 54+		 db c14,c23,c32,c41,c50,c60,c51,c42
   2321		  54
1  2322	00040C34  54 54	54 54 54 54 54+		 db c33,c24,c15,c06,c07,c16,c25,c34
   2323		  54
1  2324	00040C3C  54 54	54 54 54 54 54+		 db c43,c52,c61,c70,c71,c62,c53,c44
   2325		  54
1  2326	00040C44  54 54	54 54 54 54 54+		 db c35,c26,c17,c27,c36,c45,c54,c63
   2327		  54
1  2328	00040C4C  54 54	54 54 54 54 54+		 db c72,c73,c64,c55,c46,c37,c47,c56
   2329		  54
1  2330	00040C54  54 54	54 54 54 54 54+		 db c65,c74,c75,c66,c57,c67,c76,c77
   2331		  54
1  2332					 ; start of frame - baseline dct - 3 components	- 4:2:2	chroma subsampling
1  2333	00040C5C  FF C0	00 11 08 01 E0+	 HdrSOF	db 0FFh,0C0h,0,17,8,high(Iy),low(Iy),high(Ix),low(Ix),3,1,21h,0,2,11h,1,3,11h,1
   2334		  02 80	03 01 21 00 02+
   2335		  11 01	03 11 01
1  2336					 ; define huffman tables
1  2337	00040C6F  FF C4	00 1F 00	 HdrDHTyd db 0FFh,0C4h,0,031,00h ; luminance dc	table
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 42
uvcview.asm



1  2338	00040C74  00 01	05 01 01 01 01+		db 00h,01h,05h,01h,01h,01h,01h,01h,01h,00h,00h,00h,00h,00h,00h,00h
   2339		  01 01	00 00 00 00 00+
   2340		  00 00
1  2341	00040C84  00 01	02 03 04 05 06+		db 00h,01h,02h,03h,04h,05h,06h,07h,08h,09h,0Ah,0Bh
   2342		  07 08	09 0A 0B
1  2343	00040C90  FF C4	00 B5 10	 HdrDHTya db 0FFh,0C4h,0,181,10h ; luminance ac	table
1  2344	00040C95  00 02	01 03 03 02 04+		db 00h,02h,01h,03h,03h,02h,04h,03h,05h,05h,04h,04h,00h,00h,01h,7Dh
   2345		  03 05	05 04 04 00 00+
   2346		  01 7D
1  2347	00040CA5  01 02	03 00 04 11 05+		db 001h,002h,003h,000h,004h,011h,005h,012h,021h,031h,041h,006h,013h,051h,061h,007h
   2348		  12 21	31 41 06 13 51+
   2349		  61 07
1  2350	00040CB5  22 71	14 32 81 91 A1+		db 022h,071h,014h,032h,081h,091h,0A1h,008h,023h,042h,0B1h,0C1h,015h,052h,0D1h,0F0h
   2351		  08 23	42 B1 C1 15 52+
   2352		  D1 F0
1  2353	00040CC5  24 33	62 72 82 09 0A+		db 024h,033h,062h,072h,082h,009h,00Ah,016h,017h,018h,019h,01Ah,025h,026h,027h,028h
   2354		  16 17	18 19 1A 25 26+
   2355		  27 28
1  2356	00040CD5  29 2A	34 35 36 37 38+		db 029h,02Ah,034h,035h,036h,037h,038h,039h,03Ah,043h,044h,045h,046h,047h,048h,049h
   2357		  39 3A	43 44 45 46 47+
   2358		  48 49
1  2359	00040CE5  4A 53	54 55 56 57 58+		db 04Ah,053h,054h,055h,056h,057h,058h,059h,05Ah,063h,064h,065h,066h,067h,068h,069h
   2360		  59 5A	63 64 65 66 67+
   2361		  68 69
1  2362	00040CF5  6A 73	74 75 76 77 78+		db 06Ah,073h,074h,075h,076h,077h,078h,079h,07Ah,083h,084h,085h,086h,087h,088h,089h
   2363		  79 7A	83 84 85 86 87+
   2364		  88 89
1  2365	00040D05  8A 92	93 94 95 96 97+		db 08Ah,092h,093h,094h,095h,096h,097h,098h,099h,09Ah,0A2h,0A3h,0A4h,0A5h,0A6h,0A7h
   2366		  98 99	9A A2 A3 A4 A5+
   2367		  A6 A7
1  2368	00040D15  A8 A9	AA B2 B3 B4 B5+		db 0A8h,0A9h,0AAh,0B2h,0B3h,0B4h,0B5h,0B6h,0B7h,0B8h,0B9h,0BAh,0C2h,0C3h,0C4h,0C5h
   2369		  B6 B7	B8 B9 BA C2 C3+
   2370		  C4 C5
1  2371	00040D25  C6 C7	C8 C9 CA D2 D3+		db 0C6h,0C7h,0C8h,0C9h,0CAh,0D2h,0D3h,0D4h,0D5h,0D6h,0D7h,0D8h,0D9h,0DAh,0E1h,0E2h
   2372		  D4 D5	D6 D7 D8 D9 DA+
   2373		  E1 E2
1  2374	00040D35  E3 E4	E5 E6 E7 E8 E9+		db 0E3h,0E4h,0E5h,0E6h,0E7h,0E8h,0E9h,0EAh,0F1h,0F2h,0F3h,0F4h,0F5h,0F6h,0F7h,0F8h
   2375		  EA F1	F2 F3 F4 F5 F6+
   2376		  F7 F8
1  2377	00040D45  F9 FA				db 0F9h,0FAh
1  2378	00040D47  FF C4	00 1F 01	 HdrDHTcd db 0FFh,0C4h,0,031,01h ; chrominance dc table
1  2379	00040D4C  00 03	01 01 01 01 01+		db 00h,03h,01h,01h,01h,01h,01h,01h,01h,01h,01h,00h,00h,00h,00h,00h
   2380		  01 01	01 01 00 00 00+
   2381		  00 00
1  2382	00040D5C  00 01	02 03 04 05 06+		db 00h,01h,02h,03h,04h,05h,06h,07h,08h,09h,0Ah,0Bh
   2383		  07 08	09 0A 0B
1  2384	00040D68  FF C4	00 B5 11	 HdrDHTca db 0FFh,0C4h,0,181,11h ; chrominance ac table
1  2385	00040D6D  00 02	01 02 04 04 03+		db 00h,02h,01h,02h,04h,04h,03h,04h,07h,05h,04h,04h,00h,01h,02h,77h
   2386		  04 07	05 04 04 00 01+
   2387		  02 77
1  2388	00040D7D  00 01	02 03 11 04 05+		db 000h,001h,002h,003h,011h,004h,005h,021h,031h,006h,012h,041h,051h,007h,061h,071h
   2389		  21 31	06 12 41 51 07+
   2390		  61 71
1  2391	00040D8D  13 22	32 81 08 14 42+		db 013h,022h,032h,081h,008h,014h,042h,091h,0A1h,0B1h,0C1h,009h,023h,033h,052h,0F0h
   2392		  91 A1	B1 C1 09 23 33+
   2393		  52 F0
1  2394	00040D9D  15 62	72 D1 0A 16 24+		db 015h,062h,072h,0D1h,00Ah,016h,024h,034h,0E1h,025h,0F1h,017h,018h,019h,01Ah,026h
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 43
uvcview.asm



   2395		  34 E1	25 F1 17 18 19+
   2396		  1A 26
1  2397	00040DAD  27 28	29 2A 35 36 37+		db 027h,028h,029h,02Ah,035h,036h,037h,038h,039h,03Ah,043h,044h,045h,046h,047h,048h
   2398		  38 39	3A 43 44 45 46+
   2399		  47 48
1  2400	00040DBD  49 4A	53 54 55 56 57+		db 049h,04Ah,053h,054h,055h,056h,057h,058h,059h,05Ah,063h,064h,065h,066h,067h,068h
   2401		  58 59	5A 63 64 65 66+
   2402		  67 68
1  2403	00040DCD  69 6A	73 74 75 76 77+		db 069h,06Ah,073h,074h,075h,076h,077h,078h,079h,07Ah,082h,083h,084h,085h,086h,087h
   2404		  78 79	7A 82 83 84 85+
   2405		  86 87
1  2406	00040DDD  88 89	8A 92 93 94 95+		db 088h,089h,08Ah,092h,093h,094h,095h,096h,097h,098h,099h,09Ah,0A2h,0A3h,0A4h,0A5h
   2407		  96 97	98 99 9A A2 A3+
   2408		  A4 A5
1  2409	00040DED  A6 A7	A8 A9 AA B2 B3+		db 0A6h,0A7h,0A8h,0A9h,0AAh,0B2h,0B3h,0B4h,0B5h,0B6h,0B7h,0B8h,0B9h,0BAh,0C2h,0C3h
   2410		  B4 B5	B6 B7 B8 B9 BA+
   2411		  C2 C3
1  2412	00040DFD  C4 C5	C6 C7 C8 C9 CA+		db 0C4h,0C5h,0C6h,0C7h,0C8h,0C9h,0CAh,0D2h,0D3h,0D4h,0D5h,0D6h,0D7h,0D8h,0D9h,0DAh
   2413		  D2 D3	D4 D5 D6 D7 D8+
   2414		  D9 DA
1  2415	00040E0D  E2 E3	E4 E5 E6 E7 E8+		db 0E2h,0E3h,0E4h,0E5h,0E6h,0E7h,0E8h,0E9h,0EAh,0F2h,0F3h,0F4h,0F5h,0F6h,0F7h,0F8h
   2416		  E9 EA	F2 F3 F4 F5 F6+
   2417		  F7 F8
1  2418	00040E1D  F9 FA				db 0F9h,0FAh
1  2419					 ; start of scan - 3 components
1  2420	00040E1F  FF DA	00 0C 03 01 00+	 HdrSOS	db 0FFh,0DAh,0,12,3,1,00h,2,11h,3,11h,0,63,0
   2421		  02 11	03 11 00 3F 00
1  2422					 ; end of image
1  2423	00040E2D  FF D9			 HdrEOI	db 0FFh,0D9h
1  2424
1  2425	00040E2F			 dataseg
1  2426	00040E2F  75 76	63 76 69 65 77+	 ssOutput db 'uvcview.jpg',0
   2427		  2E 6A	70 67 00
1  2428
1  2429	00040E3B			 codeseg
1  2430	00000C38			 proc writer near
1  2431					 ; open	jpg output file
1  2432					   call	DosOpen	c,offset(ssOutput),offset(fhOutput),offset(ActionTaken),0,0,012h,0191h,0
2  2433	00000C38  6A 00				 PUSH	 0
2  2434	00000C3A  68 00000191			 PUSH	 0191H
2  2435	00000C3F  6A 12				 PUSH	 012H
2  2436	00000C41  6A 00				 PUSH	 0
2  2437	00000C43  6A 00				 PUSH	 0
2  2438	00000C45  68 0000065Er			 PUSH	 OFFSET(ACTIONTAKEN)
2  2439	00000C4A  68 002EE6A2r			 PUSH	 OFFSET(FHOUTPUT)
2  2440	00000C4F  68 00040E2Fr			 PUSH	 OFFSET(SSOUTPUT)
2  2441	00000C54  E8 00000000e			 CALL	 DOSOPEN
2  2442	00000C59  83 C4	20			 ADD	 ESP,00020h
1  2443	00000C5C  85 C0			   test	eax,eax	; check	for errors
1  2444	00000C5E  0F 85	0000008B	   jnz NotWriter ; failure
1  2445					 ; write headers to jpg	output file
1  2446					   call	DosWrite c,[fhOutput],offset(HdrSOI),HdrEOI-HdrSOI,offset(BytesDone)
2  2447	00000C64  68 002EE69Er			 PUSH	 OFFSET(BYTESDONE)
2  2448	00000C69  68 00000280			 PUSH	 HDREOI-HDRSOI
2  2449	00000C6E  68 00040BADr			 PUSH	 OFFSET(HDRSOI)
2  2450	00000C73  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
2  2451	00000C79  E8 00000000e			 CALL	 DOSWRITE
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 44
uvcview.asm



2  2452	00000C7E  83 C4	10			 ADD	 ESP,00010h
1  2453	00000C81  85 C0			   test	eax,eax	; check	for errors
1  2454	00000C83  75 5C			   jnz EndWriter ; failure
1  2455					 ; obtain huffman state
1  2456	00000C85  8B 0D	00000408r	   mov ecx,[hcStatus]
1  2457	00000C8B  8B 3D	00000404r	   mov edi,[hcOffset]
1  2458					 ; emit	remaining bits
1  2459	00000C91  84 ED			   test	ch,ch ;	incomplete
1  2460	00000C93  74 1A			   jz AppendTrailer ; no
1  2461	00000C95  B0 FF			   mov al,0FFh ; filler
1  2462	00000C97  8A E1			   mov ah,cl ; string
1  2463	00000C99  8A CD			   mov cl,ch ; length
1  2464	00000C9B  D3 E8			   shr eax,cl ;	alignment
1  2465	00000C9D  88 87	001C268Ar	   mov [outBuffer+edi],al
1  2466	00000CA3  47			   inc edi ; next position
1  2467					 ; cater for zero stuffing
1  2468	00000CA4  34 FF			   xor al,0FFh ; ones/zeros
1  2469	00000CA6  75 07			   jnz AppendTrailer ; no
1  2470	00000CA8  88 87	001C268Ar	   mov [outBuffer+edi],al
1  2471	00000CAE  47			   inc edi ; next position
1  2472	00000CAF			 label AppendTrailer near
1  2473					 ; append end of image header
1  2474	00000CAF  66| A1 00040E2Dr	   mov ax,[word(HdrEOI)]
1  2475	00000CB5  88 87	001C268Ar	   mov [outBuffer+edi],al
1  2476	00000CBB  47			   inc edi ; next position
1  2477	00000CBC  88 A7	001C268Ar	   mov [outBuffer+edi],ah
1  2478	00000CC2  47			   inc edi ; next position
1  2479					 ; address huffman buffer
1  2480	00000CC3  BE 001C268Ar		   mov esi,offset(outBuffer)
1  2481					 ; write huffman to jpg	output file
1  2482					   call	DosWrite c,[fhOutput],esi,edi,offset(BytesDone)
2  2483	00000CC8  68 002EE69Er			 PUSH	 OFFSET(BYTESDONE)
2  2484	00000CCD  57				 PUSH	 EDI
2  2485	00000CCE  56				 PUSH	 ESI
2  2486	00000CCF  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
2  2487	00000CD5  E8 00000000e			 CALL	 DOSWRITE
2  2488	00000CDA  83 C4	10			 ADD	 ESP,00010h
1  2489	00000CDD  85 C0			   test	eax,eax	; check	for errors
1  2490	00000CDF  75 00			   jnz EndWriter ; failure
1  2491	00000CE1			 label EndWriter near
1  2492					 ; close jpg output file
1  2493					   call	DosClose c,[fhOutput]
2  2494	00000CE1  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
2  2495	00000CE7  E8 00000000e			 CALL	 DOSCLOSE
2  2496	00000CEC  83 C4	04			 ADD	 ESP,00004h
1  2497	00000CEF			 label NotWriter near
1  2498	00000CEF  C3			   ret ; return
1  2499	00000CF0			 endp writer
1  2500
   2501
   2502	00000CF0			 dataseg
   2503	00040E3B  00000D37		 flCreateFlags dd 00000D37h
   2504	00040E3F  55 56	43 56 49 45 57+	 szClientClass db 'UVCVIEW - Client Window',0
   2505		  20 2D	20 43 6C 69 65+
   2506		  6E 74	20 57 69 6E 64+
   2507		  6F 77	00
   2508
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 45
uvcview.asm



   2509	00040E57			 udataseg
   2510	00000418  FF*(??)		 szMessageText db 255 dup(?)
   2511	00000517  FF*(??)		 szWindowTitle db 255 dup(?)
   2512
   2513	00000616			 udataseg
   2514	00000616  ????????		 hab dd	?
   2515	0000061A  ????????		 hmq dd	?
   2516	0000061E  ????????		 hwndClient dd ?
   2517	00000622  ????????		 hwndFrame  dd ?
   2518	00000626  08*(????????)		 qmsg dd 8 dup(?)
   2519
   2520	00000646			 udataseg
   2521	00000646  ????????		 xWindowSize dd	?
   2522	0000064A  ????????		 yWindowSize dd	?
   2523
   2524	0000064E			 udataseg
   2525	0000064E  ????????		 ObtainImage dd	?
   2526	00000652  ????????		 ObtainPosts dd	?
   2527	00000656  ????????		 SupplyImage dd	?
   2528	0000065A  ????????		 SupplyPosts dd	?
   2529
   2530	0000065E			 dataseg
   2531	00040E57  00000000		 IsoEvent dd 0 ; semphore handle
   2532
   2533	00040E5B			 udataseg
   2534	0000065E  ????????		 ActionTaken dd	?
   2535	00000662  ????????		 fhDevice dd ?
   2536
   2537	00000666			 udataseg
   2538	00000666  ????????		 tidObtain dd ?
   2539	0000066A  ????????		 tidSupply dd ?
   2540
   2541	0000066E			 codeseg
   2542	00000CF0			 proc MainRoutine c near
   2543					 arg @@Mod,@@Nul,@@Env,@@Arg
   2544					 ; determine begin of arguments
1  2545	00000CF0  C8 0000 00			 ENTERD	 00000h,0
1  2546	00000CF4  FC			   cld ; operate foreward scan
   2547	00000CF5  B9 00000200		   mov ecx,512 ; max scan length
   2548	00000CFA  8B 7D	14		   mov edi,[@@Arg] ; start address
   2549	00000CFD  F2> AE		   repne scasb ; find terminator
   2550					 ; process passed arguments
   2551	00000CFF  E8 00000DA1		   call	ProcessArguments
   2552					 ; obtain anchor block handle
   2553					   call	WinInitialize c,0
1  2554	00000D04  6A 00				 PUSH	 0
1  2555	00000D06  E8 00000000e			 CALL	 WININITIALIZE
1  2556	00000D0B  83 C4	04			 ADD	 ESP,00004h
   2557	00000D0E  85 C0			   test	eax,eax	; success
   2558	00000D10  0F 84	00000330	   jz EndProcess ; failure
   2559	00000D16  A3 00000616r		   mov [hab],eax ; save
   2560					 ; obtain program title
   2561					   call	WinLoadString c,[hab],0,00h,255,offset(szWindowTitle)
1  2562	00000D1B  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  2563	00000D20  68 000000FF			 PUSH	 255
1  2564	00000D25  6A 00				 PUSH	 00H
1  2565	00000D27  6A 00				 PUSH	 0
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 46
uvcview.asm



1  2566	00000D29  FF 35	00000616r		 PUSH	 [HAB]
1  2567	00000D2F  E8 00000000e			 CALL	 WINLOADSTRING
1  2568	00000D34  83 C4	14			 ADD	 ESP,00014h
   2569	00000D37  85 C0			   test	eax,eax	; success
   2570	00000D39  0F 84	000002F9	   jz EndMainMsgQueue ;	no
   2571					 ; obtain message queue	handle
   2572					   call	WinCreateMsgQueue c,[hab],0
1  2573	00000D3F  6A 00				 PUSH	 0
1  2574	00000D41  FF 35	00000616r		 PUSH	 [HAB]
1  2575	00000D47  E8 00000000e			 CALL	 WINCREATEMSGQUEUE
1  2576	00000D4C  83 C4	08			 ADD	 ESP,00008h
   2577	00000D4F  85 C0			   test	eax,eax	; success
   2578	00000D51  0F 84	000002E1	   jz EndMainMsgQueue ;	no
   2579	00000D57  A3 0000061Ar		   mov [hmq],eax ; save
   2580					 ; access attached webcam
   2581	00000D5C  E8 00000DD8		   call	ObtainUvcDevice
   2582	00000D61  0F 85	000002C3	   jnz NotUsbOpenAttempt
   2583					 ; process compound descriptor
   2584	00000D67  E8 00000E9A		   call	ProcessDescriptors
   2585	00000D6C  0F 85	000002B8	   jnz NotUsbOpenAttempt
   2586					 ; open	uvc camera device driver
   2587					   call	UsbOpen	c,offset(fhDevice),[idVendor],[idProduct],[bcdDevice],0
1  2588	00000D72  6A 00				 PUSH	 0
1  2589	00000D74  FF 35	002EF6AEr		 PUSH	 [BCDDEVICE]
1  2590	00000D7A  FF 35	002EF6B2r		 PUSH	 [IDPRODUCT]
1  2591	00000D80  FF 35	002EF6B6r		 PUSH	 [IDVENDOR]
1  2592	00000D86  68 00000662r			 PUSH	 OFFSET(FHDEVICE)
1  2593	00000D8B  E8 00000000e			 CALL	 USBOPEN
1  2594	00000D90  83 C4	14			 ADD	 ESP,00014h
   2595	00000D93  85 C0			   test	eax,eax	; check	for errors
   2596	00000D95  74 3E			   jz UsbOpenSuccess ; continue
   2597					 ; report usb open failure
   2598					   call	WinLoadString c,[hab],0,02h,255,offset(szMessageText)
1  2599	00000D97  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  2600	00000D9C  68 000000FF			 PUSH	 255
1  2601	00000DA1  6A 02				 PUSH	 02H
1  2602	00000DA3  6A 00				 PUSH	 0
1  2603	00000DA5  FF 35	00000616r		 PUSH	 [HAB]
1  2604	00000DAB  E8 00000000e			 CALL	 WINLOADSTRING
1  2605	00000DB0  83 C4	14			 ADD	 ESP,00014h
   2606					   call	WinMessageBox c,1,1,offset(szMessageText),offset(szWindowTitle),0,4046h
1  2607	00000DB3  68 00004046			 PUSH	 4046H
1  2608	00000DB8  6A 00				 PUSH	 0
1  2609	00000DBA  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  2610	00000DBF  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  2611	00000DC4  6A 01				 PUSH	 1
1  2612	00000DC6  6A 01				 PUSH	 1
1  2613	00000DC8  E8 00000000e			 CALL	 WINMESSAGEBOX
1  2614	00000DCD  83 C4	18			 ADD	 ESP,00018h
   2615	00000DD0  E9 00000255		   jmp EndUsbOpenAttempt
   2616	00000DD5			 label UsbOpenSuccess near
   2617					 ; create isochronous event semaphore
   2618					   call	DosCreateEventSem c,0,offset(IsoEvent),1,0
1  2619	00000DD5  6A 00				 PUSH	 0
1  2620	00000DD7  6A 01				 PUSH	 1
1  2621	00000DD9  68 00040E57r			 PUSH	 OFFSET(ISOEVENT)
1  2622	00000DDE  6A 00				 PUSH	 0
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 47
uvcview.asm



1  2623	00000DE0  E8 00000000e			 CALL	 DOSCREATEEVENTSEM
1  2624	00000DE5  83 C4	10			 ADD	 ESP,00010h
   2625					 ; create obtain image event semaphore
   2626					   call	DosCreateEventSem c,0,offset(ObtainImage),0,0
1  2627	00000DE8  6A 00				 PUSH	 0
1  2628	00000DEA  6A 00				 PUSH	 0
1  2629	00000DEC  68 0000064Er			 PUSH	 OFFSET(OBTAINIMAGE)
1  2630	00000DF1  6A 00				 PUSH	 0
1  2631	00000DF3  E8 00000000e			 CALL	 DOSCREATEEVENTSEM
1  2632	00000DF8  83 C4	10			 ADD	 ESP,00010h
   2633					 ; create supply image event semaphore
   2634					   call	DosCreateEventSem c,0,offset(SupplyImage),0,0
1  2635	00000DFB  6A 00				 PUSH	 0
1  2636	00000DFD  6A 00				 PUSH	 0
1  2637	00000DFF  68 00000656r			 PUSH	 OFFSET(SUPPLYIMAGE)
1  2638	00000E04  6A 00				 PUSH	 0
1  2639	00000E06  E8 00000000e			 CALL	 DOSCREATEEVENTSEM
1  2640	00000E0B  83 C4	10			 ADD	 ESP,00010h
   2641					 ; start obtain	control	thread
   2642					   call	DosCreateThread	c,offset(tidObtain),offset(ObtainThread),0,2,8192
1  2643	00000E0E  68 00002000			 PUSH	 8192
1  2644	00000E13  6A 02				 PUSH	 2
1  2645	00000E15  6A 00				 PUSH	 0
1  2646	00000E17  68 0000126Dr			 PUSH	 OFFSET(OBTAINTHREAD)
1  2647	00000E1C  68 00000666r			 PUSH	 OFFSET(TIDOBTAIN)
1  2648	00000E21  E8 00000000e			 CALL	 DOSCREATETHREAD
1  2649	00000E26  83 C4	14			 ADD	 ESP,00014h
   2650					 ; start supply	control	thread
   2651					   call	DosCreateThread	c,offset(tidSupply),offset(SupplyThread),0,2,8192
1  2652	00000E29  68 00002000			 PUSH	 8192
1  2653	00000E2E  6A 02				 PUSH	 2
1  2654	00000E30  6A 00				 PUSH	 0
1  2655	00000E32  68 0000165Cr			 PUSH	 OFFSET(SUPPLYTHREAD)
1  2656	00000E37  68 0000066Ar			 PUSH	 OFFSET(TIDSUPPLY)
1  2657	00000E3C  E8 00000000e			 CALL	 DOSCREATETHREAD
1  2658	00000E41  83 C4	14			 ADD	 ESP,00014h
   2659					 ; register client window class
   2660					   call	WinRegisterClass c,[hab],offset(szClientClass),offset(ClientWinProc),0,0
1  2661	00000E44  6A 00				 PUSH	 0
1  2662	00000E46  6A 00				 PUSH	 0
1  2663	00000E48  68 00001052r			 PUSH	 OFFSET(CLIENTWINPROC)
1  2664	00000E4D  68 00040E3Fr			 PUSH	 OFFSET(SZCLIENTCLASS)
1  2665	00000E52  FF 35	00000616r		 PUSH	 [HAB]
1  2666	00000E58  E8 00000000e			 CALL	 WINREGISTERCLASS
1  2667	00000E5D  83 C4	14			 ADD	 ESP,00014h
   2668	00000E60  85 C0			   test	eax,eax	; success
   2669	00000E62  0F 84	00000110	   jz EndWindow	; failure
   2670					 ; create frame	and client windows
   2671					   call	WinCreateStdWindow c,1,0,offset(flCreateFlags),offset(szClientClass),offset	    +
   2672					 (szWindowTitle),0,0,1,offset(hwndClient)
1  2673	00000E68  68 0000061Er			 PUSH	 OFFSET(HWNDCLIENT)
1  2674	00000E6D  6A 01				 PUSH	 1
1  2675	00000E6F  6A 00				 PUSH	 0
1  2676	00000E71  6A 00				 PUSH	 0
1  2677	00000E73  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  2678	00000E78  68 00040E3Fr			 PUSH	 OFFSET(SZCLIENTCLASS)
1  2679	00000E7D  68 00040E3Br			 PUSH	 OFFSET(FLCREATEFLAGS)
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 48
uvcview.asm



1  2680	00000E82  6A 00				 PUSH	 0
1  2681	00000E84  6A 01				 PUSH	 1
1  2682	00000E86  E8 00000000e			 CALL	 WINCREATESTDWINDOW
1  2683	00000E8B  83 C4	24			 ADD	 ESP,00024h
   2684	00000E8E  85 C0			   test	eax,eax	; success
   2685	00000E90  0F 84	000000E2	   jz EndWindow	; failure
   2686	00000E96  A3 00000622r		   mov [hwndFrame],eax ; save
   2687					 ; replace frame window	procedure
   2688					   call	WinSubclassWindow c,[hwndFrame],offset(FrameWinProc)
1  2689	00000E9B  68 000011B9r			 PUSH	 OFFSET(FRAMEWINPROC)
1  2690	00000EA0  FF 35	00000622r		 PUSH	 [HWNDFRAME]
1  2691	00000EA6  E8 00000000e			 CALL	 WINSUBCLASSWINDOW
1  2692	00000EAB  83 C4	08			 ADD	 ESP,00008h
   2693	00000EAE  85 C0			   test	eax,eax	; success
   2694	00000EB0  0F 84	000000B4	   jz EndScreen	; failure
   2695	00000EB6  A3 00000682r		   mov [WinOldWindowProc],eax
   2696					 ; resize and show usb camera screen
   2697					   call	WinQuerySysValue c,1,28	; SV_CXDLGFRAME
1  2698	00000EBB  6A 1C				 PUSH	 28
1  2699	00000EBD  6A 01				 PUSH	 1
1  2700	00000EBF  E8 00000000e			 CALL	 WINQUERYSYSVALUE
1  2701	00000EC4  83 C4	08			 ADD	 ESP,00008h
   2702	00000EC7  8D 04	45 00000140	   lea eax,[eax*2+Ox+0]	; calculate width
   2703	00000ECE  A3 00000646r		   mov [xWindowSize],eax ; small width
   2704					   call	WinQuerySysValue c,1,29	; SV_CYDLGFRAME
1  2705	00000ED3  6A 1D				 PUSH	 29
1  2706	00000ED5  6A 01				 PUSH	 1
1  2707	00000ED7  E8 00000000e			 CALL	 WINQUERYSYSVALUE
1  2708	00000EDC  83 C4	08			 ADD	 ESP,00008h
   2709	00000EDF  8D 04	45 000000EF	   lea eax,[eax*2+Oy-1]	; calculate height
   2710	00000EE6  A3 0000064Ar		   mov [yWindowSize],eax ; small height
   2711					   call	WinQuerySysValue c,1,30	; SV_CYTITLEBAR
1  2712	00000EEB  6A 1E				 PUSH	 30
1  2713	00000EED  6A 01				 PUSH	 1
1  2714	00000EEF  E8 00000000e			 CALL	 WINQUERYSYSVALUE
1  2715	00000EF4  83 C4	08			 ADD	 ESP,00008h
   2716	00000EF7  01 05	0000064Ar	   add [yWindowSize],eax ; small height
   2717					   call	WinQuerySysValue c,1,35	; SV_CYMENU
1  2718	00000EFD  6A 23				 PUSH	 35
1  2719	00000EFF  6A 01				 PUSH	 1
1  2720	00000F01  E8 00000000e			 CALL	 WINQUERYSYSVALUE
1  2721	00000F06  83 C4	08			 ADD	 ESP,00008h
   2722	00000F09  01 05	0000064Ar	   add [yWindowSize],eax ; small height
   2723					   call	WinSetWindowPos	c,[hwndFrame],0,0,0,[xWindowSize],[yWindowSize],1089h
1  2724	00000F0F  68 00001089			 PUSH	 1089H
1  2725	00000F14  FF 35	0000064Ar		 PUSH	 [YWINDOWSIZE]
1  2726	00000F1A  FF 35	00000646r		 PUSH	 [XWINDOWSIZE]
1  2727	00000F20  6A 00				 PUSH	 0
1  2728	00000F22  6A 00				 PUSH	 0
1  2729	00000F24  6A 00				 PUSH	 0
1  2730	00000F26  FF 35	00000622r		 PUSH	 [HWNDFRAME]
1  2731	00000F2C  E8 00000000e			 CALL	 WINSETWINDOWPOS
1  2732	00000F31  83 C4	1C			 ADD	 ESP,0001Ch
   2733	00000F34  85 C0			   test	eax,eax	; success
   2734	00000F36  74 32			   jz EndScreen	; failure
   2735	00000F38			 label ProcessMessage near
   2736					 ; obtain message from the message queue
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 49
uvcview.asm



   2737					   call	WinGetMsg c,[hab],offset(qmsg),0,0,0
1  2738	00000F38  6A 00				 PUSH	 0
1  2739	00000F3A  6A 00				 PUSH	 0
1  2740	00000F3C  6A 00				 PUSH	 0
1  2741	00000F3E  68 00000626r			 PUSH	 OFFSET(QMSG)
1  2742	00000F43  FF 35	00000616r		 PUSH	 [HAB]
1  2743	00000F49  E8 00000000e			 CALL	 WINGETMSG
1  2744	00000F4E  83 C4	14			 ADD	 ESP,00014h
   2745	00000F51  85 C0			   test	eax,eax	; continue message
   2746	00000F53  74 15			   jz EndProcessMessage	; quit message
   2747					 ; dispatch message to client window procedure
   2748					   call	WinDispatchMsg c,[hab],offset(qmsg)
1  2749	00000F55  68 00000626r			 PUSH	 OFFSET(QMSG)
1  2750	00000F5A  FF 35	00000616r		 PUSH	 [HAB]
1  2751	00000F60  E8 00000000e			 CALL	 WINDISPATCHMSG
1  2752	00000F65  83 C4	08			 ADD	 ESP,00008h
   2753	00000F68  EB CE			   jmp ProcessMessage
   2754	00000F6A			 label EndProcessMessage near
   2755	00000F6A			 label EndScreen near
   2756					   call	WinDestroyWindow c,[hwndFrame]
1  2757	00000F6A  FF 35	00000622r		 PUSH	 [HWNDFRAME]
1  2758	00000F70  E8 00000000e			 CALL	 WINDESTROYWINDOW
1  2759	00000F75  83 C4	04			 ADD	 ESP,00004h
   2760	00000F78			 label EndWindow near
   2761					 ; suspend supply control thread
   2762					   call	DosSuspendThread c,[tidSupply]
1  2763	00000F78  FF 35	0000066Ar		 PUSH	 [TIDSUPPLY]
1  2764	00000F7E  E8 00000000e			 CALL	 DOSSUSPENDTHREAD
1  2765	00000F83  83 C4	04			 ADD	 ESP,00004h
   2766					 ; suspend obtain control thread
   2767					   call	DosSuspendThread c,[tidObtain]
1  2768	00000F86  FF 35	00000666r		 PUSH	 [TIDOBTAIN]
1  2769	00000F8C  E8 00000000e			 CALL	 DOSSUSPENDTHREAD
1  2770	00000F91  83 C4	04			 ADD	 ESP,00004h
   2771					 ; close supply	image event semaphore
   2772					   call	DosCloseEventSem c,[SupplyImage]
1  2773	00000F94  FF 35	00000656r		 PUSH	 [SUPPLYIMAGE]
1  2774	00000F9A  E8 00000000e			 CALL	 DOSCLOSEEVENTSEM
1  2775	00000F9F  83 C4	04			 ADD	 ESP,00004h
   2776					 ; close obtain	image event semaphore
   2777					   call	DosCloseEventSem c,[ObtainImage]
1  2778	00000FA2  FF 35	0000064Er		 PUSH	 [OBTAINIMAGE]
1  2779	00000FA8  E8 00000000e			 CALL	 DOSCLOSEEVENTSEM
1  2780	00000FAD  83 C4	04			 ADD	 ESP,00004h
   2781					 ; close isochronous event semaphore
   2782					   call	DosCloseEventSem c,[IsoEvent]
1  2783	00000FB0  FF 35	00040E57r		 PUSH	 [ISOEVENT]
1  2784	00000FB6  E8 00000000e			 CALL	 DOSCLOSEEVENTSEM
1  2785	00000FBB  83 C4	04			 ADD	 ESP,00004h
   2786					 ; cancel isochronous transfers
   2787					   call	UsbCancelTransfer c,[fhDevice],[AddrEndpoint],[AltInterface],[IsoEvent]
1  2788	00000FBE  FF 35	00040E57r		 PUSH	 [ISOEVENT]
1  2789	00000FC4  FF 35	002EF6BAr		 PUSH	 [ALTINTERFACE]
1  2790	00000FCA  FF 35	002EF6C2r		 PUSH	 [ADDRENDPOINT]
1  2791	00000FD0  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  2792	00000FD6  E8 00000000e			 CALL	 USBCANCELTRANSFER
1  2793	00000FDB  83 C4	10			 ADD	 ESP,00010h
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 50
uvcview.asm



   2794					 ; close isochronous transfer
   2795					   call	UsbIsoClose c,[fhDevice],[AddrEndpoint],[AltInterface]
1  2796	00000FDE  FF 35	002EF6BAr		 PUSH	 [ALTINTERFACE]
1  2797	00000FE4  FF 35	002EF6C2r		 PUSH	 [ADDRENDPOINT]
1  2798	00000FEA  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  2799	00000FF0  E8 00000000e			 CALL	 USBISOCLOSE
1  2800	00000FF5  83 C4	0C			 ADD	 ESP,0000Ch
   2801					 ; reset alternative interface request
   2802					   call	UsbCtrlMessage c,[fhDevice],001h,0Bh,0,[NumInterface],0,0,0
1  2803	00000FF8  6A 00				 PUSH	 0
1  2804	00000FFA  6A 00				 PUSH	 0
1  2805	00000FFC  6A 00				 PUSH	 0
1  2806	00000FFE  FF 35	002EF6BEr		 PUSH	 [NUMINTERFACE]
1  2807	00001004  6A 00				 PUSH	 0
1  2808	00001006  6A 0B				 PUSH	 0BH
1  2809	00001008  6A 01				 PUSH	 001H
1  2810	0000100A  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  2811	00001010  E8 00000000e			 CALL	 USBCTRLMESSAGE
1  2812	00001015  83 C4	20			 ADD	 ESP,00020h
   2813					 ; close usb camera device driver
   2814					   call	UsbClose c,[fhDevice]
1  2815	00001018  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  2816	0000101E  E8 00000000e			 CALL	 USBCLOSE
1  2817	00001023  83 C4	04			 ADD	 ESP,00004h
   2818	00001026  85 C0			   test	eax,eax	; any error
   2819	00001028  74 00			   jz EndUsbCloseAttempt ; none
   2820					 ; show	appropriate error message
   2821					 ; call	WinLoadString c,[hab],0,00h,255,offset(szMessageText)
   2822					 ; call	WinMessageBox c,1,1,offset(szMessageText),offset(szWindowTitle),0,4046h
   2823	0000102A			 label EndUsbCloseAttempt near
   2824	0000102A			 label EndUsbOpenAttempt near
   2825	0000102A			 label NotUsbOpenAttempt near
   2826					   call	WinDestroyMsgQueue c,[hmq]
1  2827	0000102A  FF 35	0000061Ar		 PUSH	 [HMQ]
1  2828	00001030  E8 00000000e			 CALL	 WINDESTROYMSGQUEUE
1  2829	00001035  83 C4	04			 ADD	 ESP,00004h
   2830	00001038			 label EndMainMsgQueue near
   2831					   call	WinTerminate c,[hab]
1  2832	00001038  FF 35	00000616r		 PUSH	 [HAB]
1  2833	0000103E  E8 00000000e			 CALL	 WINTERMINATE
1  2834	00001043  83 C4	04			 ADD	 ESP,00004h
   2835	00001046			 label EndProcess near
   2836					 ; exit	the process
   2837					   call	DosExit	c,1,0
1  2838	00001046  6A 00				 PUSH	 0
1  2839	00001048  6A 01				 PUSH	 1
1  2840	0000104A  E8 00000000e			 CALL	 DOSEXIT
1  2841	0000104F  83 C4	08			 ADD	 ESP,00008h
   2842	00001052			 endp MainRoutine
   2843
   2844	00001052			 dataseg
   2845	00040E5B  000C 0000 0280 01E0 +	 bhMemory dw 12,0,Ix,Iy,1,24
   2846		  0001 0018
   2847	00040E67  00000000 00000000   +	 paMemory dd 0,0,Ox,Oy,0,0,Ix,Iy
   2848		  00000140 000000F0   +
   2849		  00000000 00000000   +
   2850		  00000280 000001E0
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 51
uvcview.asm



   2851	00040E87  00000000 00000000	 srMemory dd 0,0
   2852
   2853	00040E8F			 dataseg
   2854	00040E8F  2A 00			 szDeviceToken db '*',0
   2855
   2856	00040E91			 udataseg
   2857	0000066E  ????????		 hbmMemory dd ?
   2858	00000672  ????????		 hdcMemory dd ?
   2859	00000676  ????????		 hdcScreen dd ?
   2860	0000067A  ????????		 hpsMemory dd ?
   2861	0000067E  ????????		 hpsScreen dd ?
   2862
   2863	00000682			 dataseg
   2864	00040E91  00			 SnapShot db 0 ; done
   2865
   2866	00040E92			 codeseg
   2867	00001052			 proc ClientWinProc c near
   2868					 arg @@hwnd,@@msg,@@mp1,@@mp2
   2869					 ; refresh video display screen
1  2870	00001052  C8 0000 00			 ENTERD	 00000h,0
1  2871	00001056  83 7D	0C 23		   cmp [@@msg],23h ; WM_PAINT
   2872	0000105A  75 6A			   jne NotRefreshScreen
   2873					   call	WinBeginPaint c,[@@hwnd],0,0
1  2874	0000105C  6A 00				 PUSH	 0
1  2875	0000105E  6A 00				 PUSH	 0
1  2876	00001060  FF 75	08			 PUSH	 [@@HWND]
1  2877	00001063  E8 00000000e			 CALL	 WINBEGINPAINT
1  2878	00001068  83 C4	0C			 ADD	 ESP,0000Ch
   2879	0000106B  A3 0000067Er		   mov [hpsScreen],eax ; save
   2880					   call	GpiSetBitmapBits c,[hpsMemory],0,Iy,offset(rgbBuffer),offset(bhMemory)
1  2881	00001070  68 00040E5Br			 PUSH	 OFFSET(BHMEMORY)
1  2882	00001075  68 0020D68Ar			 PUSH	 OFFSET(RGBBUFFER)
1  2883	0000107A  68 000001E0			 PUSH	 IY
1  2884	0000107F  6A 00				 PUSH	 0
1  2885	00001081  FF 35	0000067Ar		 PUSH	 [HPSMEMORY]
1  2886	00001087  E8 00000000e			 CALL	 GPISETBITMAPBITS
1  2887	0000108C  83 C4	14			 ADD	 ESP,00014h
   2888					   call	GpiBitBlt c,[hpsScreen],[hpsMemory],4,offset(paMemory),0CCh,2
1  2889	0000108F  6A 02				 PUSH	 2
1  2890	00001091  68 000000CC			 PUSH	 0CCH
1  2891	00001096  68 00040E67r			 PUSH	 OFFSET(PAMEMORY)
1  2892	0000109B  6A 04				 PUSH	 4
1  2893	0000109D  FF 35	0000067Ar		 PUSH	 [HPSMEMORY]
1  2894	000010A3  FF 35	0000067Er		 PUSH	 [HPSSCREEN]
1  2895	000010A9  E8 00000000e			 CALL	 GPIBITBLT
1  2896	000010AE  83 C4	18			 ADD	 ESP,00018h
   2897					   call	WinEndPaint c,[hpsScreen]
1  2898	000010B1  FF 35	0000067Er		 PUSH	 [HPSSCREEN]
1  2899	000010B7  E8 00000000e			 CALL	 WINENDPAINT
1  2900	000010BC  83 C4	04			 ADD	 ESP,00004h
   2901	000010BF  B8 00000001		   mov eax,1 ; done
1  2902	000010C4  C9				 LEAVED
1  2903	000010C5  C3				 RET	 00000h
   2904	000010C6			 label NotRefreshScreen	near
   2905					 ; handle command input
   2906	000010C6  83 7D	0C 20		   cmp [@@msg],20h ; WM_COMMAND
   2907	000010CA  75 14			   jne NotCommand
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 52
uvcview.asm



   2908					 ; take	snapshot
   2909	000010CC  8B 45	10		   mov eax,[@@mp1]
   2910	000010CF  3C 01			   cmp al,1 ; SnapShot
   2911	000010D1  72 09			   jb NotSnapshot
   2912	000010D3  3C 02			   cmp al,2 ; TestShot
   2913	000010D5  77 05			   ja NotSnapshot
   2914	000010D7  A2 00040E91r		   mov [SnapShot],al
   2915	000010DC			 label NotSnapshot near
   2916	000010DC  2B C0			   sub eax,eax ; reserved
1  2917	000010DE  C9				 LEAVED
1  2918	000010DF  C3				 RET	 00000h
   2919	000010E0			 label NotCommand near
   2920					 ; exit	usb camera request
   2921	000010E0  83 7D	0C 2A		   cmp [@@msg],2Ah ; WM_QUIT
   2922	000010E4  75 07			   jne NotExitCamera
   2923	000010E6  B8 00000001		   mov eax,1 ; done
1  2924	000010EB  C9				 LEAVED
1  2925	000010EC  C3				 RET	 00000h
   2926	000010ED			 label NotExitCamera near
   2927					 ; create video	display	screen
   2928	000010ED  83 7D	0C 01		   cmp [@@msg],1 ; WM_CREATE
   2929	000010F1  75 79			   jne NotCreateScreen
   2930					   call	DevOpenDC c,[hab],8,offset(szDeviceToken),0,0,0
1  2931	000010F3  6A 00				 PUSH	 0
1  2932	000010F5  6A 00				 PUSH	 0
1  2933	000010F7  6A 00				 PUSH	 0
1  2934	000010F9  68 00040E8Fr			 PUSH	 OFFSET(SZDEVICETOKEN)
1  2935	000010FE  6A 08				 PUSH	 8
1  2936	00001100  FF 35	00000616r		 PUSH	 [HAB]
1  2937	00001106  E8 00000000e			 CALL	 DEVOPENDC
1  2938	0000110B  83 C4	18			 ADD	 ESP,00018h
   2939	0000110E  A3 00000672r		   mov [hdcMemory],eax ; save
   2940					   call	GpiCreatePS c,[hab],[hdcMemory],offset(srMemory),5008h
1  2941	00001113  68 00005008			 PUSH	 5008H
1  2942	00001118  68 00040E87r			 PUSH	 OFFSET(SRMEMORY)
1  2943	0000111D  FF 35	00000672r		 PUSH	 [HDCMEMORY]
1  2944	00001123  FF 35	00000616r		 PUSH	 [HAB]
1  2945	00001129  E8 00000000e			 CALL	 GPICREATEPS
1  2946	0000112E  83 C4	10			 ADD	 ESP,00010h
   2947	00001131  A3 0000067Ar		   mov [hpsMemory],eax ; save
   2948					   call	GpiCreateBitmap	c,[hpsMemory],offset(bhMemory),0,0,0
1  2949	00001136  6A 00				 PUSH	 0
1  2950	00001138  6A 00				 PUSH	 0
1  2951	0000113A  6A 00				 PUSH	 0
1  2952	0000113C  68 00040E5Br			 PUSH	 OFFSET(BHMEMORY)
1  2953	00001141  FF 35	0000067Ar		 PUSH	 [HPSMEMORY]
1  2954	00001147  E8 00000000e			 CALL	 GPICREATEBITMAP
1  2955	0000114C  83 C4	14			 ADD	 ESP,00014h
   2956	0000114F  A3 0000066Er		   mov [hbmMemory],eax ; save
   2957					   call	GpiSetBitmap c,[hpsMemory],[hbmMemory]
1  2958	00001154  FF 35	0000066Er		 PUSH	 [HBMMEMORY]
1  2959	0000115A  FF 35	0000067Ar		 PUSH	 [HPSMEMORY]
1  2960	00001160  E8 00000000e			 CALL	 GPISETBITMAP
1  2961	00001165  83 C4	08			 ADD	 ESP,00008h
   2962	00001168  2B C0			   sub eax,eax ; continue
1  2963	0000116A  C9				 LEAVED
1  2964	0000116B  C3				 RET	 00000h
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 53
uvcview.asm



   2965	0000116C			 label NotCreateScreen near
   2966					 ; destroy video display sceen
   2967	0000116C  83 7D	0C 02		   cmp [@@msg],2 ; WM_DESTROY
   2968	00001170  75 31			   jne NotDestroyScreen
   2969					   call	GpiDeleteBitmap	c,[hbmMemory]
1  2970	00001172  FF 35	0000066Er		 PUSH	 [HBMMEMORY]
1  2971	00001178  E8 00000000e			 CALL	 GPIDELETEBITMAP
1  2972	0000117D  83 C4	04			 ADD	 ESP,00004h
   2973					   call	GpiDestroyPS c,[hdcMemory]
1  2974	00001180  FF 35	00000672r		 PUSH	 [HDCMEMORY]
1  2975	00001186  E8 00000000e			 CALL	 GPIDESTROYPS
1  2976	0000118B  83 C4	04			 ADD	 ESP,00004h
   2977					   call	DevCloseDC c,[hpsMemory]
1  2978	0000118E  FF 35	0000067Ar		 PUSH	 [HPSMEMORY]
1  2979	00001194  E8 00000000e			 CALL	 DEVCLOSEDC
1  2980	00001199  83 C4	04			 ADD	 ESP,00004h
   2981	0000119C  B8 00000001		   mov eax,1 ; done
1  2982	000011A1  C9				 LEAVED
1  2983	000011A2  C3				 RET	 00000h
   2984	000011A3			 label NotDestroyScreen	near
   2985					 ; pass	message	to default window processing
   2986					   call	WinDefWindowProc c,[@@hwnd],[@@msg],[@@mp1],[@@mp2]
1  2987	000011A3  FF 75	14			 PUSH	 [@@MP2]
1  2988	000011A6  FF 75	10			 PUSH	 [@@MP1]
1  2989	000011A9  FF 75	0C			 PUSH	 [@@MSG]
1  2990	000011AC  FF 75	08			 PUSH	 [@@HWND]
1  2991	000011AF  E8 00000000e			 CALL	 WINDEFWINDOWPROC
1  2992	000011B4  83 C4	10			 ADD	 ESP,00010h
1  2993	000011B7  C9				 LEAVED
1  2994	000011B8  C3				 RET	 00000h
   2995	000011B9			 endp ClientWinProc
   2996
   2997	000011B9			 udataseg
   2998	00000682  ????????		 WinOldWindowProc dd ?
   2999
   3000	00000686			 codeseg
   3001	000011B9			 proc FrameWinProc c near
   3002					 arg @@hwnd,@@msg,@@mp1,@@mp2
   3003					 uses ebx,ecx,edx,edi,esi
   3004					 ; handle window minimize/maximize
1  3005	000011B9  C8 0000 00			 ENTERD	 00000h,0
1  3006	000011BD  53				 PUSH	 EBX
1  3007	000011BE  51				 PUSH	 ECX
1  3008	000011BF  52				 PUSH	 EDX
1  3009	000011C0  57				 PUSH	 EDI
1  3010	000011C1  56				 PUSH	 ESI
1  3011	000011C2  83 7D	0C 46		   cmp [@@msg],46h ; WM_MINMAXFRAME
   3012	000011C6  0F 85	00000085	   jne PassToOldFrameProcedure
   3013	000011CC  8B 45	10		   mov eax,[@@mp1] ; swp pointer
   3014					 ; set maximum window size
   3015	000011CF  F7 00	00000800	   test	[dword(eax)+0*4],800h ;	SWP_MAXIMIZE
   3016	000011D5  74 5E			   jz NotMaximizeWindow
   3017					 ; preset small	camera screen size
   3018	000011D7  8B 0D	0000064Ar	   mov ecx,[yWindowSize] ; small height
   3019	000011DD  8B 15	00000646r	   mov edx,[xWindowSize] ; small width
   3020					 ; check large size fits on screen
   3021	000011E3  8D 99	000000F0	   lea ebx,[ecx+Oy] ; large height
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 54
uvcview.asm



   3022	000011E9  3B 58	04		   cmp ebx,[eax+1*4] ; old cymax
   3023	000011EC  77 2B			   ja UpdateHeightPosition ; no
   3024	000011EE  8D 9A	00000140	   lea ebx,[edx+Ox] ; large width
   3025	000011F4  3B 58	08		   cmp ebx,[eax+2*4] ; old cxmax
   3026	000011F7  77 20			   ja UpdateHeightPosition ; no
   3027					 ; setup large camera screen size
   3028	000011F9  8D 89	000000F0	   lea ecx,[ecx+Oy] ; large height
   3029	000011FF  8D 92	00000140	   lea edx,[edx+Ox] ; large width
   3030					 ; update window height/width
   3031	00001205  C7 05	00040E73r     +	   mov [paMemory+3*4],Oy*2
   3032		  000001E0
   3033	0000120F  C7 05	00040E6Fr     +	   mov [paMemory+2*4],Ox*2
   3034		  00000280
   3035	00001219			 label UpdateHeightPosition near
   3036					 ; update maximum height/position
   3037	00001219  8B 58	04		   mov ebx,[eax+1*4] ; old cymax
   3038	0000121C  89 48	04		   mov [eax+1*4],ecx ; new cymax
   3039	0000121F  2B D9			   sub ebx,ecx ; max position
   3040	00001221  D1 EB			   shr ebx,1 ; center position
   3041	00001223  01 58	0C		   add [eax+3*4],ebx ; ypos
   3042					 ; update maximum width/position
   3043	00001226  8B 58	08		   mov ebx,[eax+2*4] ; old cxmax
   3044	00001229  89 50	08		   mov [eax+2*4],edx ; new cxmax
   3045	0000122C  2B DA			   sub ebx,edx ; max position
   3046	0000122E  D1 EB			   shr ebx,1 ; center position
   3047	00001230  01 58	10		   add [eax+4*4],ebx ; xpos
   3048	00001233  EB 1C			   jmp PassToOldFrameProcedure
   3049	00001235			 label NotMaximizeWindow near
   3050					 ; set restored	window size
   3051	00001235  F7 00	00001000	   test	[dword(eax)+0*4],1000h ; SWP_RESTORE
   3052	0000123B  74 14			   jz NotRestoreWindow
   3053					 ; update window height/width
   3054	0000123D  C7 05	00040E73r     +	   mov [paMemory+3*4],Oy*1
   3055		  000000F0
   3056	00001247  C7 05	00040E6Fr     +	   mov [paMemory+2*4],Ox*1
   3057		  00000140
   3058	00001251			 label NotRestoreWindow	near
   3059	00001251			 label PassToOldFrameProcedure near
   3060					 ; pass	message	to default window processing
   3061					   call	[WinOldWindowProc] c,[@@hwnd],[@@msg],[@@mp1],[@@mp2]
1  3062	00001251  FF 75	14			 PUSH	 [@@MP2]
1  3063	00001254  FF 75	10			 PUSH	 [@@MP1]
1  3064	00001257  FF 75	0C			 PUSH	 [@@MSG]
1  3065	0000125A  FF 75	08			 PUSH	 [@@HWND]
1  3066	0000125D  FF 15	00000682r		 CALL	 [WINOLDWINDOWPROC]
1  3067	00001263  83 C4	10			 ADD	 ESP,00010h
1  3068	00001266  5E				 POP	 ESI
1  3069	00001267  5F				 POP	 EDI
1  3070	00001268  5A				 POP	 EDX
1  3071	00001269  59				 POP	 ECX
1  3072	0000126A  5B				 POP	 EBX
1  3073	0000126B  C9				 LEAVED
1  3074	0000126C  C3				 RET	 00000h
   3075	0000126D			 endp FrameWinProc
   3076
   3077	0000126D			 dataseg
   3078	00040E92  00000003		 ObtainCount dd	3
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 55
uvcview.asm



   3079	00040E96  00000001		 SupplyCount dd	1
   3080
   3081	00040E9A			 udataseg
   3082					 ; image buffers
   3083	00000686  096000*(??)		 InBuffer0 db Ix*Iy*2 dup(?)
   3084	00096686  096000*(??)		 InBuffer1 db Ix*Iy*2 dup(?)
   3085	0012C686  096000*(??)		 InBuffer2 db Ix*Iy*2 dup(?)
   3086
   3087	001C2686			 dataseg
   3088					 ; ring	of image buffer	pointers
   3089	00040E9A  00040EA6r 00000686r +	 InBufPtr0 dd offset(InBufPtr1),offset(InBuffer0),0
   3090		  00000000
   3091	00040EA6  00040EB2r 00096686r +	 InBufPtr1 dd offset(InBufPtr2),offset(InBuffer1),0
   3092		  00000000
   3093	00040EB2  00040E9Ar 0012C686r +	 InBufPtr2 dd offset(InBufPtr0),offset(InBuffer2),0
   3094		  00000000
   3095
   3096	00040EBE			 dataseg
   3097					 ; current image buffer	pointers
   3098	00040EBE  00040E9Ar		 ObtainPtr dd offset(InBufPtr0)
   3099	00040EC2  00040EB2r		 SupplyPtr dd offset(InBufPtr2)
   3100
   3101	00040EC6			 dataseg
   3102	00040EC6  1A*(00)		 Negotiate db 26 dup(0)
   3103	00040EE0  1A*(00)		 Suggested db 26 dup(0)
   3104
   3105	00040EFA			 dataseg
   3106	00040EFA  00000004		 IsoFree dd iUsed
   3107	00040EFE  00000000r		 IsoThis dd offset(IsoData)
   3108
   3109	00040F02			 udataseg
   3110	001C2686  ????????		 IsoPost dd ?
   3111
   3112	001C268A			 dataseg
   3113	00040F02  00000000		 pTimeStamp dd 0
   3114
   3115	00040F06			 codeseg
   3116	0000126D			 proc ObtainThread c near
   3117					 arg @@parameter:dword
   3118					 local @@hab:dword
   3119					 local @@hmq:dword
   3120					 ; obtain anchor block handle
1  3121	0000126D  C8 0008 00			 ENTERD	 00008h,0
1  3122					   call	WinInitialize c,0
2  3123	00001271  6A 00				 PUSH	 0
2  3124	00001273  E8 00000000e			 CALL	 WININITIALIZE
2  3125	00001278  83 C4	04			 ADD	 ESP,00004h
   3126	0000127B  85 C0			   test	eax,eax	; success
   3127	0000127D  0F 84	000003A1	   jz EndObtainThread
   3128	00001283  89 45	FC		   mov [@@hab],eax ; save
   3129					 ; obtain message queue	handle
   3130					   call	WinCreateMsgQueue c,[@@hab],0
1  3131	00001286  6A 00				 PUSH	 0
1  3132	00001288  FF 75	FC			 PUSH	 [@@HAB]
1  3133	0000128B  E8 00000000e			 CALL	 WINCREATEMSGQUEUE
1  3134	00001290  83 C4	08			 ADD	 ESP,00008h
   3135	00001293  85 C0			   test	eax,eax	; success
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 56
uvcview.asm



   3136	00001295  0F 84	0000037E	   jz EndObtainMsgQueue
   3137	0000129B  89 45	F8		   mov [@@hmq],eax ; save
   3138					 ; set configuration request
   3139					   call	UsbCtrlMessage c,[fhDevice],000h,09h,0001h,0000h,0,0,0
1  3140	0000129E  6A 00				 PUSH	 0
1  3141	000012A0  6A 00				 PUSH	 0
1  3142	000012A2  6A 00				 PUSH	 0
1  3143	000012A4  6A 00				 PUSH	 0000H
1  3144	000012A6  6A 01				 PUSH	 0001H
1  3145	000012A8  6A 09				 PUSH	 09H
1  3146	000012AA  6A 00				 PUSH	 000H
1  3147	000012AC  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3148	000012B2  E8 00000000e			 CALL	 USBCTRLMESSAGE
1  3149	000012B7  83 C4	20			 ADD	 ESP,00020h
   3150	000012BA  85 C0			   test	eax,eax	; check	for errors
   3151	000012BC  0F 85	00000308	   jnz BadObtainThread ; failure
   3152					 ; supply negotiate setting
   3153					   call	UsbCtrlMessage c,[fhDevice],021h,01h,0100h,0001h,26,offset(Negotiate),0
1  3154	000012C2  6A 00				 PUSH	 0
1  3155	000012C4  68 00040EC6r			 PUSH	 OFFSET(NEGOTIATE)
1  3156	000012C9  6A 1A				 PUSH	 26
1  3157	000012CB  6A 01				 PUSH	 0001H
1  3158	000012CD  68 00000100			 PUSH	 0100H
1  3159	000012D2  6A 01				 PUSH	 01H
1  3160	000012D4  6A 21				 PUSH	 021H
1  3161	000012D6  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3162	000012DC  E8 00000000e			 CALL	 USBCTRLMESSAGE
1  3163	000012E1  83 C4	20			 ADD	 ESP,00020h
   3164	000012E4  85 C0			   test	eax,eax	; check	for errors
   3165	000012E6  0F 85	000002DE	   jnz BadObtainThread ; failure
   3166					 ; obtain suggested setting
   3167					   call	UsbCtrlMessage c,[fhDevice],0A1h,81h,0100h,0001h,26,offset(Suggested),0
1  3168	000012EC  6A 00				 PUSH	 0
1  3169	000012EE  68 00040EE0r			 PUSH	 OFFSET(SUGGESTED)
1  3170	000012F3  6A 1A				 PUSH	 26
1  3171	000012F5  6A 01				 PUSH	 0001H
1  3172	000012F7  68 00000100			 PUSH	 0100H
1  3173	000012FC  68 00000081			 PUSH	 81H
1  3174	00001301  68 000000A1			 PUSH	 0A1H
1  3175	00001306  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3176	0000130C  E8 00000000e			 CALL	 USBCTRLMESSAGE
1  3177	00001311  83 C4	20			 ADD	 ESP,00020h
   3178	00001314  85 C0			   test	eax,eax	; check	for errors
   3179	00001316  0F 85	000002AE	   jnz BadObtainThread ; failure
   3180					 ; commit suggested setting
   3181					   call	UsbCtrlMessage c,[fhDevice],021h,01h,0200h,0001h,26,offset(Suggested),0
1  3182	0000131C  6A 00				 PUSH	 0
1  3183	0000131E  68 00040EE0r			 PUSH	 OFFSET(SUGGESTED)
1  3184	00001323  6A 1A				 PUSH	 26
1  3185	00001325  6A 01				 PUSH	 0001H
1  3186	00001327  68 00000200			 PUSH	 0200H
1  3187	0000132C  6A 01				 PUSH	 01H
1  3188	0000132E  6A 21				 PUSH	 021H
1  3189	00001330  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3190	00001336  E8 00000000e			 CALL	 USBCTRLMESSAGE
1  3191	0000133B  83 C4	20			 ADD	 ESP,00020h
   3192	0000133E  85 C0			   test	eax,eax	; check	for errors
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 57
uvcview.asm



   3193	00001340  0F 85	00000284	   jnz BadObtainThread ; failure
   3194					 ; issue set alternative interface
   3195					   call	UsbCtrlMessage c,[fhDevice],001h,0Bh,[AltInterface],[NumInterface],0,0,0
1  3196	00001346  6A 00				 PUSH	 0
1  3197	00001348  6A 00				 PUSH	 0
1  3198	0000134A  6A 00				 PUSH	 0
1  3199	0000134C  FF 35	002EF6BEr		 PUSH	 [NUMINTERFACE]
1  3200	00001352  FF 35	002EF6BAr		 PUSH	 [ALTINTERFACE]
1  3201	00001358  6A 0B				 PUSH	 0BH
1  3202	0000135A  6A 01				 PUSH	 001H
1  3203	0000135C  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3204	00001362  E8 00000000e			 CALL	 USBCTRLMESSAGE
1  3205	00001367  83 C4	20			 ADD	 ESP,00020h
   3206	0000136A  85 C0			   test	eax,eax	; check	for errors
   3207	0000136C  0F 85	00000258	   jnz BadObtainThread ; failure
   3208					 ; open	isochronous transfer
   3209					   call	UsbIsoOpen c,[fhDevice],[AddrEndpoint],[AltInterface],iUsed,[IsoFrameSize]
1  3210	00001372  FF 35	002EF6C6r		 PUSH	 [ISOFRAMESIZE]
1  3211	00001378  6A 04				 PUSH	 IUSED
1  3212	0000137A  FF 35	002EF6BAr		 PUSH	 [ALTINTERFACE]
1  3213	00001380  FF 35	002EF6C2r		 PUSH	 [ADDRENDPOINT]
1  3214	00001386  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3215	0000138C  E8 00000000e			 CALL	 USBISOOPEN
1  3216	00001391  83 C4	14			 ADD	 ESP,00014h
   3217	00001394  85 C0			   test	eax,eax	; check	for errors
   3218	00001396  0F 85	0000022E	   jnz BadObtainThread ; failure
   3219					 ; obtain first	buffer pointer
   3220	0000139C  55			   push	ebp ; save register
   3221	0000139D  A1 00040EBEr		   mov eax,[ObtainPtr] ; current
   3222	000013A2  8B 78	04		   mov edi,[eax+4] ; this buffer
   3223	000013A5  8D AF	00096000	   lea ebp,[edi+Ix*Iy*2] ; end
   3224					 ; set time critical priority
   3225					   call	DosSetPriority c,2,3,31,0
1  3226	000013AB  6A 00				 PUSH	 0
1  3227	000013AD  6A 1F				 PUSH	 31
1  3228	000013AF  6A 03				 PUSH	 3
1  3229	000013B1  6A 02				 PUSH	 2
1  3230	000013B3  E8 00000000e			 CALL	 DOSSETPRIORITY
1  3231	000013B8  83 C4	10			 ADD	 ESP,00010h
   3232	000013BB			 label SupplyIsochronousBuffer near
   3233					 ; address current isochronous buffer
   3234	000013BB  8B 35	00040EFEr	   mov esi,[IsoThis] ; this buffer
   3235					 ; check buffer	completion status
   3236	000013C1  0F B7	86 0000F000	   movzx eax,[word(esi+dSize)]
   3237	000013C8  85 C0			   test	eax,eax	; check	for errors
   3238	000013CA  0F 85	00000130	   jnz NotIsoTransfer ;	failure
   3239					 ; use actual completion sizes
   3240	000013D0  2B DB			   sub ebx,ebx ; frame index
   3241	000013D2			 label NextIsochronousFrame near
   3242	000013D2  A1 00040EFEr		   mov eax,[IsoThis] ; this buffer
   3243	000013D7  0F B7	94 58 0000F004	   movzx edx,[word(eax+ebx*2+dSize+4)]
   3244					 ; process raw video stream
   3245	000013DF  80 3D	00040FBCr 30	   cmp [UseHeader],'0' ; raw
   3246	000013E6  75 16			   jne VerifyHeader ; use
   3247					 ; check for end of write buffer
   3248	000013E8  8D 04	17		   lea eax,[edi+edx] ; predict
   3249	000013EB  3B C5			   cmp eax,ebp ; buffer	boundary
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 58
uvcview.asm



   3250	000013ED  76 07			   jna MoveRawImageData	; fits
   3251					 ; force raw image complete
   3252	000013EF  8B FD			   mov edi,ebp ; buffer	boundary
   3253	000013F1  E9 00000087		   jmp ImageComplete ; forced
   3254	000013F6			 label MoveRawImageData	near
   3255					 ; move	raw isochronous	frame
   3256	000013F6  8B CA			   mov ecx,edx ; frame length
   3257	000013F8  F3> A4		   rep movsb ; frame data
   3258	000013FA  2B F2			   sub esi,edx ; start
   3259	000013FC  EB 67			   jmp BumpToNextFrame
   3260	000013FE			 label VerifyHeader near
   3261					 ; verify header data available
   3262	000013FE  83 FA	0C		   cmp edx,12 ;	header length
   3263	00001401  72 62			   jb BumpToNextFrame ;	skip
   3264					 ; validate payload header
   3265	00001403  8B 06			   mov eax,[esi] ; HLE/BFH[0]
   3266	00001405  3C 0C			   cmp al,12 ; header length
   3267	00001407  75 5C			   jne BumpToNextFrame ; skip
   3268	00001409  80 E4	7C		   and ah,7Ch ;	fixed flags
   3269	0000140C  80 FC	0C		   cmp ah,0Ch ;	check flags
   3270	0000140F  75 54			   jne BumpToNextFrame ; skip
   3271					 ; synchronize video frame
   3272	00001411  8B 46	02		   mov eax,[esi+2] ; pts
   3273	00001414  3B 05	00040F02r	   cmp eax,[pTimeStamp]
   3274	0000141A  74 0B			   je EndRestartFrame
   3275	0000141C  A3 00040F02r		   mov [pTimeStamp],eax
   3276					 ; reset this buffer pointer
   3277	00001421  8D BD	FFF6A000	   lea edi,[ebp-Ix*Iy*2]
   3278	00001427			 label EndRestartFrame near
   3279					 ; check for end of write buffer
   3280	00001427  8D 44	17 F4		   lea eax,[edi+edx-12]	; predict
   3281	0000142B  3B C5			   cmp eax,ebp ; buffer	boundary
   3282	0000142D  76 06			   jna MoveNewImageData	; fits
   3283					 ; reset this buffer pointer
   3284	0000142F  8D BD	FFF6A000	   lea edi,[ebp-Ix*Iy*2]
   3285	00001435			 label MoveNewImageData	near
   3286					 ; move	isochronous frame
   3287	00001435  8B CA			   mov ecx,edx ; frame length
   3288	00001437  8D 49	F4		   lea ecx,[ecx-12] ; header
   3289	0000143A  8D 76	0C		   lea esi,[esi+12] ; header
   3290	0000143D  F3> A4		   rep movsb ; frame data
   3291	0000143F  2B F2			   sub esi,edx ; start
   3292					 ; check for end of frame
   3293	00001441  81 3D	00040FBFr     +	   cmp [StreamFormat],'MJPG'
   3294		  4D4A5047
   3295	0000144B  75 08			   jne EndObtainMJPG ; no
   3296					 ; check for end of image
   3297	0000144D  66| 81 7F FE D9FF	   cmp [word(edi-2)],0D9FFh
   3298	00001453  74 28			   je ImageComplete ; mjpg
   3299	00001455			 label EndObtainMJPG near
   3300					 ; check for end of frame
   3301	00001455  81 3D	00040FBFr     +	   cmp [StreamFormat],'YUYV'
   3302		  59555956
   3303	0000145F  75 04			   jne EndObtainYUYV ; no
   3304					 ; check for end of write buffer
   3305	00001461  3B FD			   cmp edi,ebp ; buffer	boundary
   3306	00001463  74 18			   je ImageComplete ; yuyv
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 59
uvcview.asm



   3307	00001465			 label EndObtainYUYV near
   3308	00001465			 label BumpToNextFrame near
   3309	00001465  43			   inc ebx ; current frame index
   3310	00001466  3B 1D	002EF6CAr	   cmp ebx,[IsoFrameUsed] ; last
   3311	0000146C  0F 83	00000094	   jnb EndIsochronousMove ; queue
   3312	00001472  03 35	002EF6C6r	   add esi,[IsoFrameSize] ; next
   3313	00001478  E9 FFFFFF55		   jmp NextIsochronousFrame
   3314	0000147D			 label ImageComplete near
   3315					 ; update buffer last address used
   3316	0000147D  A1 00040EBEr		   mov eax,[ObtainPtr] ; current
   3317	00001482  89 78	08		   mov [eax+8],edi ; last address
   3318					 ; update currently available image buffers
   3319					   call	DosResetEventSem c,[ObtainImage],offset(ObtainPosts)
1  3320	00001485  68 00000652r			 PUSH	 OFFSET(OBTAINPOSTS)
1  3321	0000148A  FF 35	0000064Er		 PUSH	 [OBTAINIMAGE]
1  3322	00001490  E8 00000000e			 CALL	 DOSRESETEVENTSEM
1  3323	00001495  83 C4	08			 ADD	 ESP,00008h
   3324	00001498  3D 0000012C		   cmp eax,012Ch ; already reset
   3325	0000149D  74 13			   je InspectMinimumCount
   3326	0000149F  85 C0			   test	eax,eax	; check	for errors
   3327	000014A1  0F 85	00000122	   jnz BadIsoTransfer ;	failure
   3328	000014A7  A1 00000652r		   mov eax,[ObtainPosts] ; additional
   3329	000014AC  01 05	00040E92r	   add [ObtainCount],eax ; current
   3330	000014B2			 label InspectMinimumCount near
   3331	000014B2  83 3D	00040E92r 01	   cmp [ObtainCount],1 ; minimum
   3332	000014B9  77 08			   ja DeliverThisBuffer	; available
   3333					 ; overrun so reuse this buffer
   3334					 ; reset this buffer pointer
   3335	000014BB  8D BD	FFF6A000	   lea edi,[ebp-Ix*Iy*2]
   3336	000014C1  EB A2			   jmp BumpToNextFrame
   3337	000014C3			 label DeliverThisBuffer near
   3338					 ; deliver image buffer	to supply thread
   3339					   call	DosPostEventSem	c,[SupplyImage]
1  3340	000014C3  FF 35	00000656r		 PUSH	 [SUPPLYIMAGE]
1  3341	000014C9  E8 00000000e			 CALL	 DOSPOSTEVENTSEM
1  3342	000014CE  83 C4	04			 ADD	 ESP,00004h
   3343	000014D1  3D 0000012B		   cmp eax,012Bh ; already posted
   3344	000014D6  74 08			   je InspectNextObtain	; continue
   3345	000014D8  85 C0			   test	eax,eax	; check	for errors
   3346	000014DA  0F 85	000000E9	   jnz BadIsoTransfer ;	failure
   3347	000014E0			 label InspectNextObtain near
   3348	000014E0  FF 0D	00040E92r	   dec [ObtainCount] ; current
   3349					 ; obtain next buffer pointer
   3350	000014E6  A1 00040EBEr		   mov eax,[ObtainPtr] ; current
   3351	000014EB  8B 00			   mov eax,[eax] ; chain pointer
   3352	000014ED  A3 00040EBEr		   mov [ObtainPtr],eax ; current
   3353	000014F2  8B 78	04		   mov edi,[eax+4] ; this buffer
   3354	000014F5  8D AF	00096000	   lea ebp,[edi+Ix*Iy*2] ; end
   3355	000014FB  E9 FFFFFF65		   jmp BumpToNextFrame
   3356	00001500			 label NotIsoTransfer near
   3357					 ; reset this buffer pointer
   3358	00001500  8D BD	FFF6A000	   lea edi,[ebp-Ix*Iy*2]
   3359	00001506			 label EndIsochronousMove near
   3360					 ; reset iso frame length array
   3361	00001506  A1 002EF6C6r		   mov eax,[IsoFrameSize] ; length
   3362	0000150B  8B 0D	002EF6CAr	   mov ecx,[IsoFrameUsed] ; count
   3363	00001511  8B 35	00040EFEr	   mov esi,[IsoThis] ; this buffer
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 60
uvcview.asm



   3364	00001517			 label ResetIsoFrameLengthArray	near
   3365					 ; reset individual iso	frame lengths
   3366	00001517  66| 89 84 4E	      +	   mov [word(esi+ecx*2+dSize+4-2)],ax
   3367		  0000F002
   3368	0000151F  E2 F6			   loop	ResetIsoFrameLengthArray
   3369					 ; queue next isochronous transfer
   3370	00001521  8D 86	0000F000	   lea eax,[esi+dSize] ; parm buffer pointer
   3371	00001527  66| C7 40 02 F000	   mov [word(eax+2)],dSize ; data buffer size
   3372					   call	UsbStartIsoTransfer c,[fhDevice],[AddrEndpoint],[AltInterface],[IsoEvent],eax,esi,  +
   3373					 [IsoFrameSize],[IsoFrameUsed]
1  3374	0000152D  FF 35	002EF6CAr		 PUSH	 [ISOFRAMEUSED]
1  3375	00001533  FF 35	002EF6C6r		 PUSH	 [ISOFRAMESIZE]
1  3376	00001539  56				 PUSH	 ESI
1  3377	0000153A  50				 PUSH	 EAX
1  3378	0000153B  FF 35	00040E57r		 PUSH	 [ISOEVENT]
1  3379	00001541  FF 35	002EF6BAr		 PUSH	 [ALTINTERFACE]
1  3380	00001547  FF 35	002EF6C2r		 PUSH	 [ADDRENDPOINT]
1  3381	0000154D  FF 35	00000662r		 PUSH	 [FHDEVICE]
1  3382	00001553  E8 00000000e			 CALL	 USBSTARTISOTRANSFER
1  3383	00001558  83 C4	20			 ADD	 ESP,00020h
   3384	0000155B  85 C0			   test	eax,eax	; check	for errors
   3385	0000155D  75 6A			   jnz BadIsoTransfer ;	failure
   3386					 ; update next isochronous buffer pointer
   3387	0000155F  81 05	00040EFEr     +	   add [IsoThis],iSize ; address next buffer
   3388		  00010000
   3389	00001569  81 3D	00040EFEr     +	   cmp [IsoThis],offset(IsoData+tSize)
   3390		  00040000r
   3391	00001573  75 0A			   jne DecrementFreeBuffers ; proper next
   3392	00001575  C7 05	00040EFEr     +	   mov [IsoThis],offset(IsoData) ; first
   3393		  00000000r
   3394	0000157F			 label DecrementFreeBuffers near
   3395	0000157F  FF 0D	00040EFAr	   dec [IsoFree] ; buffers available
   3396	00001585  0F 85	FFFFFE30	   jnz SupplyIsochronousBuffer
   3397					 ; await isochronous buffers filled
   3398					   call	DosWaitEventSem	c,[IsoEvent],3000
1  3399	0000158B  68 00000BB8			 PUSH	 3000
1  3400	00001590  FF 35	00040E57r		 PUSH	 [ISOEVENT]
1  3401	00001596  E8 00000000e			 CALL	 DOSWAITEVENTSEM
1  3402	0000159B  83 C4	08			 ADD	 ESP,00008h
   3403	0000159E  85 C0			   test	eax,eax	; check	for errors
   3404	000015A0  75 27			   jnz BadIsoTransfer ;	failure
   3405					 ; update currently filled isochronous buffers
   3406					   call	DosResetEventSem c,[IsoEvent],offset(IsoPost)
1  3407	000015A2  68 001C2686r			 PUSH	 OFFSET(ISOPOST)
1  3408	000015A7  FF 35	00040E57r		 PUSH	 [ISOEVENT]
1  3409	000015AD  E8 00000000e			 CALL	 DOSRESETEVENTSEM
1  3410	000015B2  83 C4	08			 ADD	 ESP,00008h
   3411	000015B5  85 C0			   test	eax,eax	; check	for errors
   3412	000015B7  75 10			   jnz BadIsoTransfer ;	failure
   3413	000015B9  A1 001C2686r		   mov eax,[IsoPost] ; additional buffers filled
   3414	000015BE  01 05	00040EFAr	   add [IsoFree],eax ; current buffers filled
   3415	000015C4  E9 FFFFFDF2		   jmp SupplyIsochronousBuffer
   3416	000015C9			 label BadIsoTransfer near
   3417	000015C9  5D			   pop ebp ; restore register
   3418	000015CA			 label BadObtainThread near
   3419	000015CA  E8 00000061		   call	ShowReturnCode ; info
   3420					 ; show	appropriate error message
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 61
uvcview.asm



   3421					   call	WinLoadString c,[@@hab],0,03h,244,offset(szMessageText+11)
1  3422	000015CF  68 00000423r			 PUSH	 OFFSET(SZMESSAGETEXT+11)
1  3423	000015D4  68 000000F4			 PUSH	 244
1  3424	000015D9  6A 03				 PUSH	 03H
1  3425	000015DB  6A 00				 PUSH	 0
1  3426	000015DD  FF 75	FC			 PUSH	 [@@HAB]
1  3427	000015E0  E8 00000000e			 CALL	 WINLOADSTRING
1  3428	000015E5  83 C4	14			 ADD	 ESP,00014h
   3429					   call	WinMessageBox c,1,1,offset(szMessageText),offset(szWindowTitle),0,4046h
1  3430	000015E8  68 00004046			 PUSH	 4046H
1  3431	000015ED  6A 00				 PUSH	 0
1  3432	000015EF  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  3433	000015F4  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  3434	000015F9  6A 01				 PUSH	 1
1  3435	000015FB  6A 01				 PUSH	 1
1  3436	000015FD  E8 00000000e			 CALL	 WINMESSAGEBOX
1  3437	00001602  83 C4	18			 ADD	 ESP,00018h
   3438					   call	WinPostQueueMsg	c,[hmq],2Ah,0,0	; WM_QUIT
1  3439	00001605  6A 00				 PUSH	 0
1  3440	00001607  6A 00				 PUSH	 0
1  3441	00001609  6A 2A				 PUSH	 2AH
1  3442	0000160B  FF 35	0000061Ar		 PUSH	 [HMQ]
1  3443	00001611  E8 00000000e			 CALL	 WINPOSTQUEUEMSG
1  3444	00001616  83 C4	10			 ADD	 ESP,00010h
   3445	00001619			 label EndObtainMsgQueue near
   3446					   call	WinTerminate c,[@@hab]
1  3447	00001619  FF 75	FC			 PUSH	 [@@HAB]
1  3448	0000161C  E8 00000000e			 CALL	 WINTERMINATE
1  3449	00001621  83 C4	04			 ADD	 ESP,00004h
   3450	00001624			 label EndObtainThread near
   3451					 ; exit	the obtain thread
   3452					   call	DosExit	c,0,0
1  3453	00001624  6A 00				 PUSH	 0
1  3454	00001626  6A 00				 PUSH	 0
1  3455	00001628  E8 00000000e			 CALL	 DOSEXIT
1  3456	0000162D  83 C4	08			 ADD	 ESP,00008h
   3457	00001630			 endp ObtainThread
   3458
   3459	00001630			 dataseg
   3460	00040F06  30 31	32 33 34 35 36+	 hex2ascii db '0123456789ABCDEF'
   3461		  37 38	39 41 42 43 44+
   3462		  45 46
   3463
   3464	00040F16			 codeseg
   3465	00001630			 proc ShowReturnCode near
   3466	00001630  60			   pusha ; save	registers
   3467					 ; prepare message text
   3468	00001631  BF 00000418r		   lea edi,[szMessageText]
   3469	00001636  C6 47	0A 20		   mov [byte(edi+0Ah)],' '
   3470	0000163A  C6 47	09 5D		   mov [byte(edi+09h)],']'
   3471	0000163E  C6 07	5B		   mov [byte(edi)],'['
   3472					 ; convert return code
   3473	00001641  2B C9			   sub ecx,ecx ; count
   3474	00001643  2B D2			   sub edx,edx ; index
   3475	00001645  B1 08			   mov cl,08h ;	digits
   3476	00001647			 label ConvertDigit near
   3477	00001647  8A D0			   mov dl,al ; one byte
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 62
uvcview.asm



   3478	00001649  80 E2	0F		   and dl,0Fh ;	hex digit
   3479	0000164C  8A 92	00040F06r	   mov dl,[hex2ascii+edx]
   3480	00001652  88 14	0F		   mov [edi+ecx],dl ; ascii
   3481	00001655  C1 E8	04		   shr eax,4 ; next one
   3482	00001658  E2 ED			   loop	ConvertDigit
   3483	0000165A  61			   popa	; restore
   3484	0000165B  C3			   ret ; return
   3485	0000165C			 endp ShowReturnCode
   3486
   3487	0000165C			 udataseg
   3488	001C268A  04B000*(??)		 outBuffer db Ix*Iy*1 dup(?)
   3489	0020D68A  0E1000*(??)		 rgbBuffer db Ix*Iy*3 dup(?)
   3490
   3491	002EE68A			 dataseg
   3492	00040F16  75 76	63 76 69 65 77+	 RexxFile db 'uvcview.cmd',0
   3493		  2E 63	6D 64 00
   3494
   3495	00040F22			 udataseg
   3496	002EE68A  ???????? ????????	 ArgList dd ?,?
   3497	002EE692  ????????		 ReturnCode dd ?
   3498	002EE696  ???????? ????????	 Result	dd ?,?
   3499
   3500	002EE69E			 codeseg
   3501	0000165C			 proc SupplyThread c near
   3502					 arg @@parameter:dword
   3503					 local @@hab:dword
   3504					 local @@hmq:dword
   3505					 ; obtain anchor block handle
1  3506	0000165C  C8 0008 00			 ENTERD	 00008h,0
1  3507					   call	WinInitialize c,0
2  3508	00001660  6A 00				 PUSH	 0
2  3509	00001662  E8 00000000e			 CALL	 WININITIALIZE
2  3510	00001667  83 C4	04			 ADD	 ESP,00004h
   3511	0000166A  85 C0			   test	eax,eax	; success
   3512	0000166C  0F 84	00000205	   jz EndSupplyThread
   3513	00001672  89 45	FC		   mov [@@hab],eax ; save
   3514					 ; obtain message queue	handle
   3515					   call	WinCreateMsgQueue c,[@@hab],0
1  3516	00001675  6A 00				 PUSH	 0
1  3517	00001677  FF 75	FC			 PUSH	 [@@HAB]
1  3518	0000167A  E8 00000000e			 CALL	 WINCREATEMSGQUEUE
1  3519	0000167F  83 C4	08			 ADD	 ESP,00008h
   3520	00001682  85 C0			   test	eax,eax	; success
   3521	00001684  0F 84	000001E2	   jz EndSupplyMsgQueue
   3522	0000168A  89 45	F8		   mov [@@hmq],eax ; save
   3523	0000168D  55			   push	ebp ; save register
   3524	0000168E			 label InspectNextSupply near
   3525	0000168E  FF 0D	00040E96r	   dec [SupplyCount] ; available
   3526	00001694  75 3E			   jnz ProcessNextSupply ; yes
   3527					 ; await supply	image semaphore
   3528					   call	DosWaitEventSem	c,[SupplyImage],-1
1  3529	00001696  6A FF				 PUSH	 -1
1  3530	00001698  FF 35	00000656r		 PUSH	 [SUPPLYIMAGE]
1  3531	0000169E  E8 00000000e			 CALL	 DOSWAITEVENTSEM
1  3532	000016A3  83 C4	08			 ADD	 ESP,00008h
   3533	000016A6  85 C0			   test	eax,eax	; check	for errors
   3534	000016A8  0F 85	0000016E	   jnz BadSupplyThread ; failure
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 63
uvcview.asm



   3535					 ; update currently available image buffers
   3536					   call	DosResetEventSem c,[SupplyImage],offset(SupplyPosts)
1  3537	000016AE  68 0000065Ar			 PUSH	 OFFSET(SUPPLYPOSTS)
1  3538	000016B3  FF 35	00000656r		 PUSH	 [SUPPLYIMAGE]
1  3539	000016B9  E8 00000000e			 CALL	 DOSRESETEVENTSEM
1  3540	000016BE  83 C4	08			 ADD	 ESP,00008h
   3541	000016C1  85 C0			   test	eax,eax	; check	for errors
   3542	000016C3  0F 85	00000153	   jnz BadSupplyThread ; failure
   3543	000016C9  A1 0000065Ar		   mov eax,[SupplyPosts] ; additional buffers available
   3544	000016CE  01 05	00040E96r	   add [SupplyCount],eax ; buffers available
   3545	000016D4			 label ProcessNextSupply near
   3546					 ; obtain next buffer pointer
   3547	000016D4  A1 00040EC2r		   mov eax,[SupplyPtr] ; current
   3548	000016D9  8B 00			   mov eax,[eax] ; chain pointer
   3549	000016DB  A3 00040EC2r		   mov [SupplyPtr],eax ; current
   3550	000016E0  8B 78	08		   mov edi,[eax+8] ; last address
   3551	000016E3  8B 70	04		   mov esi,[eax+4] ; this buffer
   3552					 ; take	usb camera testshot
   3553	000016E6  80 3D	00040E91r 02	   cmp [SnapShot],2 ; take
   3554	000016ED  75 0C			   jne EndTakeTestShot ; no
   3555	000016EF  C6 05	00040E91r 00	   mov [SnapShot],0 ; done
   3556					 ; write usb camera jpeg image
   3557	000016F6  E8 00000208		   call	out2raw	; webview.raw
   3558	000016FB			 label EndTakeTestShot near
   3559					 ; check for end of frame
   3560	000016FB  81 3D	00040FBFr     +	   cmp [StreamFormat],'MJPG'
   3561		  4D4A5047
   3562	00001705  75 31			   jne EndSupplyMJPG ; no
   3563					 ; verify mjpg image present
   3564	00001707  81 3E	E0FFD8FF	   cmp [dword(esi)],0E0FFD8FFh
   3565	0000170D  0F 85	000000E8	   jne SyncReset ; skip
   3566	00001713  66| 81 7F FE D9FF	   cmp [word(edi-2)],0D9FFh
   3567	00001719  0F 85	000000DC	   jne SyncReset ; skip
   3568					 ; make	rgb from mjpg
   3569	0000171F  C6 05	00040A64r 01	   mov [GoodImage],1
   3570	00001726  E8 FFFFF1E6		   call	jpg2rgb
   3571	0000172B  80 3D	00040A64r 01	   cmp [GoodImage],1
   3572	00001732  0F 85	000000C3	   jne SyncReset
   3573	00001738			 label EndSupplyMJPG near
   3574					 ; check for end of frame
   3575	00001738  81 3D	00040FBFr     +	   cmp [StreamFormat],'YUYV'
   3576		  59555956
   3577	00001742  75 13			   jne EndSupplyYUYV ; no
   3578					 ; verify yuyv image complete
   3579	00001744  8D 86	00096000	   lea eax,[esi+Ix*Iy*2]
   3580	0000174A  3B C7			   cmp eax,edi ; complete
   3581	0000174C  0F 85	000000A9	   jne SyncReset ; skip
   3582					 ; make	rgb from yuyv
   3583	00001752  E8 000001FC		   call	yuyv2rgb ; rgb
   3584	00001757			 label EndSupplyYUYV near
   3585					 ; trigger presentation	manager	screen update
   3586					   call	WinInvalidateRect c,[hwndClient],0,0
1  3587	00001757  6A 00				 PUSH	 0
1  3588	00001759  6A 00				 PUSH	 0
1  3589	0000175B  FF 35	0000061Er		 PUSH	 [HWNDCLIENT]
1  3590	00001761  E8 00000000e			 CALL	 WININVALIDATERECT
1  3591	00001766  83 C4	0C			 ADD	 ESP,0000Ch
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 64
uvcview.asm



   3592	00001769  85 C0			   test	eax,eax	; check	for errors
   3593	0000176B  0F 84	000000AB	   jz BadSupplyThread ;	failure
   3594					 ; take	usb camera snapshot
   3595	00001771  80 3D	00040E91r 01	   cmp [SnapShot],1 ; take
   3596	00001778  0F 85	0000007D	   jne SyncReset ; continue
   3597	0000177E  C6 05	00040E91r 00	   mov [SnapShot],0 ; done
   3598					 ; write usb camera bmap image
   3599	00001785  E8 000000F9		   call	rgb2bmp	; usbcam.bmp
   3600					 ; write usb camera jpeg image
   3601	0000178A  E8 FFFFF362		   call	rgb2jpg	; usbcam.jpg
   3602					 ; invoke rexx post processing
   3603					   call	RexxStart c,1,offset(ArgList),offset(RexxFile),0,0,0,0,offset(ReturnCode),offset    +
   3604					 (Result)
1  3605	0000178F  68 002EE696r			 PUSH	 OFFSET(RESULT)
1  3606	00001794  68 002EE692r			 PUSH	 OFFSET(RETURNCODE)
1  3607	00001799  6A 00				 PUSH	 0
1  3608	0000179B  6A 00				 PUSH	 0
1  3609	0000179D  6A 00				 PUSH	 0
1  3610	0000179F  6A 00				 PUSH	 0
1  3611	000017A1  68 00040F16r			 PUSH	 OFFSET(REXXFILE)
1  3612	000017A6  68 002EE68Ar			 PUSH	 OFFSET(ARGLIST)
1  3613	000017AB  6A 01				 PUSH	 1
1  3614	000017AD  E8 00000000e			 CALL	 REXXSTART
1  3615	000017B2  83 C4	24			 ADD	 ESP,00024h
   3616	000017B5  85 C0			   test	eax,eax	; return code
   3617	000017B7  75 42			   jnz EndFreeString ; failure
   3618					 ; handle exit/return value
   3619	000017B9  8B 3D	002EE69Ar	   mov edi,[Result+4] ;	buffer
   3620	000017BF  85 FF			   test	edi,edi	; allocated
   3621	000017C1  74 38			   jz EndFreeString ; no
   3622					 ; show	exit/return string
   3623	000017C3  3B 05	002EE696r	   cmp eax,[Result] ; empty
   3624	000017C9  74 1E			   je EndShowString ; yes
   3625	000017CB  A3 002EE696r		   mov [Result],eax ; empty
   3626					   call	WinMessageBox c,1,1,edi,offset(szWindowTitle),0,4030h
1  3627	000017D0  68 00004030			 PUSH	 4030H
1  3628	000017D5  6A 00				 PUSH	 0
1  3629	000017D7  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  3630	000017DC  57				 PUSH	 EDI
1  3631	000017DD  6A 01				 PUSH	 1
1  3632	000017DF  6A 01				 PUSH	 1
1  3633	000017E1  E8 00000000e			 CALL	 WINMESSAGEBOX
1  3634	000017E6  83 C4	18			 ADD	 ESP,00018h
   3635	000017E9			 label EndShowString near
   3636					 ; free	allocated storage
   3637					   call	DosFreeMem c,edi
1  3638	000017E9  57				 PUSH	 EDI
1  3639	000017EA  E8 00000000e			 CALL	 DOSFREEMEM
1  3640	000017EF  83 C4	04			 ADD	 ESP,00004h
   3641	000017F2  85 C0			   test	eax,eax	; any errors
   3642	000017F4  75 05			   jnz EndFreeString ; failure
   3643	000017F6  A3 002EE69Ar		   mov [Result+4],eax ;	free
   3644	000017FB			 label EndFreeString near
   3645	000017FB			 label SyncReset near
   3646					 ; deliver buffer to obtain thread
   3647					   call	DosPostEventSem	c,[ObtainImage]
1  3648	000017FB  FF 35	0000064Er		 PUSH	 [OBTAINIMAGE]
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 65
uvcview.asm



1  3649	00001801  E8 00000000e			 CALL	 DOSPOSTEVENTSEM
1  3650	00001806  83 C4	04			 ADD	 ESP,00004h
   3651	00001809  3D 0000012B		   cmp eax,012Bh ; already posted
   3652	0000180E  0F 84	FFFFFE7A	   je InspectNextSupply	; continue
   3653	00001814  85 C0			   test	eax,eax	; check	for errors
   3654	00001816  0F 84	FFFFFE72	   jz InspectNextSupply	; continue
   3655	0000181C			 label BadSupplyThread near
   3656	0000181C  5D			   pop ebp ; restore register
   3657	0000181D  E8 FFFFFE0E		   call	ShowReturnCode ; info
   3658					 ; show	appropriate error message
   3659					   call	WinLoadString c,[@@hab],0,04h,244,offset(szMessageText+11)
1  3660	00001822  68 00000423r			 PUSH	 OFFSET(SZMESSAGETEXT+11)
1  3661	00001827  68 000000F4			 PUSH	 244
1  3662	0000182C  6A 04				 PUSH	 04H
1  3663	0000182E  6A 00				 PUSH	 0
1  3664	00001830  FF 75	FC			 PUSH	 [@@HAB]
1  3665	00001833  E8 00000000e			 CALL	 WINLOADSTRING
1  3666	00001838  83 C4	14			 ADD	 ESP,00014h
   3667					   call	WinMessageBox c,1,1,offset(szMessageText),offset(szWindowTitle),0,4046h
1  3668	0000183B  68 00004046			 PUSH	 4046H
1  3669	00001840  6A 00				 PUSH	 0
1  3670	00001842  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  3671	00001847  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  3672	0000184C  6A 01				 PUSH	 1
1  3673	0000184E  6A 01				 PUSH	 1
1  3674	00001850  E8 00000000e			 CALL	 WINMESSAGEBOX
1  3675	00001855  83 C4	18			 ADD	 ESP,00018h
   3676					   call	WinPostQueueMsg	c,[hmq],2Ah,0,0	; WM_QUIT
1  3677	00001858  6A 00				 PUSH	 0
1  3678	0000185A  6A 00				 PUSH	 0
1  3679	0000185C  6A 2A				 PUSH	 2AH
1  3680	0000185E  FF 35	0000061Ar		 PUSH	 [HMQ]
1  3681	00001864  E8 00000000e			 CALL	 WINPOSTQUEUEMSG
1  3682	00001869  83 C4	10			 ADD	 ESP,00010h
   3683	0000186C			 label EndSupplyMsgQueue near
   3684					   call	WinTerminate c,[@@hab]
1  3685	0000186C  FF 75	FC			 PUSH	 [@@HAB]
1  3686	0000186F  E8 00000000e			 CALL	 WINTERMINATE
1  3687	00001874  83 C4	04			 ADD	 ESP,00004h
   3688	00001877			 label EndSupplyThread near
   3689					 ; exit	the supply thread
   3690					   call	DosExit	c,0,0
1  3691	00001877  6A 00				 PUSH	 0
1  3692	00001879  6A 00				 PUSH	 0
1  3693	0000187B  E8 00000000e			 CALL	 DOSEXIT
1  3694	00001880  83 C4	08			 ADD	 ESP,00008h
   3695	00001883			 endp SupplyThread
   3696
   3697	00001883			 dataseg
   3698	00040F22  4D42 0000 0000 0000 +	 bmpFileHeader dw 4D42h,0,0,0,0,14+12,0,12,0,Ix,Iy,1,24
   3699		  0000 001A 0000 000C +
   3700		  0000 0280 01E0 0001 +
   3701		  0018
   3702	00040F3C  75 76	63 76 69 65 77+	 szOutput db 'uvcview.bmp',0
   3703		  2E 62	6D 70 00
   3704
   3705	00040F48			 udataseg
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 66
uvcview.asm



   3706	002EE69E  ????????		 BytesDone dd ?
   3707	002EE6A2  ????????		 fhOutput dd ?
   3708
   3709	002EE6A6			 codeseg
   3710	00001883			 proc rgb2bmp near
   3711					 ; write usb camera bitmap file
   3712	00001883  C7 05	00040F24r     +	   mov [dword(bmpFileHeader)+2],14+12+Ix*Iy*3 ;	file size
   3713		  000E101A
   3714					   call	DosOpen	c,offset(szOutput),offset(fhOutput),offset(ActionTaken),0,0,012h,0191h,0
1  3715	0000188D  6A 00				 PUSH	 0
1  3716	0000188F  68 00000191			 PUSH	 0191H
1  3717	00001894  6A 12				 PUSH	 012H
1  3718	00001896  6A 00				 PUSH	 0
1  3719	00001898  6A 00				 PUSH	 0
1  3720	0000189A  68 0000065Er			 PUSH	 OFFSET(ACTIONTAKEN)
1  3721	0000189F  68 002EE6A2r			 PUSH	 OFFSET(FHOUTPUT)
1  3722	000018A4  68 00040F3Cr			 PUSH	 OFFSET(SZOUTPUT)
1  3723	000018A9  E8 00000000e			 CALL	 DOSOPEN
1  3724	000018AE  83 C4	20			 ADD	 ESP,00020h
   3725	000018B1  85 C0			   test	eax,eax	; check	for errors
   3726	000018B3  75 4D			   jnz NotBitmap ; failure
   3727					   call	DosWrite c,[fhOutput],offset(bmpFileHeader),14+12,offset(BytesDone)
1  3728	000018B5  68 002EE69Er			 PUSH	 OFFSET(BYTESDONE)
1  3729	000018BA  6A 1A				 PUSH	 14+12
1  3730	000018BC  68 00040F22r			 PUSH	 OFFSET(BMPFILEHEADER)
1  3731	000018C1  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
1  3732	000018C7  E8 00000000e			 CALL	 DOSWRITE
1  3733	000018CC  83 C4	10			 ADD	 ESP,00010h
   3734	000018CF  85 C0			   test	eax,eax	; check	for errors
   3735	000018D1  75 21			   jnz EndBitmap ; failure
   3736					   call	DosWrite c,[fhOutput],offset(rgbBuffer),Ix*Iy*3,offset(BytesDone)
1  3737	000018D3  68 002EE69Er			 PUSH	 OFFSET(BYTESDONE)
1  3738	000018D8  68 000E1000			 PUSH	 IX*IY*3
1  3739	000018DD  68 0020D68Ar			 PUSH	 OFFSET(RGBBUFFER)
1  3740	000018E2  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
1  3741	000018E8  E8 00000000e			 CALL	 DOSWRITE
1  3742	000018ED  83 C4	10			 ADD	 ESP,00010h
   3743	000018F0  85 C0			   test	eax,eax	; check	for errors
   3744	000018F2  75 00			   jnz EndBitmap ; failure
   3745	000018F4			 label EndBitmap near
   3746					 ; close bmp output file
   3747					   call	DosClose c,[fhOutput]
1  3748	000018F4  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
1  3749	000018FA  E8 00000000e			 CALL	 DOSCLOSE
1  3750	000018FF  83 C4	04			 ADD	 ESP,00004h
   3751	00001902			 label NotBitmap near
   3752	00001902  C3			   ret ; return
   3753	00001903			 endp rgb2bmp
   3754
   3755	00001903			 dataseg
   3756	00040F48  75 76	63 76 69 65 77+	 zsOutput db 'uvcview.raw',0
   3757		  2E 72	61 77 00
   3758
   3759	00040F54			 codeseg
   3760	00001903			 proc out2raw near
   3761					 ; write usb camera jpeg file
   3762					   call	DosOpen	c,offset(zsOutput),offset(fhOutput),offset(ActionTaken),0,0,012h,0191h,0
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 67
uvcview.asm



1  3763	00001903  6A 00				 PUSH	 0
1  3764	00001905  68 00000191			 PUSH	 0191H
1  3765	0000190A  6A 12				 PUSH	 012H
1  3766	0000190C  6A 00				 PUSH	 0
1  3767	0000190E  6A 00				 PUSH	 0
1  3768	00001910  68 0000065Er			 PUSH	 OFFSET(ACTIONTAKEN)
1  3769	00001915  68 002EE6A2r			 PUSH	 OFFSET(FHOUTPUT)
1  3770	0000191A  68 00040F48r			 PUSH	 OFFSET(ZSOUTPUT)
1  3771	0000191F  E8 00000000e			 CALL	 DOSOPEN
1  3772	00001924  83 C4	20			 ADD	 ESP,00020h
   3773	00001927  85 C0			   test	eax,eax	; check	for errors
   3774	00001929  75 27			   jnz NotOutput ; failure
   3775	0000192B  8B C7			   mov eax,edi ; after
   3776	0000192D  2B C6			   sub eax,esi ; start
   3777					   call	DosWrite c,[fhOutput],esi,eax,offset(BytesDone)
1  3778	0000192F  68 002EE69Er			 PUSH	 OFFSET(BYTESDONE)
1  3779	00001934  50				 PUSH	 EAX
1  3780	00001935  56				 PUSH	 ESI
1  3781	00001936  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
1  3782	0000193C  E8 00000000e			 CALL	 DOSWRITE
1  3783	00001941  83 C4	10			 ADD	 ESP,00010h
   3784					 ; close raw output file
   3785					   call	DosClose c,[fhOutput]
1  3786	00001944  FF 35	002EE6A2r		 PUSH	 [FHOUTPUT]
1  3787	0000194A  E8 00000000e			 CALL	 DOSCLOSE
1  3788	0000194F  83 C4	04			 ADD	 ESP,00004h
   3789	00001952			 label NotOutput near
   3790	00001952  C3			   ret ; return
   3791	00001953			 endp out2raw
   3792
   3793	00001953			 dataseg
   3794	00040F54  00000003		 ColorIndex dd 3 ; default
   3795					 ; ITU-R BT.601	- SDTV standard
   3796					 ; precalculated yuyv2rgb coefficients
   3797					 ; y=000..255,u=000..255,v=000..255
   3798	00040F58  01000000		 ayc0 dd 16777216 ; 1.00000000*2E24
   3799	00040F5C  01C3D70A		 buc0 dd 29611786 ; 1.765*2E24
   3800	00040F60  0057CED9		 guc0 dd 05754585 ; 0.343*2E24
   3801	00040F64  00B60418		 gvc0 dd 11928600 ; 0.711*2E24
   3802	00040F68  01666666		 rvc0 dd 23488102 ; 1.400*2E24
   3803	00040F6C  00000000		 yzc0 dd 00000000 ; yMin=000
   3804					 ; ITU-R BT.601	- SDTV standard
   3805					 ; precalculated yuyv2rgb coefficients
   3806					 ; y=016..240,u=016..240,v=016..240
   3807	00040F70  01249249		 ayc1 dd 19173961 ; 1.14285714*2E24
   3808	00040F74  02045A1D		 buc1 dd 33839645 ; 2.017*2E24
   3809	00040F78  00645A1D		 guc1 dd 06576669 ; 0.392*2E24
   3810	00040F7C  00D020C5		 gvc1 dd 13639877 ; 0.813*2E24
   3811	00040F80  01989375		 rvc1 dd 26776437 ; 1.596*2E24
   3812	00040F84  00000010		 yzc1 dd 00000016 ; yMin=016
   3813					 ; ITU-R BT.601	- SDTV standard
   3814					 ; precalculated yuyv2rgb coefficients
   3815					 ; y=016..235,u=016..240,v=016..240
   3816	00040F88  012A150B		 ayc2 dd 19535115 ; 1.16438356*2E24
   3817	00040F8C  02045A1D		 buc2 dd 33839645 ; 2.017*2E24
   3818	00040F90  00645A1D		 guc2 dd 06576669 ; 0.392*2E24
   3819	00040F94  00D020C5		 gvc2 dd 13639877 ; 0.813*2E24
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 68
uvcview.asm



   3820	00040F98  01989375		 rvc2 dd 26776437 ; 1.596*2E24
   3821	00040F9C  00000010		 yzc2 dd 00000016 ; yMin=016
   3822					 ; ITU-R BT.709	- HDTV standard
   3823					 ; precalculated yuyv2rgb coefficients
   3824					 ; y=016..235,u=016..240,v=016..240
   3825	00040FA0  012A150B		 ayc dd	19535115 ; 1.16438356*2E24
   3826	00040FA4  021CAC08		 buc dd	35433480 ; 2.112*2E24
   3827	00040FA8  0036872B		 guc dd	03573547 ; 0.213*2E24
   3828	00040FAC  008872B0		 gvc dd	08942256 ; 0.533*2E24
   3829	00040FB0  01CB020C		 rvc dd	30081548 ; 1.793*2E24
   3830	00040FB4  00000010		 yzc dd	00000016 ; yMin=016
   3831
   3832	00040FB8			 codeseg
   3833	00001953			 proc yuyv2rgb near
   3834					 ; convert yuyv	to rgb
   3835	00001953  BF 002EE68Ar		   mov edi,offset(rgbBuffer+Ix*Iy*3)
   3836	00001958			 label ConvertThisLine near
   3837	00001958  B9 00000140		   mov ecx,Ix/2	; dwords
   3838					 ; update line pointer
   3839	0000195D  8D BF	FFFFF880	   lea edi,[edi-Ix*3]
   3840					 ; convert yuyv	to rgb
   3841	00001963			 label ConvertPixels near
   3842					 ; calculate 1st Y value
   3843	00001963  0F B6	16		   movzx edx,[byte(esi)+0]
   3844	00001966  A1 00040FA0r		   mov eax,[ayc] ; ayf*2E24
   3845	0000196B  2B 15	00040FB4r	   sub edx,[yzc] ; (Y-Z)*2E0
   3846	00001971  C1 E2	10		   shl edx,16 ;	(Y-Z)*2E16
   3847	00001974  F7 E2			   mul edx ; ayf*(Y-Z)*2E8
   3848	00001976  8B EA			   mov ebp,edx ; retain
   3849					 ; calculate 2nd Y value
   3850	00001978  0F B6	56 02		   movzx edx,[byte(esi)+2]
   3851	0000197C  A1 00040FA0r		   mov eax,[ayc] ; ayf*2E24
   3852	00001981  2B 15	00040FB4r	   sub edx,[yzc] ; (Y-Z)*2E0
   3853	00001987  C1 E2	10		   shl edx,16 ;	(Y-Z)*2E16
   3854	0000198A  F7 E2			   mul edx ; ayf*(Y-Z)*2E8
   3855	0000198C  8B DA			   mov ebx,edx ; retain
   3856					 ; calculate 1st U value
   3857	0000198E  0F B6	56 01		   movzx edx,[byte(esi)+1]
   3858	00001992  A1 00040FA4r		   mov eax,[buc] ; buf*2E24
   3859	00001997  81 EA	00000080	   sub edx,80h ; (U-80h)*2E0
   3860	0000199D  C1 E2	10		   shl edx,16 ;	(U-80h)*2E16
   3861	000019A0  F7 EA			   imul	edx ; buf*(U-80h)*2E8
   3862					 ; calculate 1st B value
   3863	000019A2  8B C5			   mov eax,ebp ; 1st Y*2E8
   3864	000019A4  03 C2			   add eax,edx ; 1st B*2E8
   3865	000019A6  C1 F8	08		   sar eax,8 ; keep 8 bits
   3866	000019A9  83 D0	00		   adc eax,0 ; round result
   3867	000019AC  84 E4			   test	ah,ah ;	validate
   3868	000019AE  74 06			   jz Store1stB	; correct
   3869	000019B0  B0 00			   mov al,000h ; minimum
   3870	000019B2  78 02			   js Store1stB	; correct
   3871	000019B4  B0 FF			   mov al,0FFh ; maximum
   3872	000019B6			 label Store1stB near
   3873	000019B6  88 07			   mov [byte(edi+0)],al
   3874					 ; calculate 2nd B value
   3875	000019B8  8B C3			   mov eax,ebx ; 2nd Y*2E8
   3876	000019BA  03 C2			   add eax,edx ; 2nd B*2E8
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 69
uvcview.asm



   3877	000019BC  C1 F8	08		   sar eax,8 ; keep 8 bits
   3878	000019BF  83 D0	00		   adc eax,0 ; round result
   3879	000019C2  84 E4			   test	ah,ah ;	validate
   3880	000019C4  74 06			   jz Store2ndB	; correct
   3881	000019C6  B0 00			   mov al,000h ; minimum
   3882	000019C8  78 02			   js Store2ndB	; correct
   3883	000019CA  B0 FF			   mov al,0FFh ; maximum
   3884	000019CC			 label Store2ndB near
   3885	000019CC  88 47	03		   mov [byte(edi+3)],al
   3886					 ; calculate 2nd V value
   3887	000019CF  0F B6	56 03		   movzx edx,[byte(esi)+3]
   3888	000019D3  A1 00040FB0r		   mov eax,[rvc] ; rvf*2E24
   3889	000019D8  81 EA	00000080	   sub edx,80h ; (V-80h)*2E0
   3890	000019DE  C1 E2	10		   shl edx,16 ;	(V-80h)*2E16
   3891	000019E1  F7 EA			   imul	edx ; rvf*(V-80h)*2E8
   3892					 ; calculate 1st R value
   3893	000019E3  8B C5			   mov eax,ebp ; 1st Y*2E8
   3894	000019E5  03 C2			   add eax,edx ; 1st R*2E8
   3895	000019E7  C1 F8	08		   sar eax,8 ; keep 8 bits
   3896	000019EA  83 D0	00		   adc eax,0 ; round result
   3897	000019ED  84 E4			   test	ah,ah ;	validate
   3898	000019EF  74 06			   jz Store1stR	; correct
   3899	000019F1  B0 00			   mov al,000h ; minimum
   3900	000019F3  78 02			   js Store1stR	; correct
   3901	000019F5  B0 FF			   mov al,0FFh ; maximum
   3902	000019F7			 label Store1stR near
   3903	000019F7  88 47	02		   mov [byte(edi+2)],al
   3904					 ; calculate 2nd R value
   3905	000019FA  8B C3			   mov eax,ebx ; 2nd Y*2E8
   3906	000019FC  03 C2			   add eax,edx ; 2nd R*2E8
   3907	000019FE  C1 F8	08		   sar eax,8 ; keep 8 bits
   3908	00001A01  83 D0	00		   adc eax,0 ; round result
   3909	00001A04  84 E4			   test	ah,ah ;	validate
   3910	00001A06  74 06			   jz Store2ndR	; correct
   3911	00001A08  B0 00			   mov al,000h ; minimum
   3912	00001A0A  78 02			   js Store2ndR	; correct
   3913	00001A0C  B0 FF			   mov al,0FFh ; maximum
   3914	00001A0E			 label Store2ndR near
   3915	00001A0E  88 47	05		   mov [byte(edi+5)],al
   3916					 ; calculate 2nd U value
   3917	00001A11  0F B6	56 01		   movzx edx,[byte(esi)+1]
   3918	00001A15  A1 00040FA8r		   mov eax,[guc] ; guf*2E24
   3919	00001A1A  81 EA	00000080	   sub edx,80h ; (U-80h)*2E0
   3920	00001A20  C1 E2	10		   shl edx,16 ;	(U-80h)*2E16
   3921	00001A23  F7 EA			   imul	edx ; guf*(U-80h)*2E8
   3922					 ; calculate 1st G value
   3923	00001A25  2B EA			   sub ebp,edx ; 1st G*2E8
   3924					 ; calculate 2nd G value
   3925	00001A27  2B DA			   sub ebx,edx ; 2nd G*2E8
   3926					 ; calculate 1st V value
   3927	00001A29  0F B6	56 03		   movzx edx,[byte(esi)+3]
   3928	00001A2D  A1 00040FACr		   mov eax,[gvc] ; gvf*2E24
   3929	00001A32  81 EA	00000080	   sub edx,80h ; (V-80h)*2E0
   3930	00001A38  C1 E2	10		   shl edx,16 ;	(V-80h)*2E16
   3931	00001A3B  F7 EA			   imul	edx ; gvf*(V-80h)*2E8
   3932					 ; calculate 1st G value
   3933	00001A3D  8B C5			   mov eax,ebp ; 1st G*2E8
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 70
uvcview.asm



   3934	00001A3F  2B C2			   sub eax,edx ; 1st G*2E8
   3935	00001A41  C1 F8	08		   sar eax,8 ; keep 8 bits
   3936	00001A44  83 D0	00		   adc eax,0 ; round result
   3937	00001A47  84 E4			   test	ah,ah ;	validate
   3938	00001A49  74 06			   jz Store1stG	; correct
   3939	00001A4B  B0 00			   mov al,000h ; minimum
   3940	00001A4D  78 02			   js Store1stG	; correct
   3941	00001A4F  B0 FF			   mov al,0FFh ; maximum
   3942	00001A51			 label Store1stG near
   3943	00001A51  88 47	01		   mov [byte(edi+1)],al
   3944					 ; calculate 2nd G value
   3945	00001A54  8B C3			   mov eax,ebx ; 2nd G*2E8
   3946	00001A56  2B C2			   sub eax,edx ; 2nd G*2E8
   3947	00001A58  C1 F8	08		   sar eax,8 ; keep 8 bits
   3948	00001A5B  83 D0	00		   adc eax,0 ; round result
   3949	00001A5E  84 E4			   test	ah,ah ;	validate
   3950	00001A60  74 06			   jz Store2ndG	; correct
   3951	00001A62  B0 00			   mov al,000h ; minimum
   3952	00001A64  78 02			   js Store2ndG	; correct
   3953	00001A66  B0 FF			   mov al,0FFh ; maximum
   3954	00001A68			 label Store2ndG near
   3955	00001A68  88 47	04		   mov [byte(edi+4)],al
   3956					 ; update pixel	pointers
   3957	00001A6B  8D 76	04		   lea esi,[esi+4] ; yuuv
   3958	00001A6E  8D 7F	06		   lea edi,[edi+6] ; rgb
   3959					 ; loop	till line complete
   3960	00001A71  49			   dec ecx ; next dword
   3961	00001A72  0F 85	FFFFFEEB	   jnz ConvertPixels
   3962					 ; loop	till image complete
   3963	00001A78  8D BF	FFFFF880	   lea edi,[edi-Ix*3] ;	line
   3964	00001A7E  81 FF	0020D68Ar	   cmp edi,offset(rgbBuffer)
   3965	00001A84  0F 83	FFFFFECE	   jnb ConvertThisLine
   3966	00001A8A  C3			   ret ; return
   3967	00001A8B			 endp yuyv2rgb
   3968
   3969	00001A8B			 codeseg
   3970	00001A8B			 proc dec2bin near
   3971					 ; decimal to binary
   3972	00001A8B  2B C0			   sub eax,eax ; input
   3973	00001A8D  2B D2			   sub edx,edx ; output
   3974	00001A8F			 label ConvertInput near
   3975	00001A8F  47			   inc edi ; next position
   3976	00001A90  8A 07			   mov al,[edi]	; digit
   3977					 ; convert decimal digit
   3978	00001A92  3C 30			   cmp al,'0' ;	minimum
   3979	00001A94  72 0E			   jb Enddec2bin ; done
   3980	00001A96  3C 39			   cmp al,'9' ;	maximum
   3981	00001A98  77 0A			   ja Enddec2bin ; done
   3982	00001A9A  2C 30			   sub al,'0' ;	digit
   3983	00001A9C  8D 14	92		   lea edx,[edx*4+edx]
   3984	00001A9F  8D 14	50		   lea edx,[edx*2+eax]
   3985	00001AA2  EB EB			   jmp ConvertInput
   3986	00001AA4			 label Enddec2bin Near
   3987	00001AA4  C3			   ret ; return
   3988	00001AA5			 endp dec2bin
   3989
   3990	00001AA5			 dataseg
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 71
uvcview.asm



   3991	00040FB8  FFFFFFFF		 MaxAlternate dd -1;
   3992
   3993	00040FBC			 dataseg
   3994	00040FBC  31			 UseHeader db '1'
   3995	00040FBD  31			 VideoMJPG db '1'
   3996	00040FBE  31			 VideoYUYV db '1'
   3997
   3998	00040FBF			 codeseg
   3999	00001AA5			 proc ProcessArguments near
   4000					 ; scan	for forward slash
   4001	00001AA5  8A 07			   mov al,[edi]	; character
   4002	00001AA7  47			   inc edi ; next position
   4003	00001AA8  3C 00			   cmp al,00h ;	terminator
   4004	00001AAA  74 67			   je EndScanString ; done
   4005	00001AAC  3C 2F			   cmp al,'/' ;	parameter
   4006	00001AAE  75 F5			   jne ProcessArguments
   4007					 ; color index argument
   4008	00001AB0  80 3F	63		   cmp [byte(edi)],'c'
   4009	00001AB3  75 12			   jne NotColorIndex
   4010	00001AB5  E8 FFFFFFD1		   call	dec2bin	; convert
   4011					 ; check color index value
   4012	00001ABA  83 FA	03		   cmp edx,3 ; max value
   4013	00001ABD  73 E6			   jnb ProcessArguments
   4014					 ; store color index value
   4015	00001ABF  89 15	00040F54r	   mov [ColorIndex],edx
   4016	00001AC5  EB DE			   jmp ProcessArguments
   4017	00001AC7			 label NotColorIndex near
   4018	00001AC7  80 3F	69		   cmp [byte(edi)],'i'
   4019	00001ACA  75 0D			   jne NotAltSetting
   4020	00001ACC  E8 FFFFFFBA		   call	dec2bin	; convert
   4021	00001AD1  89 15	00040FB8r	   mov [MaxAlternate],edx
   4022	00001AD7  EB CC			   jmp ProcessArguments
   4023	00001AD9			 label NotAltSetting near
   4024					 ; video MJPG argument
   4025	00001AD9  80 3F	6D		   cmp [byte(edi)],'m'
   4026	00001ADC  75 10			   jne NotVideoMJPG
   4027	00001ADE  C6 05	00040FBDr 31	   mov [VideoMJPG],'1'
   4028	00001AE5  C6 05	00040FBEr 30	   mov [VideoYUYV],'0'
   4029	00001AEC  EB B7			   jmp ProcessArguments
   4030	00001AEE			 label NotVideoMJPG near
   4031					 ; video YUYV argument
   4032	00001AEE  80 3F	75		   cmp [byte(edi)],'u'
   4033	00001AF1  75 10			   jne NotVideoYUYV
   4034	00001AF3  C6 05	00040FBEr 31	   mov [VideoYUYV],'1'
   4035	00001AFA  C6 05	00040FBDr 30	   mov [VideoMJPG],'0'
   4036	00001B01  EB A2			   jmp ProcessArguments
   4037	00001B03			 label NotVideoYUYV near
   4038					 ; any header argument
   4039	00001B03  80 3F	78		   cmp [byte(edi)],'x'
   4040	00001B06  75 09			   jne NotUseHeader
   4041	00001B08  C6 05	00040FBCr 30	   mov [UseHeader],'0'
   4042	00001B0F  EB 94			   jmp ProcessArguments
   4043	00001B11			 label NotUseHeader near
   4044	00001B11  EB 92			   jmp ProcessArguments
   4045	00001B13			 label EndScanString near
   4046					 ; set color coefficients
   4047	00001B13  8B 15	00040F54r	   mov edx,[ColorIndex]
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 72
uvcview.asm



   4048	00001B19  83 FA	03		   cmp edx,3 ; default
   4049	00001B1C  73 1A			   jnb EndSetValues
   4050	00001B1E  BF 00040FA0r		   mov edi,offset(ayc)
   4051	00001B23  BE 00040F58r		   mov esi,offset(ayc0)
   4052	00001B28  8D 34	D6		   lea esi,[esi+edx*8]
   4053	00001B2B  8D 34	D6		   lea esi,[esi+edx*8]
   4054	00001B2E  8D 34	D6		   lea esi,[esi+edx*8]
   4055	00001B31  B9 00000006		   mov ecx,6 ; dwords
   4056	00001B36  F3> A5		   rep movsd ; values
   4057	00001B38			 label EndSetValues near
   4058					 ; skip	sanity checks
   4059	00001B38  C3			   ret ; return
   4060	00001B39			 endp ProcessArguments
   4061
   4062	00001B39			 udataseg
   4063	002EE6A6  ????????		 BytesRead dd ?
   4064	002EE6AA  ????????		 DevNumber dd ?
   4065	002EE6AE  1000*(??)		 DevReport db ReportSize dup(?)
   4066		  =1000			 ReportSize = 4096
   4067
   4068	002EF6AE			 udataseg
   4069	002EF6AE  ????????		 bcdDevice dd ?
   4070	002EF6B2  ????????		 idProduct dd ?
   4071	002EF6B6  ????????		 idVendor dd ?
   4072
   4073	002EF6BA			 codeseg
   4074	00001B39			 proc ObtainUvcDevice near
   4075					 ; obtain number of attached usb devices
   4076					   call	UsbQueryNumberDevices c,offset(DevNumber)
1  4077	00001B39  68 002EE6AAr			 PUSH	 OFFSET(DEVNUMBER)
1  4078	00001B3E  E8 00000000e			 CALL	 USBQUERYNUMBERDEVICES
1  4079	00001B43  83 C4	04			 ADD	 ESP,00004h
   4080	00001B46  85 C0			   test	eax,eax	; check	for errors
   4081	00001B48  0F 85	000000B7	   jnz EndUvcDevice ; stop
   4082	00001B4E			 label InspectThisDevice near
   4083	00001B4E  39 05	002EE6AAr	   cmp [DevNumber],eax ; present
   4084	00001B54  75 3F			   jnz VerifyProperDevice ; yes
   4085					 ; report uvc webcam not found
   4086					   call	WinLoadString c,[hab],0,01h,255,offset(szMessageText)
1  4087	00001B56  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  4088	00001B5B  68 000000FF			 PUSH	 255
1  4089	00001B60  6A 01				 PUSH	 01H
1  4090	00001B62  6A 00				 PUSH	 0
1  4091	00001B64  FF 35	00000616r		 PUSH	 [HAB]
1  4092	00001B6A  E8 00000000e			 CALL	 WINLOADSTRING
1  4093	00001B6F  83 C4	14			 ADD	 ESP,00014h
   4094					   call	WinMessageBox c,1,1,offset(szMessageText),offset(szWindowTitle),0,4022h
1  4095	00001B72  68 00004022			 PUSH	 4022H
1  4096	00001B77  6A 00				 PUSH	 0
1  4097	00001B79  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  4098	00001B7E  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  4099	00001B83  6A 01				 PUSH	 1
1  4100	00001B85  6A 01				 PUSH	 1
1  4101	00001B87  E8 00000000e			 CALL	 WINMESSAGEBOX
1  4102	00001B8C  83 C4	18			 ADD	 ESP,00018h
   4103	00001B8F  3C 04			   cmp al,4 ; retry
   4104	00001B91  74 A6			   je ObtainUvcDevice
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 73
uvcview.asm



   4105	00001B93  EB 70			   jmp EndUvcDevice
   4106	00001B95			 label VerifyProperDevice near
   4107					 ; look	for attached uvc device
   4108	00001B95  C7 05	002EE6A6r     +	   mov [BytesRead],ReportSize
   4109		  00001000
   4110					   call	UsbQueryDeviceReport c,[DevNumber],offset(BytesRead),offset(DevReport)
1  4111	00001B9F  68 002EE6AEr			 PUSH	 OFFSET(DEVREPORT)
1  4112	00001BA4  68 002EE6A6r			 PUSH	 OFFSET(BYTESREAD)
1  4113	00001BA9  FF 35	002EE6AAr		 PUSH	 [DEVNUMBER]
1  4114	00001BAF  E8 00000000e			 CALL	 USBQUERYDEVICEREPORT
1  4115	00001BB4  83 C4	0C			 ADD	 ESP,0000Ch
   4116	00001BB7  85 C0			   test	eax,eax	; check	for errors
   4117	00001BB9  75 4A			   jnz EndUvcDevice ; stop
   4118	00001BBB  FF 0D	002EE6AAr	   dec [DevNumber] ; previous
   4119	00001BC1  80 3D	002EE6B2r EF	   cmp [DevReport+04h],0EFh
   4120	00001BC8  75 84			   jne InspectThisDevice
   4121	00001BCA  80 3D	002EE6B3r 02	   cmp [DevReport+05h],002h
   4122	00001BD1  0F 85	FFFFFF77	   jne InspectThisDevice
   4123	00001BD7  80 3D	002EE6B4r 01	   cmp [DevReport+06h],001h
   4124	00001BDE  0F 85	FFFFFF6A	   jne InspectThisDevice
   4125					 ; use attached	uvc device
   4126	00001BE4  66| A1 002EE6B6r	   mov ax,[word(DevReport)+08h]
   4127	00001BEA  A3 002EF6B6r		   mov [dword(idVendor)],eax
   4128	00001BEF  66| A1 002EE6B8r	   mov ax,[word(DevReport)+0Ah]
   4129	00001BF5  A3 002EF6B2r		   mov [dword(idProduct)],eax
   4130	00001BFA  66| A1 002EE6BAr	   mov ax,[word(DevReport)+0Ch]
   4131	00001C00  A3 002EF6AEr		   mov [dword(bcdDevice)],eax
   4132	00001C05			 label EndUvcDevice near
   4133	00001C05  C3			   ret ; return
   4134	00001C06			 endp ObtainUvcDevice
   4135
   4136	00001C06			 udataseg
   4137	002EF6BA  ????????		 AltInterface dd ?
   4138	002EF6BE  ????????		 NumInterface dd ?
   4139
   4140	002EF6C2			 udataseg
   4141	002EF6C2  ????????		 AddrEndpoint dd ?
   4142	002EF6C6  ????????		 IsoFrameSize dd ?
   4143	002EF6CA  ????????		 IsoFrameUsed dd ?
   4144
   4145	002EF6CE			 dataseg
   4146	00040FBF  4875683F		 StreamFormat dd 'Huh?'
   4147
   4148	00040FC3			 codeseg
   4149	00001C06			 proc ProcessDescriptors near
   4150					 ; address compound descriptor
   4151	00001C06  BE 002EE6AEr		   mov esi,offset(DevReport)
   4152	00001C0B  8B 1D	002EE6A6r	   mov ebx,[BytesRead] ; size
   4153	00001C11  8D 1C	1E		   lea ebx,[esi+ebx] ; boundary
   4154	00001C14  8B 06			   mov eax,[esi] ; size/type
   4155	00001C16			 Label NextDescriptor near
   4156					 ; point to next descriptor
   4157	00001C16  25 000000FF		   and eax,0FFh	; length
   4158	00001C1B  03 F0			   add esi,eax ; next
   4159	00001C1D  3B F3			   cmp esi,ebx ; boundary
   4160	00001C1F  0F 83	00000125	   jnb EndDescriptor ; stop
   4161	00001C25  8B 06			   mov eax,[esi] ; size/type
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 74
uvcview.asm



   4162	00001C27			 label FindDescriptor near
   4163					 ; find	interface descriptor
   4164	00001C27  80 FC	04		   cmp ah,04h ;	interface
   4165	00001C2A  75 EA			   jne NextDescriptor
   4166	00001C2C  80 7E	05 0E		   cmp [byte(esi)+5],0Eh
   4167	00001C30  75 E4			   jne NextDescriptor
   4168	00001C32  80 7E	06 02		   cmp [byte(esi)+6],02h
   4169	00001C36  75 DE			   jne NextDescriptor
   4170					 ; verify having bandwidth
   4171	00001C38  80 7E	03 00		   cmp [byte(esi)+3],00h
   4172	00001C3C  0F 85	000000B3	   jnz ObtainEndpoint
   4173					 ; video streaming interface
   4174	00001C42			 Label NextVideoStream near
   4175					 ; point to next descriptor
   4176	00001C42  25 000000FF		   and eax,0FFh	; length
   4177	00001C47  03 F0			   add esi,eax ; next
   4178	00001C49  3B F3			   cmp esi,ebx ; boundary
   4179	00001C4B  0F 83	000000F9	   jnb EndDescriptor ; stop
   4180	00001C51  8B 06			   mov eax,[esi] ; size/type
   4181	00001C53  80 FC	24		   cmp ah,24h ;	streaming
   4182	00001C56  75 CF			   jne FindDescriptor
   4183					 ; decode video	streaming
   4184	00001C58  0F A4	C2 10		   shld	edx,eax,16 ; subtype
   4185					 ; verify decode yuyv video
   4186	00001C5C  80 3D	00040FBEr 31	   cmp [VideoYUYV],'1' ; use
   4187	00001C63  75 0A			   jne EndDecodeYUYV ; skip
   4188	00001C65  80 FA	04		   cmp dl,04h ;	format yuyv
   4189	00001C68  74 22			   je FormatInxYUYV
   4190	00001C6A  80 FA	05		   cmp dl,05h ;	frame yuyv
   4191	00001C6D  74 50			   je FrameInxYUYV
   4192	00001C6F			 label EndDecodeYUYV near
   4193					 ; verify decode mjpg video
   4194	00001C6F  80 3D	00040FBDr 31	   cmp [VideoMJPG],'1' ; use
   4195	00001C76  75 0A			   jne EndDecodeMJPG ; skip
   4196	00001C78  80 FA	06		   cmp dl,06h ;	format mjpg
   4197	00001C7B  74 07			   je FormatInxMJPG
   4198	00001C7D  80 FA	07		   cmp dl,07h ;	frame mjpg
   4199	00001C80  74 12			   je FrameInxMJPG
   4200	00001C82			 label EndDecodeMJPG near
   4201	00001C82  EB BE			   jmp NextVideoStream
   4202	00001C84			 label FormatInxMJPG near
   4203					 ;------------------------------------------------------------------------------
   4204					 ; call	ShowReturnCode ; info
   4205					 ;------------------------------------------------------------------------------
   4206					 ; setup bFormatIndex
   4207	00001C84  88 35	00040EC8r	   mov [Negotiate+2],dh
   4208	00001C8A  EB B6			   jmp NextVideoStream
   4209	00001C8C			 label FormatInxYUYV near
   4210					 ;------------------------------------------------------------------------------
   4211					 ; call	ShowReturnCode ; info
   4212					 ;------------------------------------------------------------------------------
   4213					 ; setup bFormatIndex
   4214	00001C8C  88 35	00040EC8r	   mov [Negotiate+2],dh
   4215	00001C92  EB AE			   jmp NextVideoStream
   4216	00001C94			 label FrameInxMJPG near
   4217					 ; frame index Ix*Iy mjpg
   4218	00001C94  66| 81 7E 05 0280	   cmp [word(esi)+5],Ix
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 75
uvcview.asm



   4219	00001C9A  75 A6			   jne NextVideoStream
   4220	00001C9C  66| 81 7E 07 01E0	   cmp [word(esi)+7],Iy
   4221	00001CA2  75 9E			   jne NextVideoStream
   4222					 ;------------------------------------------------------------------------------
   4223					 ; call	ShowReturnCode ; info
   4224					 ;------------------------------------------------------------------------------
   4225					 ; setup bFrameIndex
   4226	00001CA4  88 35	00040EC9r	   mov [Negotiate+3],dh
   4227					 ; setup dwDefaultFrameInterval
   4228	00001CAA  8B 56	15		   mov edx,[esi+21] ; default
   4229	00001CAD  89 15	00040ECAr	   mov [dword(Negotiate)+4],edx
   4230					 ; switch video	stream format
   4231	00001CB3  C7 05	00040FBFr     +	   mov [StreamFormat],'MJPG'
   4232		  4D4A5047
   4233	00001CBD  EB 83			   jmp NextVideoStream
   4234	00001CBF			 label FrameInxYUYV near
   4235					 ; frame index Ix*Iy yuyv
   4236	00001CBF  66| 81 7E 05 0280	   cmp [word(esi)+5],Ix
   4237	00001CC5  0F 85	FFFFFF77	   jne NextVideoStream
   4238	00001CCB  66| 81 7E 07 01E0	   cmp [word(esi)+7],Iy
   4239	00001CD1  0F 85	FFFFFF6B	   jne NextVideoStream
   4240					 ;------------------------------------------------------------------------------
   4241					 ; call	ShowReturnCode ; info
   4242					 ;------------------------------------------------------------------------------
   4243					 ; setup bFrameIndex
   4244	00001CD7  88 35	00040EC9r	   mov [Negotiate+3],dh
   4245					 ; setup dwDefaultFrameInterval
   4246	00001CDD  8B 56	15		   mov edx,[esi+21] ; default
   4247	00001CE0  89 15	00040ECAr	   mov [dword(Negotiate)+4],edx
   4248					 ; switch video	stream format
   4249	00001CE6  C7 05	00040FBFr     +	   mov [StreamFormat],'YUYV'
   4250		  59555956
   4251	00001CF0  E9 FFFFFF4D		   jmp NextVideoStream
   4252	00001CF5			 label ObtainEndpoint near
   4253					 ; verify alternate setting
   4254	00001CF5  8B 15	002EF6BAr	   mov edx,[AltInterface]
   4255	00001CFB  3B 15	00040FB8r	   cmp edx,[MaxAlternate]
   4256	00001D01  0F 83	FFFFFF0F	   jnb NextDescriptor
   4257					 ; setup bInterfaceNumber
   4258	00001D07  0F B6	56 02		   movzx edx,[byte(esi)+2]
   4259	00001D0B  89 15	002EF6BEr	   mov [NumInterface],edx
   4260					 ; setup bAlternateSetting
   4261	00001D11  0F B6	56 03		   movzx edx,[byte(esi)+3]
   4262	00001D15  89 15	002EF6BAr	   mov [AltInterface],edx
   4263	00001D1B			 label NextEndpoint near
   4264					 ; point to next descriptor
   4265	00001D1B  25 000000FF		   and eax,0FFh	; length
   4266	00001D20  03 F0			   add esi,eax ; next
   4267	00001D22  3B F3			   cmp esi,ebx ; boundary
   4268	00001D24  73 24			   jnb EndDescriptor ; stop
   4269	00001D26  8B 06			   mov eax,[esi] ; size/type
   4270	00001D28  80 FC	05		   cmp ah,05h ;	endpoint
   4271	00001D2B  0F 85	FFFFFEF6	   jne FindDescriptor
   4272					 ; setup bEndpointAddress
   4273	00001D31  0F B6	56 02		   movzx edx,[byte(esi)+2]
   4274	00001D35  89 15	002EF6C2r	   mov [AddrEndpoint],edx
   4275					 ; setup wMaxPacketSize
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 76
uvcview.asm



   4276	00001D3B  0F B7	56 04		   movzx edx,[word(esi)+4]
   4277	00001D3F  89 15	002EF6C6r	   mov [IsoFrameSize],edx
   4278	00001D45  E9 FFFFFECC		   jmp NextDescriptor
   4279	00001D4A			 label EndDescriptor near
   4280					 ; update iso frame length
   4281	00001D4A  A1 002EF6C6r		   mov eax,[IsoFrameSize]
   4282	00001D4F  0F A4	C2 15		   shld	edx,eax,21 ; multi
   4283	00001D53  80 E4	07		   and ah,07h ;	isolate
   4284	00001D56  80 E2	03		   and dl,03h ;	isolate
   4285	00001D59  A3 002EF6C6r		   mov [IsoFrameSize],eax
   4286	00001D5E  80 FA	01		   cmp dl,01h ;	double
   4287	00001D61  72 0A			   jb EndMultiple ; single
   4288	00001D63  74 02			   je AddMultiple ; double
   4289	00001D65  03 C0			   add eax,eax ; triple
   4290	00001D67			 label AddMultiple near
   4291	00001D67  01 05	002EF6C6r	   add [IsoFrameSize],eax
   4292	00001D6D			 label EndMultiple near
   4293					 ; verify iso frame length
   4294	00001D6D  A1 002EF6C6r		   mov eax,[IsoFrameSize]
   4295	00001D72  85 C0			   test	eax,eax	; present
   4296	00001D74  75 41			   jnz EndVerifySize ; yes
   4297					 ; report invalid frame	size
   4298	00001D76  E8 FFFFF8B5		   call	ShowReturnCode ; info
   4299					   call	WinLoadString c,[hab],0,05h,244,offset(szMessageText+11)
1  4300	00001D7B  68 00000423r			 PUSH	 OFFSET(SZMESSAGETEXT+11)
1  4301	00001D80  68 000000F4			 PUSH	 244
1  4302	00001D85  6A 05				 PUSH	 05H
1  4303	00001D87  6A 00				 PUSH	 0
1  4304	00001D89  FF 35	00000616r		 PUSH	 [HAB]
1  4305	00001D8F  E8 00000000e			 CALL	 WINLOADSTRING
1  4306	00001D94  83 C4	14			 ADD	 ESP,00014h
   4307					   call	WinMessageBox c,1,1,offset(szMessageText),offset(szWindowTitle),0,4046h
1  4308	00001D97  68 00004046			 PUSH	 4046H
1  4309	00001D9C  6A 00				 PUSH	 0
1  4310	00001D9E  68 00000517r			 PUSH	 OFFSET(SZWINDOWTITLE)
1  4311	00001DA3  68 00000418r			 PUSH	 OFFSET(SZMESSAGETEXT)
1  4312	00001DA8  6A 01				 PUSH	 1
1  4313	00001DAA  6A 01				 PUSH	 1
1  4314	00001DAC  E8 00000000e			 CALL	 WINMESSAGEBOX
1  4315	00001DB1  83 C4	18			 ADD	 ESP,00018h
   4316	00001DB4  85 C0			   test	eax,eax
   4317	00001DB6  C3			   ret ; return
   4318	00001DB7			 label EndVerifySize near
   4319					 ; calculate iso frame count
   4320	00001DB7  2B D2			   sub edx,edx ; ensure	zeroes
   4321	00001DB9  B8 0000F000		   mov eax,dSize ; data	size
   4322	00001DBE  F7 35	002EF6C6r	   div [IsoFrameSize] ;	count
   4323	00001DC4  24 F8			   and al,0F8h ; microframes
   4324	00001DC6  A3 002EF6CAr		   mov [IsoFrameUsed],eax
   4325					 ;------------------------------------------------------------------------------
   4326					 ; call	ShowReturnCode ; info
   4327					 ;------------------------------------------------------------------------------
   4328					 ; apply sanity	checks
   4329	00001DCB  3B F3			   cmp esi,ebx ; boundary
   4330	00001DCD  C3			   ret ; return
   4331	00001DCE			 endp ProcessDescriptors
   4332
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 77
uvcview.asm



   4333					 end MainRoutine
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 78
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03-08-14"
??FILENAME			  Text	 "uvcview "
??TIME				  Text	 "18:26:15"
??VERSION			  Number 0401
@32BIT				  Text	 1
@@ARG				  Number [FLAT:EBP+0014]
@@ENV				  Number [FLAT:EBP+0010]
@@HAB				  Number [FLAT:EBP-0004]
@@HAB				  Number [FLAT:EBP-0004]
@@HMQ				  Number [FLAT:EBP-0008]
@@HMQ				  Number [FLAT:EBP-0008]
@@HWND				  Number [FLAT:EBP+0008]
@@HWND				  Number [FLAT:EBP+0008]
@@MOD				  Number [FLAT:EBP+0008]
@@MP1				  Number [FLAT:EBP+0010]
@@MP1				  Number [FLAT:EBP+0010]
@@MP2				  Number [FLAT:EBP+0014]
@@MP2				  Number [FLAT:EBP+0014]
@@MSG				  Number [FLAT:EBP+000C]
@@MSG				  Number [FLAT:EBP+000C]
@@NUL				  Number [FLAT:EBP+000C]
@@PARAMETER			  Number [FLAT:EBP+0008]
@@PARAMETER			  Number [FLAT:EBP+0008]
@CODE				  Text	 FLAT
@CODESIZE			  Text	 0
@CPU				  Text	 1F9FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 FLAT
@DATASIZE			  Text	 0
@FILENAME			  Text	 UVCVIEW
@INTERFACE			  Text	 00H
@MODEL				  Text	 1
@STACK				  Text	 FLAT
@WORDSIZE			  Text	 4
A1				  Number 2D413CCC
A2				  Number 22A2F4F7
A3				  Number 2D413CCC
A4				  Number 539EBA43
A5				  Number 187DE2A6
AANFDCT				  Near	 FLAT:0000
AANIDCT				  Near	 FLAT:020E
ACENDEMITCODE			  Near	 FLAT:0876
ACENDEMITDATA			  Near	 FLAT:08CC
ACENDZEROCODE1			  Near	 FLAT:0859
ACENDZEROCODE2			  Near	 FLAT:0876
ACENDZERODATA1			  Near	 FLAT:08AF
ACENDZERODATA2			  Near	 FLAT:08CC
ACHUFFMAN			  Near	 FLAT:0828
ACLONGTABLE			  Near	 FLAT:0577
ACNONZEROVALUE			  Near	 FLAT:07F7
ACNOTEMITCODE			  Near	 FLAT:0878
ACNOTEMITDATA			  Near	 FLAT:08CE
ACSCANBITS			  Near	 FLAT:0812
ACTIONTAKEN			  Dword	 FLAT:065E
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 79
Symbol Table



ACVALID				  Near	 FLAT:0592
ADDMULTIPLE			  Near	 FLAT:1D67
ADDRENDPOINT			  Dword	 FLAT:002EF6C2
ALTINTERFACE			  Dword	 FLAT:002EF6BA
APPENDTRAILER			  Near	 FLAT:0CAF
APPLYREFERENCE			  Near	 FLAT:04F0
ARGLIST				  Dword	 FLAT:002EE68A
AYC				  Dword	 FLAT:00040FA0
AYC0				  Dword	 FLAT:00040F58
AYC1				  Dword	 FLAT:00040F70
AYC2				  Dword	 FLAT:00040F88
BADISOTRANSFER			  Near	 FLAT:15C9
BADOBTAINTHREAD			  Near	 FLAT:15CA
BADSUPPLYTHREAD			  Near	 FLAT:181C
BCDDEVICE			  Dword	 FLAT:002EF6AE
BHMEMORY			  Word	 FLAT:00040E5B
BMPFILEHEADER			  Word	 FLAT:00040F22
BUC				  Dword	 FLAT:00040FA4
BUC0				  Dword	 FLAT:00040F5C
BUC1				  Dword	 FLAT:00040F74
BUC2				  Dword	 FLAT:00040F8C
BUILDNEXTUNIT			  Near	 FLAT:0B14
BUMPTONEXTFRAME			  Near	 FLAT:1465
BYTESDONE			  Dword	 FLAT:002EE69E
BYTESREAD			  Dword	 FLAT:002EE6A6
C00				  Number 000C
C01				  Number 0014
C02				  Number 001E
C03				  Number 0028
C04				  Number 0054
C05				  Number 0054
C06				  Number 0054
C07				  Number 0054
C10				  Number 0014
C11				  Number 0020
C12				  Number 002A
C128				  Number 02000000
C13				  Number 0036
C14				  Number 0054
C15				  Number 0054
C16				  Number 0054
C17				  Number 0054
C20				  Number 001E
C21				  Number 002A
C22				  Number 0038
C23				  Number 0042
C24				  Number 0054
C25				  Number 0054
C26				  Number 0054
C27				  Number 0054
C30				  Number 0028
C31				  Number 0036
C32				  Number 0042
C33				  Number 0054
C34				  Number 0054
C35				  Number 0054
C36				  Number 0054
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 80
Symbol Table



C37				  Number 0054
C40				  Number 0054
C41				  Number 0054
C42				  Number 0054
C43				  Number 0054
C44				  Number 0054
C45				  Number 0054
C46				  Number 0054
C47				  Number 0054
C50				  Number 0054
C51				  Number 0054
C52				  Number 0054
C53				  Number 0054
C54				  Number 0054
C55				  Number 0054
C56				  Number 0054
C57				  Number 0054
C60				  Number 0054
C61				  Number 0054
C62				  Number 0054
C63				  Number 0054
C64				  Number 0054
C65				  Number 0054
C66				  Number 0054
C67				  Number 0054
C70				  Number 0054
C71				  Number 0054
C72				  Number 0054
C73				  Number 0054
C74				  Number 0054
C75				  Number 0054
C76				  Number 0054
C77				  Number 0054
CAC				  Word	 FLAT:000406E6
CAD				  Byte	 FLAT:0004095C
CAS				  Byte	 FLAT:00040636
CAT				  Byte	 FLAT:000409A4
CBM				  Number 48461F81
CDC				  Word	 FLAT:0004061E
CDD				  Byte	 FLAT:00040946
CDS				  Byte	 FLAT:00040612
CDT				  Byte	 FLAT:0004094E
CHECKMARKER			  Near	 FLAT:068D
CLIENTWINPROC			  Near	 FLAT:1052
CNTRESTART			  Dword	 FLAT:00040A65
COLORINDEX			  Dword	 FLAT:00040F54
CONVERTDIGIT			  Near	 FLAT:1647
CONVERTINPUT			  Near	 FLAT:1A8F
CONVERTPIXELS			  Near	 FLAT:1963
CONVERTTHISLINE			  Near	 FLAT:1958
COS0A				  Number 40000000
COS1A				  Number 3EC52F9F
COS2A				  Number 3B20D79D
COS3A				  Number 3536CC51
COS4A				  Number 2D413CCC
COS5A				  Number 238E7673
COS6A				  Number 187DE2A6
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 81
Symbol Table



COS7A				  Number 0C7C5C1E
CQI				  Dword	 FLAT:00040846
CQT				  Dword	 FLAT:00040512
CRM				  Number 5B49532E
D00				  Number 00400000
D01				  Number 0058C543
D02				  Number 00539EBA
D03				  Number 004B418C
D04				  Number 00400000
D05				  Number 003248D4
D06				  Number 0022A2F5
D07				  Number 0011A856
D10				  Number 0058C543
D11				  Number 007B20D8
D12				  Number 0073FBFC
D13				  Number 00686214
D14				  Number 0058C543
D15				  Number 0045BF1F
D16				  Number 00300AD3
D17				  Number 00187DE3
D20				  Number 00539EBA
D21				  Number 0073FBFC
D22				  Number 006D413D
D23				  Number 006253A6
D24				  Number 00539EBA
D25				  Number 0041B328
D26				  Number 002D413D
D27				  Number 0017121A
D30				  Number 004B418C
D31				  Number 00686214
D32				  Number 006253A6
D33				  Number 00587DE3
D34				  Number 004B418C
D35				  Number 003B20D8
D36				  Number 0028BA70
D37				  Number 0014C35A
D40				  Number 00400000
D41				  Number 0058C543
D42				  Number 00539EBA
D43				  Number 004B418C
D44				  Number 00400000
D45				  Number 003248D4
D46				  Number 0022A2F5
D47				  Number 0011A856
D50				  Number 003248D4
D51				  Number 0045BF1F
D52				  Number 0041B328
D53				  Number 003B20D8
D54				  Number 003248D4
D55				  Number 0027821D
D56				  Number 001B36B9
D57				  Number 000DDF9B
D60				  Number 0022A2F5
D61				  Number 00300AD3
D62				  Number 002D413D
D63				  Number 0028BA70
D64				  Number 0022A2F5
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 82
Symbol Table



D65				  Number 001B36B9
D66				  Number 0012BEC3
D67				  Number 00098E63
D70				  Number 0011A856
D71				  Number 00187DE3
D72				  Number 0017121A
D73				  Number 0014C35A
D74				  Number 0011A856
D75				  Number 000DDF9B
D76				  Number 00098E63
D77				  Number 0004DF28
DCENDEMITCODE			  Near	 FLAT:075F
DCENDEMITDATA			  Near	 FLAT:07A9
DCENDZEROCODE1			  Near	 FLAT:0742
DCENDZEROCODE2			  Near	 FLAT:075F
DCENDZERODATA1			  Near	 FLAT:078C
DCENDZERODATA2			  Near	 FLAT:07A9
DCHUFFMAN			  Near	 FLAT:0711
DCLONGTABLE			  Near	 FLAT:048D
DCNONZEROVALUE			  Near	 FLAT:0705
DCNOTEMITCODE			  Near	 FLAT:0761
DCNOTEMITDATA			  Near	 FLAT:07AB
DCSCANBITS			  Near	 FLAT:070C
DCVALID				  Near	 FLAT:04AC
DCVALUE				  Dword	 FLAT:040C
DEC2BIN				  Near	 FLAT:1A8B
DECODER				  Near	 FLAT:0414
DECREMENTFREEBUFFERS		  Near	 FLAT:157F
DELIVERTHISBUFFER		  Near	 FLAT:14C3
DEVCLOSEDC			  Near	 ----:---- Extern
DEVNUMBER			  Dword	 FLAT:002EE6AA
DEVOPENDC			  Near	 ----:---- Extern
DEVREPORT			  Byte	 FLAT:002EE6AE
DOSBEEP				  Near	 ----:---- Extern
DOSCLOSE			  Near	 ----:---- Extern
DOSCLOSEEVENTSEM		  Near	 ----:---- Extern
DOSCREATEEVENTSEM		  Near	 ----:---- Extern
DOSCREATETHREAD			  Near	 ----:---- Extern
DOSEXIT				  Near	 ----:---- Extern
DOSFREEMEM			  Near	 ----:---- Extern
DOSOPEN				  Near	 ----:---- Extern
DOSPOSTEVENTSEM			  Near	 ----:---- Extern
DOSRESETEVENTSEM		  Near	 ----:---- Extern
DOSSETPRIORITY			  Near	 ----:---- Extern
DOSSLEEP			  Near	 ----:---- Extern
DOSSUSPENDTHREAD		  Near	 ----:---- Extern
DOSWAITEVENTSEM			  Near	 ----:---- Extern
DOSWRITE			  Near	 ----:---- Extern
DSIZE				  Number F000
ENCODER				  Near	 FLAT:06BF
ENDACDECODE			  Near	 FLAT:0581
ENDBITMAP			  Near	 FLAT:18F4
ENDDCDECODE			  Near	 FLAT:049B
ENDDEC2BIN			  Near	 FLAT:1AA4
ENDDECODE			  Near	 FLAT:0619
ENDDECODEMJPG			  Near	 FLAT:1C82
ENDDECODER			  Near	 FLAT:06AD
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 83
Symbol Table



ENDDECODEYUYV			  Near	 FLAT:1C6F
ENDDESCRIPTOR			  Near	 FLAT:1D4A
ENDENCODE			  Near	 FLAT:08D2
ENDFREESTRING			  Near	 FLAT:17FB
ENDISOCHRONOUSMOVE		  Near	 FLAT:1506
ENDMAINMSGQUEUE			  Near	 FLAT:1038
ENDMULTIPLE			  Near	 FLAT:1D6D
ENDOBTAINMJPG			  Near	 FLAT:1455
ENDOBTAINMSGQUEUE		  Near	 FLAT:1619
ENDOBTAINTHREAD			  Near	 FLAT:1624
ENDOBTAINYUYV			  Near	 FLAT:1465
ENDPROCESS			  Near	 FLAT:1046
ENDPROCESSMESSAGE		  Near	 FLAT:0F6A
ENDRESTARTFRAME			  Near	 FLAT:1427
ENDSCANSTRING			  Near	 FLAT:1B13
ENDSCREEN			  Near	 FLAT:0F6A
ENDSETVALUES			  Near	 FLAT:1B38
ENDSHOWSTRING			  Near	 FLAT:17E9
ENDSKIPZERO0			  Near	 FLAT:0452
ENDSKIPZERO1			  Near	 FLAT:04D7
ENDSKIPZERO2			  Near	 FLAT:053C
ENDSKIPZERO3			  Near	 FLAT:05D3
ENDSKIPZERO4			  Near	 FLAT:067D
ENDSUPPLYMJPG			  Near	 FLAT:1738
ENDSUPPLYMSGQUEUE		  Near	 FLAT:186C
ENDSUPPLYTHREAD			  Near	 FLAT:1877
ENDSUPPLYYUYV			  Near	 FLAT:1757
ENDTAKETESTSHOT			  Near	 FLAT:16FB
ENDUSBCLOSEATTEMPT		  Near	 FLAT:102A
ENDUSBOPENATTEMPT		  Near	 FLAT:102A
ENDUVCDEVICE			  Near	 FLAT:1C05
ENDVERIFYBITS0			  Near	 FLAT:0457
ENDVERIFYBITS1			  Near	 FLAT:04DC
ENDVERIFYBITS2			  Near	 FLAT:0541
ENDVERIFYBITS3			  Near	 FLAT:05D8
ENDVERIFYBITS4			  Near	 FLAT:0682
ENDVERIFYSIZE			  Near	 FLAT:1DB7
ENDWINDOW			  Near	 FLAT:0F78
ENDWRITER			  Near	 FLAT:0CE1
FACTORS				  Near	 FLAT:0AA7
FHDEVICE			  Dword	 FLAT:0662
FHOUTPUT			  Dword	 FLAT:002EE6A2
FINDDESCRIPTOR			  Near	 FLAT:1C27
FLCREATEFLAGS			  Dword	 FLAT:00040E3B
FORMATINXMJPG			  Near	 FLAT:1C84
FORMATINXYUYV			  Near	 FLAT:1C8C
FRAMEINXMJPG			  Near	 FLAT:1C94
FRAMEINXYUYV			  Near	 FLAT:1CBF
FRAMEWINPROC			  Near	 FLAT:11B9
GCB				  Number 160663C7
GCR				  Number 2DB47842
GOODIMAGE			  Byte	 FLAT:00040A64
GPIBITBLT			  Near	 ----:---- Extern
GPICREATEBITMAP			  Near	 ----:---- Extern
GPICREATEPS			  Near	 ----:---- Extern
GPIDELETEBITMAP			  Near	 ----:---- Extern
GPIDESTROYPS			  Near	 ----:---- Extern
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 84
Symbol Table



GPISETBITMAP			  Near	 ----:---- Extern
GPISETBITMAPBITS		  Near	 ----:---- Extern
GUC				  Dword	 FLAT:00040FA8
GUC0				  Dword	 FLAT:00040F60
GUC1				  Dword	 FLAT:00040F78
GUC2				  Dword	 FLAT:00040F90
GVC				  Dword	 FLAT:00040FAC
GVC0				  Dword	 FLAT:00040F64
GVC1				  Dword	 FLAT:00040F7C
GVC2				  Dword	 FLAT:00040F94
HAB				  Dword	 FLAT:0616
HBMMEMORY			  Dword	 FLAT:066E
HCINBITS			  Dword	 FLAT:0400
HCOFFSET			  Dword	 FLAT:0404
HCSTATUS			  Dword	 FLAT:0408
HDCMEMORY			  Dword	 FLAT:0672
HDCSCREEN			  Dword	 FLAT:0676
HDRAPP				  Byte	 FLAT:00040BAF
HDRCOM				  Byte	 FLAT:00040BC1
HDRDHTCA			  Byte	 FLAT:00040D68
HDRDHTCD			  Byte	 FLAT:00040D47
HDRDHTYA			  Byte	 FLAT:00040C90
HDRDHTYD			  Byte	 FLAT:00040C6F
HDRDQTC				  Byte	 FLAT:00040C17
HDRDQTY				  Byte	 FLAT:00040BD2
HDREOI				  Byte	 FLAT:00040E2D
HDRSOF				  Byte	 FLAT:00040C5C
HDRSOI				  Byte	 FLAT:00040BAD
HDRSOS				  Byte	 FLAT:00040E1F
HEX2ASCII			  Byte	 FLAT:00040F06
HMQ				  Dword	 FLAT:061A
HPSMEMORY			  Dword	 FLAT:067A
HPSSCREEN			  Dword	 FLAT:067E
HUFFMAN				  Near	 FLAT:0AE2
HWNDCLIENT			  Dword	 FLAT:061E
HWNDFRAME			  Dword	 FLAT:0622
IDPRODUCT			  Dword	 FLAT:002EF6B2
IDVENDOR			  Dword	 FLAT:002EF6B6
IMAGECOMPLETE			  Near	 FLAT:147D
INBUFFER0			  Byte	 FLAT:0686
INBUFFER1			  Byte	 FLAT:00096686
INBUFFER2			  Byte	 FLAT:0012C686
INBUFPTR0			  Dword	 FLAT:00040E9A
INBUFPTR1			  Dword	 FLAT:00040EA6
INBUFPTR2			  Dword	 FLAT:00040EB2
INSPECTMINIMUMCOUNT		  Near	 FLAT:14B2
INSPECTNEXTOBTAIN		  Near	 FLAT:14E0
INSPECTNEXTSUPPLY		  Near	 FLAT:168E
INSPECTTHISDEVICE		  Near	 FLAT:1B4E
IQT				  Dword	 FLAT:00040AAD
ISIZE				  Number 00010000
ISODATA				  Byte	 FLAT:0000
ISOEVENT			  Dword	 FLAT:00040E57
ISOFRAMESIZE			  Dword	 FLAT:002EF6C6
ISOFRAMEUSED			  Dword	 FLAT:002EF6CA
ISOFREE				  Dword	 FLAT:00040EFA
ISOPOST				  Dword	 FLAT:001C2686
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 85
Symbol Table



ISOTHIS				  Dword	 FLAT:00040EFE
IUSED				  Number 0004
IX				  Number 0280
IY				  Number 01E0
JPG2RGB				  Near	 FLAT:0911
MAINROUTINE			  Near	 FLAT:0CF0
MAXALTERNATE			  Dword	 FLAT:00040FB8
MCB				  Number 716872B0
MCR				  Number 59BA5E35
MCU				  Dword	 FLAT:0000
MOVENEWIMAGEDATA		  Near	 FLAT:1435
MOVERAWIMAGEDATA		  Near	 FLAT:13F6
NEGOTIATE			  Byte	 FLAT:00040EC6
NEXTACDECODE			  Near	 FLAT:0521
NEXTACELEMENT			  Near	 FLAT:07B2
NEXTCOLSPASS			  Near	 FLAT:0002
NEXTDCDECODE			  Near	 FLAT:0437
NEXTDCELEMENT			  Near	 FLAT:06CF
NEXTDESCRIPTOR			  Near	 FLAT:1C16
NEXTENDPOINT			  Near	 FLAT:1D1B
NEXTISOCHRONOUSFRAME		  Near	 FLAT:13D2
NEXTMARKER			  Near	 FLAT:0A64
NEXTPASSCOLS			  Near	 FLAT:0210
NEXTPASSROWS			  Near	 FLAT:030D
NEXTROWSPASS			  Near	 FLAT:0103
NEXTUNITROW			  Near	 FLAT:0B16
NEXTVIDEOSTREAM			  Near	 FLAT:1C42
NOTALTSETTING			  Near	 FLAT:1AD9
NOTBITMAP			  Near	 FLAT:1902
NOTCOLORINDEX			  Near	 FLAT:1AC7
NOTCOMMAND			  Near	 FLAT:10E0
NOTCREATESCREEN			  Near	 FLAT:116C
NOTDESTROYSCREEN		  Near	 FLAT:11A3
NOTENDOFBLOCK			  Near	 FLAT:05A5
NOTEXITCAMERA			  Near	 FLAT:10ED
NOTISOTRANSFER			  Near	 FLAT:1500
NOTMAXIMIZEWINDOW		  Near	 FLAT:1235
NOTOUTPUT			  Near	 FLAT:1952
NOTREFRESHSCREEN		  Near	 FLAT:10C6
NOTRESTOREWINDOW		  Near	 FLAT:1251
NOTSKIPZEROES			  Near	 FLAT:05AF
NOTSNAPSHOT			  Near	 FLAT:10DC
NOTUSBOPENATTEMPT		  Near	 FLAT:102A
NOTUSEHEADER			  Near	 FLAT:1B11
NOTVIDEOMJPG			  Near	 FLAT:1AEE
NOTVIDEOYUYV			  Near	 FLAT:1B03
NOTWRITER			  Near	 FLAT:0CEF
NUMINTERFACE			  Dword	 FLAT:002EF6BE
OBTAINCOUNT			  Dword	 FLAT:00040E92
OBTAINENDPOINT			  Near	 FLAT:1CF5
OBTAINIMAGE			  Dword	 FLAT:064E
OBTAINPOSTS			  Dword	 FLAT:0652
OBTAINPTR			  Dword	 FLAT:00040EBE
OBTAINTHREAD			  Near	 FLAT:126D
OBTAINUVCDEVICE			  Near	 FLAT:1B39
OUT2RAW				  Near	 FLAT:1903
OUTBUFFER			  Byte	 FLAT:001C268A
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 86
Symbol Table



OX				  Number 0140
OY				  Number 00F0
PAMEMORY			  Dword	 FLAT:00040E67
PASSTOOLDFRAMEPROCEDURE		  Near	 FLAT:1251
PROCESSARGUMENTS		  Near	 FLAT:1AA5
PROCESSDESCRIPTORS		  Near	 FLAT:1C06
PROCESSMESSAGE			  Near	 FLAT:0F38
PROCESSNEXTSUPPLY		  Near	 FLAT:16D4
PTIMESTAMP			  Dword	 FLAT:00040F02
Q00				  Number 08000000
Q01				  Number 05C48695
Q02				  Number 061F78AA
Q03				  Number 06CDAE4B
Q04				  Number 08000000
Q05				  Number 0A2E9C0D
Q06				  Number 0EC835E8
Q07				  Number 1CFEFEFD
Q10				  Number 05C48695
Q11				  Number 04288406
Q12				  Number 046A1578
Q13				  Number 04E7AE91
Q14				  Number 05C48695
Q15				  Number 075742C2
Q16				  Number 0AA84387
Q17				  Number 14E7AE91
Q20				  Number 061F78AA
Q21				  Number 046A1578
Q22				  Number 04AFB0CD
Q23				  Number 05350659
Q24				  Number 061F78AA
Q25				  Number 07CB033A
Q26				  Number 0B504F33
Q27				  Number 163150B1
Q30				  Number 06CDAE4B
Q31				  Number 04E7AE91
Q32				  Number 05350659
Q33				  Number 05C92D84
Q34				  Number 06CDAE4B
Q35				  Number 08A8BD3E
Q36				  Number 0C9234E0
Q37				  Number 18A8BD3E
Q40				  Number 08000000
Q41				  Number 05C48695
Q42				  Number 061F78AA
Q43				  Number 06CDAE4B
Q44				  Number 08000000
Q45				  Number 0A2E9C0D
Q46				  Number 0EC835E8
Q47				  Number 1CFEFEFD
Q50				  Number 0A2E9C0D
Q51				  Number 075742C2
Q52				  Number 07CB033A
Q53				  Number 08A8BD3E
Q54				  Number 0A2E9C0D
Q55				  Number 0CF595AF
Q56				  Number 12D062F0
Q57				  Number 24E7AE91
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 87
Symbol Table



Q60				  Number 0EC835E8
Q61				  Number 0AA84387
Q62				  Number 0B504F33
Q63				  Number 0C9234E0
Q64				  Number 0EC835E8
Q65				  Number 12D062F0
Q66				  Number 1B504F33
Q67				  Number 3593E882
Q70				  Number 1CFEFEFD
Q71				  Number 14E7AE91
Q72				  Number 163150B1
Q73				  Number 18A8BD3E
Q74				  Number 1CFEFEFD
Q75				  Number 24E7AE91
Q76				  Number 3593E882
Q77				  Number 6918B8C7
QMSG				  Dword	 FLAT:0626
READER				  Near	 FLAT:0A59
READIMAGE			  Near	 FLAT:0937
READNEXTUNIT			  Near	 FLAT:0939
REPORTSIZE			  Number 1000
RESETDECODER			  Near	 FLAT:069A
RESETISOFRAMELENGTHARRAY	  Near	 FLAT:1517
RESTART				  Near	 FLAT:0A93
RESULT				  Dword	 FLAT:002EE696
RETURNCODE			  Dword	 FLAT:002EE692
REXXFILE			  Byte	 FLAT:00040F16
REXXSTART			  Near	 ----:---- Extern
RGB2BMP				  Near	 FLAT:1883
RGB2JPG				  Near	 FLAT:0AF1
RGB2YCC				  Near	 FLAT:0B18
RGBBUFFER			  Byte	 FLAT:0020D68A
RVC				  Dword	 FLAT:00040FB0
RVC0				  Dword	 FLAT:00040F68
RVC1				  Dword	 FLAT:00040F80
RVC2				  Dword	 FLAT:00040F98
S1				  Number 2D413CCC
S2				  Number 539EBA43
S3				  Number 2D413CCC
S4				  Number 22A2F4F7
S5				  Number 3B20D79D
SCANIMAGE			  Near	 FLAT:0B12
SETTABLE			  Near	 FLAT:0AC7
SHOWRETURNCODE			  Near	 FLAT:1630
SNAPSHOT			  Byte	 FLAT:00040E91
SRMEMORY			  Dword	 FLAT:00040E87
SSOUTPUT			  Byte	 FLAT:00040E2F
STORE1STB			  Near	 FLAT:19B6
STORE1STG			  Near	 FLAT:1A51
STORE1STR			  Near	 FLAT:19F7
STORE2NDB			  Near	 FLAT:19CC
STORE2NDG			  Near	 FLAT:1A68
STORE2NDR			  Near	 FLAT:1A0E
STORETHISB0			  Near	 FLAT:0990
STORETHISB1			  Near	 FLAT:09A0
STORETHISG0			  Near	 FLAT:0A0A
STORETHISG1			  Near	 FLAT:0A17
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 88
Symbol Table



STORETHISR0			  Near	 FLAT:09C1
STORETHISR1			  Near	 FLAT:09D1
STREAMFORMAT			  Dword	 FLAT:00040FBF
SUGGESTED			  Byte	 FLAT:00040EE0
SUPPLYCOUNT			  Dword	 FLAT:00040E96
SUPPLYIMAGE			  Dword	 FLAT:0656
SUPPLYISOCHRONOUSBUFFER		  Near	 FLAT:13BB
SUPPLYPOSTS			  Dword	 FLAT:065A
SUPPLYPTR			  Dword	 FLAT:00040EC2
SUPPLYTHREAD			  Near	 FLAT:165C
SYNCRESET			  Near	 FLAT:17FB
SZCLIENTCLASS			  Byte	 FLAT:00040E3F
SZDEVICETOKEN			  Byte	 FLAT:00040E8F
SZMESSAGETEXT			  Byte	 FLAT:0418
SZOUTPUT			  Byte	 FLAT:00040F3C
SZWINDOWTITLE			  Byte	 FLAT:0517
TIDOBTAIN			  Dword	 FLAT:0666
TIDSUPPLY			  Dword	 FLAT:066A
TSIZE				  Number 00040000
UNITROWNEXT			  Near	 FLAT:0949
UPDATEHEIGHTPOSITION		  Near	 FLAT:1219
USBCANCELTRANSFER		  Near	 ----:---- Extern
USBCLOSE			  Near	 ----:---- Extern
USBCTRLMESSAGE			  Near	 ----:---- Extern
USBISOCLOSE			  Near	 ----:---- Extern
USBISOOPEN			  Near	 ----:---- Extern
USBOPEN				  Near	 ----:---- Extern
USBOPENSUCCESS			  Near	 FLAT:0DD5
USBQUERYDEVICEREPORT		  Near	 ----:---- Extern
USBQUERYNUMBERDEVICES		  Near	 ----:---- Extern
USBSTARTISOTRANSFER		  Near	 ----:---- Extern
USEHEADER			  Byte	 FLAT:00040FBC
USEMARKER			  Near	 FLAT:0A7A
USERESTART			  Dword	 FLAT:00040A69
VALIDZEROCOUNT			  Near	 FLAT:0809
VERIFYBITS0			  Near	 FLAT:0437
VERIFYBITS1			  Near	 FLAT:04BC
VERIFYBITS2			  Near	 FLAT:0521
VERIFYBITS3			  Near	 FLAT:05B8
VERIFYBITS4			  Near	 FLAT:0662
VERIFYCOUNTER			  Near	 FLAT:07F9
VERIFYHEADER			  Near	 FLAT:13FE
VERIFYPROPERDEVICE		  Near	 FLAT:1B95
VGA				  Number 0001
VIDEOMJPG			  Byte	 FLAT:00040FBD
VIDEOYUYV			  Byte	 FLAT:00040FBE
WINBEGINPAINT			  Near	 ----:---- Extern
WINCREATEMSGQUEUE		  Near	 ----:---- Extern
WINCREATESTDWINDOW		  Near	 ----:---- Extern
WINCREATEWINDOW			  Near	 ----:---- Extern
WINDEFWINDOWPROC		  Near	 ----:---- Extern
WINDESTROYMSGQUEUE		  Near	 ----:---- Extern
WINDESTROYWINDOW		  Near	 ----:---- Extern
WINDISPATCHMSG			  Near	 ----:---- Extern
WINENDPAINT			  Near	 ----:---- Extern
WINGETMSG			  Near	 ----:---- Extern
WININITIALIZE			  Near	 ----:---- Extern
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 89
Symbol Table



WININVALIDATERECT		  Near	 ----:---- Extern
WINLOADSTRING			  Near	 ----:---- Extern
WINMESSAGEBOX			  Near	 ----:---- Extern
WINOLDWINDOWPROC		  Dword	 FLAT:0682
WINPOSTMSG			  Near	 ----:---- Extern
WINPOSTQUEUEMSG			  Near	 ----:---- Extern
WINQUERYSYSVALUE		  Near	 ----:---- Extern
WINREGISTERCLASS		  Near	 ----:---- Extern
WINSETACTIVEWINDOW		  Near	 ----:---- Extern
WINSETWINDOWPOS			  Near	 ----:---- Extern
WINSUBCLASSWINDOW		  Near	 ----:---- Extern
WINTERMINATE			  Near	 ----:---- Extern
WRITER				  Near	 FLAT:0C38
XWINDOWSIZE			  Dword	 FLAT:0646
Y00				  Number 0008
Y01				  Number 000A
Y02				  Number 000A
Y03				  Number 000A
Y04				  Number 000B
Y05				  Number 000D
Y06				  Number 000F
Y07				  Number 0012
Y10				  Number 000A
Y11				  Number 000E
Y12				  Number 000E
Y13				  Number 000E
Y14				  Number 000E
Y15				  Number 000E
Y16				  Number 000E
Y17				  Number 000F
Y20				  Number 000A
Y21				  Number 000E
Y22				  Number 000E
Y23				  Number 000F
Y24				  Number 0011
Y25				  Number 0013
Y26				  Number 0016
Y27				  Number 001A
Y30				  Number 000A
Y31				  Number 000E
Y32				  Number 000F
Y33				  Number 0010
Y34				  Number 0012
Y35				  Number 0015
Y36				  Number 0018
Y37				  Number 001C
Y40				  Number 000B
Y41				  Number 000E
Y42				  Number 0011
Y43				  Number 0012
Y44				  Number 0014
Y45				  Number 0016
Y46				  Number 001A
Y47				  Number 001E
Y50				  Number 000D
Y51				  Number 000E
Y52				  Number 0013
Turbo Assembler	 Version 4.1	    03-08-14 18:26:15	    Page 90
Symbol Table



Y53				  Number 0015
Y54				  Number 0016
Y55				  Number 001A
Y56				  Number 001D
Y57				  Number 0022
Y60				  Number 000F
Y61				  Number 000E
Y62				  Number 0016
Y63				  Number 0018
Y64				  Number 001A
Y65				  Number 001D
Y66				  Number 0021
Y67				  Number 0026
Y70				  Number 0012
Y71				  Number 000F
Y72				  Number 001A
Y73				  Number 001C
Y74				  Number 001E
Y75				  Number 0022
Y76				  Number 0026
Y77				  Number 002A
YAC				  Word	 FLAT:000401D4
YAD				  Byte	 FLAT:0004044A
YAS				  Byte	 FLAT:00040124
YAT				  Byte	 FLAT:00040492
YBC				  Number 0EA747D8
YCC2RGB				  Near	 FLAT:094B
YDC				  Word	 FLAT:0004010C
YDD				  Byte	 FLAT:00040434
YDS				  Byte	 FLAT:00040100
YDT				  Byte	 FLAT:0004043C
YGC				  Number 4B160957
YQI				  Dword	 FLAT:00040334
YQT				  Dword	 FLAT:00040000
YRC				  Number 2642AED1
YUYV2RGB			  Near	 FLAT:1953
YWINDOWSIZE			  Dword	 FLAT:064A
YYO				  Byte	 FLAT:00040A6D
YZC				  Dword	 FLAT:00040FB4
YZC0				  Dword	 FLAT:00040F6C
YZC1				  Dword	 FLAT:00040F84
YZC2				  Dword	 FLAT:00040F9C
ZSOUTPUT			  Byte	 FLAT:00040F48
ZZO				  Byte	 FLAT:00040A24

Macro Name

QTABLE

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  32  2000 Para	  Stack	  STACK
  _BSS				  32  002EF6CE Dword  Public  BSS
  _DATA				  32  00040FC3 Dword  Public  DATA
FLAT				  Group
_TEXT				  32  1DCE Dword  Public  CODE
